dnl PVS autoconf input
dnl davesc Feb 2001

dnl This file must exist for configure to run
AC_MSG_CHECKING(for existence of src/pvs.lisp)
AC_INIT(src/pvs.lisp)

dnl Check for allegro path
AC_MSG_CHECKING(allegropath)
AC_ARG_WITH(allegropath, [ --with-allegro=/path/to/allegro6 ])
if test "x$with_allegro" = "x"; then
   ALLEGRODIR=/csl/allegro/allegro6.0
else
   ALLEGRODIR=$with_allegro
fi
if ! test -f $ALLEGRODIR/mlisp ; then
  echo
  AC_MSG_ERROR(Invalid allegropath - can't find $ALLEGRODIR/mlisp)
fi
AC_MSG_RESULT($ALLEGRODIR)
AC_SUBST(ALLEGRODIR)
	
dnl Giving pvspath is optional
AC_MSG_CHECKING(pvspath)
AC_ARG_WITH(pvspath, [ --with-pvspath=/path/to/pvs ])
if test "x$with_pvspath" = "x"; then
  PVSPATH=`pwd`
else
  PVSPATH=$with_pvspath
fi
if ! test -f $PVSPATH/pvs.in; then
  AC_MSG_ERROR(Invalid pvspath)
fi
AC_MSG_RESULT($PVSPATH)
AC_SUBST(PVSPATH)

dnl Check for programs required to build PVS
AC_CHECK_PROG(GCC,gcc,gcc,no)
if test "$GCC" = no ; then
	AC_MSG_ERROR(Cannot find gcc)
fi

AC_CHECK_PROG(AR,ar,ar,no)
if test "$AR" = no ; then
	AC_MSG_ERROR(Cannot find gcc)
fi

AC_CHECK_PROG(RANLIB,ranlib,ranlib,echo)
if test "$RANLIB" = echo ; then
	AC_MSG_WARN(Cannot find ranlib - assuming not required for this platform)
fi

AC_CHECK_PROG(EMACS,emacs,emacs,no)
if test "$EMACS" = no ; then
	AC_MSG_ERROR(Cannot find emacs)
fi

AC_CHECK_PROG(ETAGS,etags,etags,no)
if test "$ETAGS" = no ; then
	AC_MSG_ERROR(Cannot find etags)
fi

AC_CHECK_PROG(TAR,tar,tar,no)
if test "$TAR" = no ; then
	AC_MSG_ERROR(Cannot find tar)
fi
dnl should check it's GNU tar

AC_CHECK_PROG(RM,rm,rm,no)
if test "$RM" = no ; then
	AC_MSG_ERROR(Cannot find rm)
fi

dnl Get the platform to determine relevant Makefiles to update

PLATFORM=`./bin/pvs-platform`
export PLATFORM

# Finally create all the generated files
AC_OUTPUT(Makefile pvs src/make-allegro-pvs.lisp pvs.system ess/dist-ess.lisp ess/allegro-runtime.lisp doc/user-guide/Makefile doc/language/Makefile doc/prover/Makefile)

chmod a+x pvs
