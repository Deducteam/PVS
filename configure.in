dnl PVS autoconf input
dnl davesc Feb 2001

dnl This file must exist for configure to run
AC_MSG_CHECKING(for existence of src/pvs.lisp)
AC_INIT(src/pvs.lisp)

dnl Check user has given icspath.  
AC_MSG_CHECKING(path to ics decision procedure)
AC_ARG_WITH(ics, [ --with-ics=/path/to/ics ])
if ! test -f $with_ics/src/ics.ml ; then
  echo
  AC_MSG_ERROR(Please specify --with-ics=/path/to/ics)
fi
ICSPATH=$with_ics
AC_MSG_RESULT($ICSPATH)
ICSARCH=`$ICSPATH/bin/config.guess`
ICSLIB=$ICSPATH/lib/$ICSARCH
ICSOBJ=$ICSPATH/obj/$ICSARCH
AC_SUBST(ICSPATH)
AC_SUBST(ICSLIB)
AC_SUBST(ICSOBJ)

dnl Check for allegro path
AC_MSG_CHECKING(allegropath)
AC_ARG_WITH(allegropath, [ --with-allegro=/path/to/allegro ])
if test "x$with_allegro" = "x"; then
   ALLEGRODIR=/csl/allegro/allegro6.2
else
   ALLEGRODIR=$with_allegro
fi
changequote(<<, >>)dnl
ALLEGROLIB=`ls $ALLEGRODIR | grep "libacli[0-9]" | cut -c 4- | cut -d"." -f 1`
if test "x$ALLEGROLIB" = "x"; then
   ALLEGROLIB=`ls $ALLEGRODIR | grep "libacl[0-9]" | cut -c 4- | cut -d"." -f 1`
fi
changequote([, ])dnl
if test -f $ALLEGRODIR/mlisp ; then
   LISP=allegro6.2
   LISPEXE=mlisp
else   
   if test -f $ALLEGRODIR/lisp  ; then
   LISP=allegro5.0
   LISPEXE=lisp
   else
   echo
   AC_MSG_ERROR(Invalid allegropath - can't find $ALLEGRODIR/libacl\*.so)
   fi
fi
AC_MSG_RESULT($ALLEGRODIR)
AC_MSG_CHECKING(lisp verson)
LISPVERSION=`$ALLEGRODIR/$LISPEXE -e '(format t "~a" (lisp-implementation-version))' -kill | tail -1 | cut -d" " -f 1`
LISP=allegro$LISPVERSION				  
AC_MSG_RESULT($LISP)
AC_SUBST(ALLEGRODIR)
AC_SUBST(ALLEGROLIB)
AC_SUBST(LISP)
AC_SUBST(LISPEXE)
	
dnl Giving pvspath is optional
AC_MSG_CHECKING(pvspath)
AC_ARG_WITH(pvspath, [ --with-pvspath=/path/to/pvs ])
if test "x$with_pvspath" = "x"; then
  PVSPATH=`pwd`
else
  PVSPATH=$with_pvspath
fi
if ! test -f $PVSPATH/pvs.in; then
  AC_MSG_ERROR(Invalid pvspath)
fi
AC_MSG_RESULT($PVSPATH)
AC_SUBST(PVSPATH)

dnl Check for ICS library
AC_CHECK_FILE($ICSLIB/libics.so, , AC_MSG_ERROR(Cannot find $ICSLIB/libics.so; may need to rebuild ICS))

dnl Check for autogenerated ICS lisp interface
AC_CHECK_FILE($ICSOBJ/ics.lisp, , AC_MSG_ERROR(Cannot find $ICSOBJ/ics.lisp; may need to rebuild ICS))

dnl Check for programs required to build PVS
AC_CHECK_PROG(GCC,gcc,gcc,no)
if test "$GCC" = no ; then
	AC_MSG_ERROR(Cannot find gcc)
fi

AC_CHECK_PROG(AR,ar,ar,no)
if test "$AR" = no ; then
	AC_MSG_ERROR(Cannot find gcc)
fi

AC_CHECK_PROG(RANLIB,ranlib,ranlib,echo)
if test "$RANLIB" = echo ; then
	AC_MSG_WARN(Cannot find ranlib - assuming not required for this platform)
fi

AC_CHECK_PROG(EMACS,emacs,emacs,no)
if test "$EMACS" = no ; then
	AC_MSG_ERROR(Cannot find emacs)
fi

AC_CHECK_PROG(ETAGS,etags,etags,no)
if test "$ETAGS" = no ; then
	AC_MSG_ERROR(Cannot find etags)
fi

AC_CHECK_PROG(TAR,tar,tar,no)
if test "$TAR" = no ; then
	AC_MSG_ERROR(Cannot find tar)
fi
dnl should check it's GNU tar

AC_CHECK_PROG(RM,rm,rm,no)
if test "$RM" = no ; then
	AC_MSG_ERROR(Cannot find rm)
fi

dnl Get the platform to determine relevant Makefiles to update

PLATFORM=`./bin/pvs-platform`
export PLATFORM

# Finally create all the generated files
AC_OUTPUT(Makefile pvs src/make-allegro-pvs.lisp src/make-pvs.lisp pvs.system ess/dist-ess.lisp ess/allegro-runtime.lisp doc/user-guide/Makefile doc/language/Makefile doc/prover/Makefile)

chmod a+x pvs
