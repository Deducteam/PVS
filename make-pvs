#!/bin/sh
#
# use:  make-pvs -lisp LISP -image NAME [-runtime]
#
# Produce the PVS lisp save file.

pvspath=/project/pvs/pvs2.3

# Determine the architecture
opsys=`uname -s`
case $opsys in
  SunOS) majvers=`uname -r | cut -d"." -f1`
	 if [ $majvers = 4 ]
	    then echo "Can only build under Solaris or Redhat Linux"; exit 1
	 fi
	 arch=sun4
	 lisp=/pkg/allegro5.0/sol24/lisp
	 lispext=fasl;;
  Linux) if [ ! -f /etc/redhat-release ]
	    then echo "Can only build under Solaris or Redhat Linux"; exit 1
	 fi
	 arch=ix86
	 majvers=`cut -d" " -f2 /etc/redhat-release | cut -d"." -f1`
	 opsys=redhat
	 lisp=/pkg/allegro5.0/$opsys$majvers/lisp
	 lispext=lfasl;;
  *) echo "Can only build under Solaris or Redhat Linux"; exit 1;;
esac

imagepath=$pvspath/bin/$arch-$opsys$majvers

cmdline=""

# Extract the PVS-specific flags
while [ $# -gt 0 ]
do
  case $1 in
    -image) image="$2"
	    shift;;
    -runtime) runtimep=1;;
    *) echo "make-pvs: Unknown flag - $1"
       exit 1;;
  esac
  shift
done

if [ ! $runtimep ]; then full="-full"; else full=""; fi
# If the image variable hasn't been set, use the lisp name
if [ ! $image ]; then image=pvs-allegro${full}5.0; fi

pvsimage=$imagepath/$image

temp=/tmp/pvs-build

echo Making $image from $lisp

/bin/rm -rf ${temp} $imagepath
cat >${temp} <<eoi
#-allegro
(require :tpl-debug)
#-allegro
(load "$pvspath/pvs.system")
#-allegro
(operate-on-system 'pvs :lf)
#-allegro
(format t "~%Saving ${pvsimage}...")
#+lucid (disksave "${pvsimage}" :full-gc t)
#+gcl (progn (gbc t) (lisp:save "${pvsimage}"))
#+allegro
(excl:generate-application "$image" "$imagepath/"
    (list "$pvspath/make-allegro-pvs.lisp")
    :additional-arguments nil
    :additional-forms nil
    :additional-plus-arguments nil
    :autoload-warning t
    ;; :bundle-file nil
    ;; :c-heap-size nil
    ;; :c-heap-start nil
    :case-mode :case-insensitive-upper
    ;; :copy-shared-libraries nil
    :debug-on-error t
    ;; :destination-directory nil
    :discard-arglists nil
    :discard-compiler nil
    :discard-local-name-info nil
    :discard-source-file-info nil
    :discard-xref-info nil
    ;; :dribble-file nil
    :dst t
    :exit-after-image-build t
    :generate-fonts nil
    :include-clim nil
    ;; :include-common-graphics nil ;Windows
    :include-compiler t
    :include-composer nil
    :include-debugger t
    :include-devel-env t
    ;; :include-ide nil ;Windows
    :include-tpl t
    :include-xcw nil
    :internal-debug nil
    :lisp-heap-size 200000000
    :lisp-heap-start nil
    ;; :lisp-files nil
    :load-local-names-info nil
    :load-source-file-info t
    :load-xref-info t
    :newspace 4000000
    :oldspace 512000
    :opt-debug 1
    :opt-safety 1
    :opt-space 1
    :opt-speed 3
    ;; :pll-file nil
    ;; :pll-from-sys nil
    :post-load-form nil
    :pre-dump-form nil
    :pre-load-form nil
    :preserve-documentation-strings t
    :presto nil
    :presto-flush-to-code-file nil
    ;; :presto-lib nil
    ;; :print-startup-message t
    :read-init-files nil
    :record-source-file-info t
    :record-xref-info t
    :restart-app-function nil
    :restart-init-function nil
    :runtime nil
    :server-name nil
    ;; :show-window nil ;Windows
    ;; :splash-from-file nil ;Windows
    :temporary-directory "/usr/tmp/"
    :us-government nil
;;    :user-shared-libraries t
    :verbose t
    ;; :wait nil ;Windows
    )
eoi
  ${lisp} <${temp}
  /bin/rm -f ${temp}

echo "Done building $pvsimage"
