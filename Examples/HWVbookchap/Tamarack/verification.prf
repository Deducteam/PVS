(|verification| (|iteratehard_TCC1| "" (GROUND) (("" (SKOLEM!) (("" (APPLY (THEN (GROUND) (ASSERT))) NIL))))) (|iteratehard_TCC2| "" (TERMINATION-TCC) NIL) (I_TCC1 "" (SKOSIMP) (("" (TYPEPRED "vhs!1") (("" (AUTO-REWRITE-THEORIES ("verification" :EXCLUDE ("oracle")) "verification_rewrites[wordt, addrt]" ("soft[wordt, addrt]" :EXCLUDE ("softstep")) ("hard2[wordt, addrt]" :EXCLUDE ("hardstep"))) (("" (AUTO-REWRITE! "oracle") (("" (ASSERT) (("" (LIFT-IF) (("" (PROP) (("1" (RECORD) (("1" (ASSERT) NIL))) ("2" (RECORD) (("2" (ASSERT) NIL))) ("3" (RECORD) (("3" (ASSERT) NIL))) ("4" (RECORD) (("4" (ASSERT) NIL))) ("5" (RECORD) (("5" (ASSERT) NIL))) ("6" (RECORD) (("6" (ASSERT) NIL))) ("7" (RECORD) (("7" (ASSERT) NIL))) ("8" (RECORD) (("8" (ASSERT) NIL))))))))))))))))) (|mem_abs| "" (SKOSIMP) (("" (EXPAND "abs") (("" (PROPAX) NIL))))) (|pc_abs| "" (SKOSIMP) (("" (EXPAND "abs") (("" (PROPAX) NIL))))) (|acc_abs| "" (SKOSIMP) (("" (EXPAND "abs") (("" (PROPAX) NIL))))) (|verif_TCC1| "" (EXPAND "surjective?") (("" (SKOSIMP) (("" (INST 1 "(epsilon[hard_statet](LAMBDA (hs: hard_statet): TRUE))
                       WITH [mpcp := 0,
                             memp := mempart(y!1),
                             pcp  := pcpart(y!1),
                             accp := accpart(y!1)]") (("1" (EXPAND "abs") (("1" (ASSERT) (("1" (APPLY-EXTENSIONALITY) NIL))))) ("2" (EXPAND "start_condn") (("2" (PROPAX) NIL))))))))) (|verif_TCC2| "" (SKOSIMP) (("" (TYPEPRED "s!1") (("" (APPLY (THEN@ (AUTO-REWRITE! "oracle" "abs" "I" "start_condn") (ASSERT) (LIFT-IF) (ASSERT -) (AUTO-REWRITE -1) (HIDE -1) (THEN* (PROP) (THEN@ (AUTO-REWRITE-THEORIES "verification" "verification_rewrites[wordt, addrt]" "soft[wordt, addrt]" ("hard2[wordt, addrt]" :EXCLUDE ("hardstep" "microrom")) "microrom_rewrite[wordt, addrt]") (RECORD) (REPEAT (ASSERT)))))) NIL))))))
