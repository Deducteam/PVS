(SpecPredicates
 (DirtyCacheConsistent_TCC1 0
  (DirtyCacheConsistent_TCC1-1 nil 3446682769 3506928683
   ("" (grind) nil nil) proved
   ((length def-decl "nat" list_props nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil))
   513 480 nil nil))
 (DirtyCacheConsistent_TCC2 0
  (DirtyCacheConsistent_TCC2-1 nil 3446682769 3506928683
   ("" (grind) nil nil) proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   557 526 nil nil))
 (DirtyCacheConsistent_TCC3 0
  (DirtyCacheConsistent_TCC3-1 nil 3446682769 3506928684
   ("" (grind) nil nil) proved
   ((length def-decl "nat" list_props nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil))
   502 476 nil nil))
 (DirtyCacheConsistent_TCC4 0
  (DirtyCacheConsistent_TCC4-1 nil 3446682769 3506928684
   ("" (grind) nil nil) proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   561 526 nil nil))
 (NonDirtyCache_TCC1 0
  (NonDirtyCache_TCC1-1 nil 3446682769 3506928685 ("" (grind) nil nil)
   proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   567 536 nil nil))
 (NonDirtyCache_TCC2 0
  (NonDirtyCache_TCC2-1 nil 3446682769 3506928685 ("" (grind) nil nil)
   proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   629 530 nil nil))
 (NonDirtyCache_TCC3 0
  (NonDirtyCache_TCC3-1 nil 3446682769 3506928686 ("" (grind) nil nil)
   proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   571 526 nil nil))
 (NonDirtyCache_TCC4 0
  (NonDirtyCache_TCC4-1 nil 3446682769 3506928687 ("" (grind) nil nil)
   proved
   ((sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (length def-decl "nat" list_props nil))
   597 520 nil nil)))

