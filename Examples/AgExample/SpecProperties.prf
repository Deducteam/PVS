(SpecProperties
 (IMP_FODL_lemmas_TCC1 0
  (IMP_FODL_lemmas_TCC1-5 "" 3754422858
   ("" (lemma "carrier_zero") (("" (inst?) nil nil)) nil) nil shostak
   (IMP_FODL_lemmas existence "" "Carrier"))
  (IMP_FODL_lemmas_TCC1-4 "" 3594713197
   ("" (skosimp*)
    ((""
      (case "t!1 = Carrier OR t!1 = Addr OR t!1 = Data OR t!1 = Dirty OR t!1 = Cache OR t!1 = Memory OR t!1 = DirtyCache OR t!1 = DirtyCacheSystem")
      (("1" (prop)
        (("1" (inst 1 "zero")
          (("1" (expand "mTypePred")
            (("1" (smash) (("1" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("2"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Addr_Element) | TRUE})), element(epsilon({e: (Addr_Element) | TRUE})))")
          (("1" (prop)
            (("1" (hide -1)
              (("1" (use "carrier_point_dense")
                (("1"
                  (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                                        wp`1 =
                                                                         element[Element]
                                                                             (epsilon[(Addr_Element)]
                                                                                  ({e: (Addr_Element) | TRUE}))
                                                                         AND
                                                                         wp`2 =
                                                                          element[Element]
                                                                              (epsilon[(Addr_Element)]
                                                                                   ({e: (Addr_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                                        x =
                                                                         (element[Element]
                                                                              (epsilon[(Addr_Element)]
                                                                                   ({e: (Addr_Element) | TRUE})),
                                                                          element[Element]
                                                                              (epsilon[(Addr_Element)]
                                                                                   ({e: (Addr_Element) | TRUE}))))")
                  (("1" (replace -1 -2) (("1" (propax) nil nil)) nil)
                   ("2" (hide -1 2)
                    (("2" (apply-extensionality)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (hide -1)
                            (("1" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide -1 2)
                    (("3" (skosimp*)
                      (("3" (hide -1)
                        (("3" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (hide -1 2)
                    (("4" (skosimp*)
                      (("4" (use "non_empty_Addr") nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2) (("2" (use "non_empty_Addr") nil nil))
                  nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Addr") nil nil)) nil)
                       ("2" (use "non_empty_Addr") nil nil))
                      nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert)
                            (("1" (assert :quant-simp? t)
                              (("1" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert :quant-simp? t)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (skosimp*) nil nil)
                           ("2" (skosimp*) nil nil)
                           ("3"
                            (inst 1 "element[Element]
                               (epsilon[(Addr_Element)]({e: (Addr_Element) | TRUE}))")
                            (("1" (assert :quant-simp? t) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("6" (hide 2)
                        (("6" (skosimp*)
                          (("6" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Addr") nil nil)) nil))
          nil)
         ("3"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Data_Element) | TRUE})), element(epsilon({e: (Data_Element) | TRUE})))")
          (("1" (prop)
            (("1" (use "carrier_point_dense")
              (("1"
                (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                                        wp`1 =
                                                                         element[Element]
                                                                             (epsilon[(Data_Element)]
                                                                                  ({e: (Data_Element) | TRUE}))
                                                                         AND
                                                                         wp`2 =
                                                                          element[Element]
                                                                              (epsilon[(Data_Element)]
                                                                                   ({e: (Data_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                                        x =
                                                                         (element[Element]
                                                                              (epsilon[(Data_Element)]
                                                                                   ({e: (Data_Element) | TRUE})),
                                                                          element[Element]
                                                                              (epsilon[(Data_Element)]
                                                                                   ({e: (Data_Element) | TRUE}))))")
                (("1" (replace -1) (("1" (propax) nil nil)) nil)
                 ("2" (hide -1 2)
                  (("2" (apply-extensionality 1 :hide? t)
                    (("1" (skosimp*)
                      (("1" (use "non_empty_Data") nil nil)) nil)
                     ("2" (skosimp*)
                      (("2" (use "non_empty_Data") nil nil)) nil))
                    nil))
                  nil)
                 ("3" (hide -1 2)
                  (("3" (skosimp*)
                    (("3" (use "non_empty_Data") nil nil)) nil))
                  nil)
                 ("4" (hide -1 2)
                  (("4" (skosimp*)
                    (("4" (use "non_empty_Data") nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (use "non_empty_Data") nil nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash :quant-simp? t)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Data") nil nil)) nil)
                       ("2" (use "non_empty_Data") nil nil))
                      nil)
                     ("2" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("3" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (ground) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("4" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t) nil nil)
                           ("2" (assert :quant-simp? t) nil nil)
                           ("3" (inst?)
                            (("3" (assert :quant-simp? t) nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil)
                       ("6" (skosimp*)
                        (("6" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Data") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Data") nil nil)) nil))
          nil)
         ("4" (inst 1 "zero")
          (("4" (expand "mTypePred")
            (("4" (smash) (("4" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("5" (inst 1 "zero")
          (("5" (expand "mTypePred")
            (("5" (smash) (("5" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("6" (inst 1 "zero")
          (("6" (expand "mTypePred")
            (("6" (smash) (("6" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("7"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("7" (expand "mTypePred")
            (("7" (smash)
              (("7" (purify-fa 1 t)
                (("7" (expand "extend")
                  (("7" (inst 1 "zero" "zero")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -5 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -5 t) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t) nil nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("8" (expand "mTypePred")
            (("8" (smash)
              (("8" (purify-fa 1 t)
                (("8" (expand "extend")
                  (("8"
                    (inst 1 "zero"
                     "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -5 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -5 t)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t)
                      (("2" (inst 1 "zero" "zero")
                        (("1" (prop)
                          (("1" (apply-extensionality 1 :hide? t)
                            (("1" (expand "extend")
                              (("1"
                                (prop)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (smash :quant-simp? t)
                                    (("1" (purify-fa -5 t) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp*)
                                  (("2"
                                    (smash :quant-simp? t)
                                    (("2" (purify-fa -5 t) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "extend")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (purify-fa 1 t) nil nil)
                         ("3" (purify-fa 1 t) nil nil))
                        nil))
                      nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (smash :quant-simp? t) nil nil))
      nil))
    nil)
   ((FALSE const-decl "bool" booleans nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (carrier_zero formula-decl nil FA_semantic nil))
   shostak (IMP_FODL_lemmas existence "" "Carrier"))
  (IMP_FODL_lemmas_TCC1-3 "" 3355369821
   ("" (skosimp*)
    ((""
      (case "t!1 = Carrier OR t!1 = Addr OR t!1 = Data OR t!1 = Dirty OR t!1 = Cache OR t!1 = Memory OR t!1 = DirtyCache OR t!1 = DirtyCacheSystem")
      (("1" (prop)
        (("1" (inst 1 "zero")
          (("1" (expand "mTypePred")
            (("1" (smash) (("1" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("2"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Addr_Element) | TRUE})), element(epsilon({e: (Addr_Element) | TRUE})))")
          (("1" (prop)
            (("1" (hide -1)
              (("1" (use "carrier_point_dense")
                (("1"
                  (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                       wp`1 =
                                                        element[Element]
                                                            (epsilon[(Addr_Element)]
                                                                 ({e: (Addr_Element) | TRUE}))
                                                        AND
                                                        wp`2 =
                                                         element[Element]
                                                             (epsilon[(Addr_Element)]
                                                                  ({e: (Addr_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                       x =
                                                        (element[Element]
                                                             (epsilon[(Addr_Element)]
                                                                  ({e: (Addr_Element) | TRUE})),
                                                         element[Element]
                                                             (epsilon[(Addr_Element)]
                                                                  ({e: (Addr_Element) | TRUE}))))")
                  (("1" (replace -1 -2) (("1" (propax) nil nil)) nil)
                   ("2" (hide -1 2)
                    (("2" (apply-extensionality)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (hide -1)
                            (("1" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide -1 2)
                    (("3" (skosimp*)
                      (("3" (hide -1)
                        (("3" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (hide -1 2)
                    (("4" (skosimp*)
                      (("4" (use "non_empty_Addr") nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2) (("2" (use "non_empty_Addr") nil nil))
                  nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Addr") nil nil)) nil)
                       ("2" (use "non_empty_Addr") nil nil))
                      nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert)
                            (("1" (assert :quant-simp? t)
                              (("1" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert :quant-simp? t)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (skosimp*) nil nil)
                           ("2" (skosimp*) nil nil)
                           ("3"
                            (inst 1 "element[Element]
               (epsilon[(Addr_Element)]({e: (Addr_Element) | TRUE}))")
                            (("1" (assert :quant-simp? t) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("6" (hide 2)
                        (("6" (skosimp*)
                          (("6" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Addr") nil nil)) nil))
          nil)
         ("3"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Data_Element) | TRUE})), element(epsilon({e: (Data_Element) | TRUE})))")
          (("1" (prop)
            (("1" (use "carrier_point_dense")
              (("1"
                (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                       wp`1 =
                                                        element[Element]
                                                            (epsilon[(Data_Element)]
                                                                 ({e: (Data_Element) | TRUE}))
                                                        AND
                                                        wp`2 =
                                                         element[Element]
                                                             (epsilon[(Data_Element)]
                                                                  ({e: (Data_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                       x =
                                                        (element[Element]
                                                             (epsilon[(Data_Element)]
                                                                  ({e: (Data_Element) | TRUE})),
                                                         element[Element]
                                                             (epsilon[(Data_Element)]
                                                                  ({e: (Data_Element) | TRUE}))))")
                (("1" (replace -1) (("1" (propax) nil nil)) nil)
                 ("2" (hide -1 2)
                  (("2" (apply-extensionality 1 :hide? t)
                    (("1" (skosimp*)
                      (("1" (use "non_empty_Data") nil nil)) nil)
                     ("2" (skosimp*)
                      (("2" (use "non_empty_Data") nil nil)) nil))
                    nil))
                  nil)
                 ("3" (hide -1 2)
                  (("3" (skosimp*)
                    (("3" (use "non_empty_Data") nil nil)) nil))
                  nil)
                 ("4" (hide -1 2)
                  (("4" (skosimp*)
                    (("4" (use "non_empty_Data") nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (use "non_empty_Data") nil nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash :quant-simp? t)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Data") nil nil)) nil)
                       ("2" (use "non_empty_Data") nil nil))
                      nil)
                     ("2" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("3" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (ground) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("4" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t) nil nil)
                           ("2" (assert :quant-simp? t) nil nil)
                           ("3" (inst?)
                            (("3" (assert :quant-simp? t) nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil)
                       ("6" (skosimp*)
                        (("6" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Data") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Data") nil nil)) nil))
          nil)
         ("4" (inst 1 "zero")
          (("4" (expand "mTypePred")
            (("4" (smash) (("4" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("5" (inst 1 "zero")
          (("5" (expand "mTypePred")
            (("5" (smash) (("5" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("6" (inst 1 "zero")
          (("6" (expand "mTypePred")
            (("6" (smash) (("6" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("7"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("7" (expand "mTypePred")
            (("7" (smash)
              (("7" (purify-fa 1 t)
                (("7" (expand "extend")
                  (("7" (inst 1 "zero" "zero")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -6 t) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t) nil nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("8" (expand "mTypePred")
            (("8" (smash)
              (("8" (purify-fa 1 t)
                (("8" (expand "extend")
                  (("8"
                    (inst 1 "zero"
                     "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -6 t)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t)
                      (("2" (inst 1 "zero" "zero")
                        (("1" (prop)
                          (("1" (apply-extensionality 1 :hide? t)
                            (("1" (expand "extend")
                              (("1"
                                (prop)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (smash :quant-simp? t)
                                    (("1" (purify-fa -6 t) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp*)
                                  (("2"
                                    (smash :quant-simp? t)
                                    (("2" (purify-fa -6 t) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "extend")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (purify-fa 1 t) nil nil)
                         ("3" (purify-fa 1 t) nil nil))
                        nil))
                      nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (smash :quant-simp? t) nil nil))
      nil))
    nil)
   ((DirtyCacheSystem adt-constructor-decl "(DirtyCacheSystem?)"
     FA_semantic nil)
    (DirtyCacheSystem? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (DirtyCache adt-constructor-decl "(DirtyCache?)" FA_semantic nil)
    (DirtyCache? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (Memory adt-constructor-decl "(Memory?)" FA_semantic nil)
    (Memory? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Cache adt-constructor-decl "(Cache?)" FA_semantic nil)
    (Cache? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Dirty adt-constructor-decl "(Dirty?)" FA_semantic nil)
    (Dirty? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Data adt-constructor-decl "(Data?)" FA_semantic nil)
    (Data? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Addr adt-constructor-decl "(Addr?)" FA_semantic nil)
    (Addr? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Carrier adt-constructor-decl "(Carrier?)" FA_semantic nil)
    (Carrier? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TypePred type-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "Carrier" FA_semantic nil)
    (inr const-decl "Carrier" FA_semantic nil)
    (one_prime_C_1 const-decl "Carrier" FA_semantic nil)
    (inl const-decl "Carrier" FA_semantic nil)
    (Pi_2 const-decl "Carrier" FA_semantic nil)
    (one_prime_C_0 const-decl "Carrier" FA_semantic nil)
    (Pi_1 const-decl "Carrier" FA_semantic nil)
    (fork const-decl "Carrier" FA_semantic nil)
    (extend const-decl "R" extend nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (pair? adt-recognizer-decl "[FA_Element -> boolean]" FA_Element_adt
     nil)
    (el0 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_0 const-decl "Element" FA_semantic nil)
    (el1 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_1 const-decl "Element" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (C_0 const-decl "Carrier" FA_semantic nil)
    (C_1 const-decl "Carrier" FA_semantic nil)
    (Dirty const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Data_Element const-decl "PRED[Element]" FA_semantic nil)
    (Data const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Data const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (non_empty_Data formula-decl nil FA_semantic nil)
    (TRUE const-decl "bool" booleans nil)
    (epsilon const-decl "T" epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_Addr formula-decl nil FA_semantic nil)
    (carrier_point_dense formula-decl nil FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (Carrier const-decl "PRED[Carrier]" FA_semantic nil))
   shostak (IMP_FODL_lemmas existence "" "Carrier"))
  (IMP_FODL_lemmas_TCC1-2 "Changed proof" 3295900414
   ("" (skosimp*)
    ((""
      (case "t!1 = Carrier OR t!1 = Addr OR t!1 = Data OR t!1 = Dirty OR t!1 = Cache OR t!1 = Memory OR t!1 = DirtyCache OR t!1 = DirtyCacheSystem")
      (("1" (prop)
        (("1" (inst 1 "zero")
          (("1" (expand "mTypePred")
            (("1" (smash) (("1" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("2"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Addr_Element) | TRUE})), element(epsilon({e: (Addr_Element) | TRUE})))")
          (("1" (prop)
            (("1" (hide -1)
              (("1" (use "carrier_point_dense")
                (("1"
                  (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                      wp`1 =
                                       element[Element]
                                           (epsilon[(Addr_Element)]
                                                ({e: (Addr_Element) | TRUE}))
                                       AND
                                       wp`2 =
                                        element[Element]
                                            (epsilon[(Addr_Element)]
                                                 ({e: (Addr_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                      x =
                                       (element[Element]
                                            (epsilon[(Addr_Element)]
                                                 ({e: (Addr_Element) | TRUE})),
                                        element[Element]
                                            (epsilon[(Addr_Element)]
                                                 ({e: (Addr_Element) | TRUE}))))")
                  (("1" (replace -1 -2) (("1" (propax) nil nil)) nil)
                   ("2" (hide -1 2)
                    (("2" (apply-extensionality)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (hide -1)
                            (("1" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide -1 2)
                    (("3" (skosimp*)
                      (("3" (hide -1)
                        (("3" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (hide -1 2)
                    (("4" (skosimp*)
                      (("4" (use "non_empty_Addr") nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2) (("2" (use "non_empty_Addr") nil nil))
                  nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Addr") nil nil)) nil)
                       ("2" (use "non_empty_Addr") nil nil))
                      nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Addr") nil nil)) nil))
          nil)
         ("3"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Data_Element) | TRUE})), element(epsilon({e: (Data_Element) | TRUE})))")
          (("1" (prop)
            (("1" (use "carrier_point_dense")
              (("1"
                (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                      wp`1 =
                                       element[Element]
                                           (epsilon[(Data_Element)]
                                                ({e: (Data_Element) | TRUE}))
                                       AND
                                       wp`2 =
                                        element[Element]
                                            (epsilon[(Data_Element)]
                                                 ({e: (Data_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                      x =
                                       (element[Element]
                                            (epsilon[(Data_Element)]
                                                 ({e: (Data_Element) | TRUE})),
                                        element[Element]
                                            (epsilon[(Data_Element)]
                                                 ({e: (Data_Element) | TRUE}))))")
                (("1" (replace -1) (("1" (propax) nil nil)) nil)
                 ("2" (hide -1 2)
                  (("2" (apply-extensionality 1 :hide? t)
                    (("1" (skosimp*)
                      (("1" (use "non_empty_Data") nil nil)) nil)
                     ("2" (skosimp*)
                      (("2" (use "non_empty_Data") nil nil)) nil))
                    nil))
                  nil)
                 ("3" (hide -1 2)
                  (("3" (skosimp*)
                    (("3" (use "non_empty_Data") nil nil)) nil))
                  nil)
                 ("4" (hide -1 2)
                  (("4" (skosimp*)
                    (("4" (use "non_empty_Data") nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (use "non_empty_Data") nil nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash :quant-simp? t)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Data") nil nil)) nil)
                       ("2" (use "non_empty_Data") nil nil))
                      nil)
                     ("2" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("3" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("4" (apply-extensionality 1 :hide? t)
                      (("1" (skosimp*)
                        (("1" (use "non_empty_Data") nil nil)) nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Data") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Data") nil nil)) nil))
          nil)
         ("4" (inst 1 "zero")
          (("4" (expand "mTypePred")
            (("4" (smash) (("4" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("5" (inst 1 "zero")
          (("5" (expand "mTypePred")
            (("5" (smash) (("5" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("6" (inst 1 "zero")
          (("6" (expand "mTypePred")
            (("6" (smash) (("6" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("7"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("7" (expand "mTypePred")
            (("7" (smash)
              (("7" (purify-fa 1 t)
                (("7" (expand "extend")
                  (("7" (inst 1 "zero" "zero")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -6 t) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t) nil nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("8" (expand "mTypePred")
            (("8" (smash)
              (("8" (purify-fa 1 t)
                (("8" (expand "extend")
                  (("8"
                    (inst 1 "zero"
                     "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -6 t)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t)
                      (("2" (inst 1 "zero" "zero")
                        (("1" (prop)
                          (("1" (apply-extensionality 1 :hide? t)
                            (("1" (expand "extend")
                              (("1"
                                (prop)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (smash :quant-simp? t)
                                    (("1" (purify-fa -6 t) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp*)
                                  (("2"
                                    (smash :quant-simp? t)
                                    (("2" (purify-fa -6 t) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "extend")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (purify-fa 1 t) nil nil)
                         ("3" (purify-fa 1 t) nil nil))
                        nil))
                      nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (smash :quant-simp? t) nil nil))
      nil))
    nil)
   ((DirtyCacheSystem adt-constructor-decl "(DirtyCacheSystem?)"
     FA_semantic nil)
    (DirtyCacheSystem? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (DirtyCache adt-constructor-decl "(DirtyCache?)" FA_semantic nil)
    (DirtyCache? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (Memory adt-constructor-decl "(Memory?)" FA_semantic nil)
    (Memory? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Cache adt-constructor-decl "(Cache?)" FA_semantic nil)
    (Cache? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Dirty adt-constructor-decl "(Dirty?)" FA_semantic nil)
    (Dirty? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Data adt-constructor-decl "(Data?)" FA_semantic nil)
    (Data? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Addr adt-constructor-decl "(Addr?)" FA_semantic nil)
    (Addr? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Carrier adt-constructor-decl "(Carrier?)" FA_semantic nil)
    (Carrier? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TypePred type-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "Carrier" FA_semantic nil)
    (fork const-decl "Carrier" FA_semantic nil)
    (Pi_1 const-decl "Carrier" FA_semantic nil)
    (one_prime_C_0 const-decl "Carrier" FA_semantic nil)
    (Pi_2 const-decl "Carrier" FA_semantic nil)
    (inl const-decl "Carrier" FA_semantic nil)
    (one_prime_C_1 const-decl "Carrier" FA_semantic nil)
    (inr const-decl "Carrier" FA_semantic nil)
    (extend const-decl "R" extend nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (pair? adt-recognizer-decl "[FA_Element -> boolean]" FA_Element_adt
     nil)
    (el0 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_0 const-decl "Element" FA_semantic nil)
    (el1 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_1 const-decl "Element" FA_semantic nil)
    (Cache const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (Dirty const-decl "Carrier" FA_semantic nil)
    (C_1 const-decl "Carrier" FA_semantic nil)
    (C_0 const-decl "Carrier" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Data_Element const-decl "PRED[Element]" FA_semantic nil)
    (Data const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Data const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (non_empty_Data formula-decl nil FA_semantic nil)
    (TRUE const-decl "bool" booleans nil)
    (epsilon const-decl "T" epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_Addr formula-decl nil FA_semantic nil)
    (carrier_point_dense formula-decl nil FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (Carrier const-decl "PRED[Carrier]" FA_semantic nil))
   shostak (IMP_FODL_lemmas existence "" "Carrier"))
  (IMP_FODL_lemmas_TCC1-1 nil 3295306029
   ("" (skosimp*)
    ((""
      (case "t!1 = Carrier OR t!1 = Addr OR t!1 = Data OR t!1 = Dirty OR t!1 = Cache OR t!1 = Memory OR t!1 = DirtyCache OR t!1 = DirtyCacheSystem")
      (("1" (prop)
        (("1" (inst 1 "zero")
          (("1" (expand "mTypePred")
            (("1" (smash) (("1" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("2"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Addr_Element) | TRUE})), element(epsilon({e: (Addr_Element) | TRUE})))")
          (("1" (prop)
            (("1" (hide -1)
              (("1" (use "carrier_point_dense")
                (("1"
                  (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                     wp`1 =
                      element[Element]
                          (epsilon[(Addr_Element)]
                               ({e: (Addr_Element) | TRUE}))
                      AND
                      wp`2 =
                       element[Element]
                           (epsilon[(Addr_Element)]
                                ({e: (Addr_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                     x =
                      (element[Element]
                           (epsilon[(Addr_Element)]
                                ({e: (Addr_Element) | TRUE})),
                       element[Element]
                           (epsilon[(Addr_Element)]
                                ({e: (Addr_Element) | TRUE}))))")
                  (("1" (replace -1 -2) (("1" (propax) nil nil)) nil)
                   ("2" (hide -1 2)
                    (("2" (apply-extensionality)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (hide -1)
                            (("1" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide -1 2)
                    (("3" (skosimp*)
                      (("3" (hide -1)
                        (("3" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (hide -1 2)
                    (("4" (skosimp*)
                      (("4" (use "non_empty_Addr") nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2) (("2" (use "non_empty_Addr") nil nil))
                  nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (use "non_empty_Addr") nil nil)) nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (replace -1)
                            (("1" (replace -2) (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (replace -1)
                            (("1" (replace -2) (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "epsilon({e: (Addr_Element) | TRUE})")
                            (("1" (prop) (("1" (assert) nil nil)) nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil)
                           ("2" (replace -1)
                            (("2" (replace -2) (("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Addr") nil nil)) nil))
          nil)
         ("3"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Data_Element) | TRUE})), element(epsilon({e: (Data_Element) | TRUE})))")
          (("1" (prop)
            (("1" (use "carrier_point_dense")
              (("1"
                (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                     wp`1 =
                      element[Element]
                          (epsilon[(Data_Element)]
                               ({e: (Data_Element) | TRUE}))
                      AND
                      wp`2 =
                       element[Element]
                           (epsilon[(Data_Element)]
                                ({e: (Data_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                     x =
                      (element[Element]
                           (epsilon[(Data_Element)]
                                ({e: (Data_Element) | TRUE})),
                       element[Element]
                           (epsilon[(Data_Element)]
                                ({e: (Data_Element) | TRUE}))))")
                (("1" (replace -1) (("1" (propax) nil nil)) nil)
                 ("2" (hide -1 2)
                  (("2" (apply-extensionality 1)
                    (("1" (hide 2)
                      (("1" (skosimp*)
                        (("1" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("3" (hide -1 2)
                  (("3" (skosimp*)
                    (("3" (use "non_empty_Data") nil nil)) nil))
                  nil)
                 ("4" (hide -1 2)
                  (("4" (skosimp*)
                    (("4" (use "non_empty_Data") nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (use "non_empty_Data") nil nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (use "non_empty_Data") nil nil)) nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (replace -1)
                            (("1" (replace -2) (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Data") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Data") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (replace -1)
                            (("1" (replace -2) (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Data") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Data") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (use "non_empty_Data") nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Data") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1"
                            (inst 1
                             "epsilon({e: (Data_Element) | TRUE})")
                            (("1" (prop) (("1" (assert) nil nil)) nil)
                             ("2" (use "non_empty_Data") nil nil))
                            nil)
                           ("2" (replace -1)
                            (("2" (replace -2) (("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Data") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Data") nil nil)) nil))
          nil)
         ("4" (inst 1 "zero")
          (("4" (expand "mTypePred")
            (("4" (smash) (("4" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("5" (inst 1 "zero")
          (("5" (expand "mTypePred")
            (("5" (smash) (("5" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("6" (inst 1 "zero")
          (("6" (expand "mTypePred")
            (("6" (smash) (("6" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("7"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("7" (expand "mTypePred")
            (("7" (smash)
              (("7" (purify-fa 1 t)
                (("7" (expand "extend")
                  (("7" (inst 1 "zero" "zero")
                    (("1" (apply-extensionality 1)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash)
                            (("2" (purify-fa -6 t) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t) nil nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("8" (expand "mTypePred")
            (("8" (smash)
              (("8" (purify-fa 1 t)
                (("8" (expand "extend")
                  (("8"
                    (inst 1 "zero"
                     "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
                    (("1" (apply-extensionality 1)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash)
                            (("1" (purify-fa -6 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash)
                            (("2" (purify-fa -6 t)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t)
                      (("2" (inst 1 "zero" "zero")
                        (("1" (prop)
                          (("1" (apply-extensionality 1)
                            (("1" (hide 2)
                              (("1"
                                (expand "extend")
                                (("1"
                                  (prop)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (smash)
                                      (("1" (purify-fa -6 t) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (skosimp*)
                                    (("2"
                                      (smash)
                                      (("2" (purify-fa -6 t) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (apply-extensionality 1)
                            (("2" (hide 2)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (purify-fa 1 t) nil nil)
                         ("3" (purify-fa 1 t) nil nil))
                        nil))
                      nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (smash) nil nil))
      nil))
    nil)
   ((DirtyCacheSystem adt-constructor-decl "(DirtyCacheSystem?)"
     FA_semantic nil)
    (DirtyCacheSystem? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (DirtyCache adt-constructor-decl "(DirtyCache?)" FA_semantic nil)
    (DirtyCache? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (Memory adt-constructor-decl "(Memory?)" FA_semantic nil)
    (Memory? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Cache adt-constructor-decl "(Cache?)" FA_semantic nil)
    (Cache? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Dirty adt-constructor-decl "(Dirty?)" FA_semantic nil)
    (Dirty? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Data adt-constructor-decl "(Data?)" FA_semantic nil)
    (Data? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Addr adt-constructor-decl "(Addr?)" FA_semantic nil)
    (Addr? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Carrier adt-constructor-decl "(Carrier?)" FA_semantic nil)
    (Carrier? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TypePred type-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "Carrier" FA_semantic nil)
    (inr const-decl "Carrier" FA_semantic nil)
    (one_prime_C_1 const-decl "Carrier" FA_semantic nil)
    (inl const-decl "Carrier" FA_semantic nil)
    (Pi_2 const-decl "Carrier" FA_semantic nil)
    (one_prime_C_0 const-decl "Carrier" FA_semantic nil)
    (Pi_1 const-decl "Carrier" FA_semantic nil)
    (fork const-decl "Carrier" FA_semantic nil)
    (extend const-decl "R" extend nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (pair? adt-recognizer-decl "[FA_Element -> boolean]" FA_Element_adt
     nil)
    (el0 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_0 const-decl "Element" FA_semantic nil)
    (el1 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_1 const-decl "Element" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (C_0 const-decl "Carrier" FA_semantic nil)
    (C_1 const-decl "Carrier" FA_semantic nil)
    (Dirty const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Data_Element const-decl "PRED[Element]" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (one_prime_Data const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[FA_Element]" FA_semantic nil)
    (non_empty_Data formula-decl nil FA_semantic nil)
    (TRUE const-decl "bool" booleans nil)
    (epsilon const-decl "T" epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_Addr formula-decl nil FA_semantic nil)
    (carrier_point_dense formula-decl nil FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (Carrier const-decl "PRED[Carrier]" FA_semantic nil))
   nil (IMP_FODL_lemmas existence "" "Carrier")))
 (IMP_FODL_lemmas_TCC2 0
  (IMP_FODL_lemmas_TCC2-1 nil 3594689128
   ("" (skosimp*)
    ((""
      (case "t!1 = Carrier OR t!1 = Addr OR t!1 = Data OR t!1 = Dirty OR t!1 = Cache OR t!1 = Memory OR t!1 = DirtyCache OR t!1 = DirtyCacheSystem")
      (("1" (prop)
        (("1" (inst 1 "zero")
          (("1" (expand "mTypePred")
            (("1" (smash) (("1" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("2"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Addr_Element) | TRUE})), element(epsilon({e: (Addr_Element) | TRUE})))")
          (("1" (prop)
            (("1" (hide -1)
              (("1" (use "carrier_point_dense")
                (("1"
                  (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                                                         wp`1 =
                                                                                          element[Element]
                                                                                              (epsilon[(Addr_Element)]
                                                                                                   ({e: (Addr_Element) | TRUE}))
                                                                                          AND
                                                                                          wp`2 =
                                                                                           element[Element]
                                                                                               (epsilon[(Addr_Element)]
                                                                                                    ({e: (Addr_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                                                         x =
                                                                                          (element[Element]
                                                                                               (epsilon[(Addr_Element)]
                                                                                                    ({e: (Addr_Element) | TRUE})),
                                                                                           element[Element]
                                                                                               (epsilon[(Addr_Element)]
                                                                                                    ({e: (Addr_Element) | TRUE}))))")
                  (("1" (replace -1 -2) (("1" (propax) nil nil)) nil)
                   ("2" (hide -1 2)
                    (("2" (apply-extensionality)
                      (("1" (hide 2)
                        (("1" (skosimp*)
                          (("1" (hide -1)
                            (("1" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide -1 2)
                    (("3" (skosimp*)
                      (("3" (hide -1)
                        (("3" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (hide -1 2)
                    (("4" (skosimp*)
                      (("4" (use "non_empty_Addr") nil nil)) nil))
                    nil))
                  nil)
                 ("2" (hide 2) (("2" (use "non_empty_Addr") nil nil))
                  nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Addr") nil nil)) nil)
                       ("2" (use "non_empty_Addr") nil nil))
                      nil)
                     ("2" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert)
                            (("1" (assert :quant-simp? t)
                              (("1" (ground) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("3" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (assert :quant-simp? t)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("4" (apply-extensionality 1)
                      (("1" (hide 2)
                        (("1" (bddsimp)
                          (("1" (skosimp*) nil nil)
                           ("2" (skosimp*) nil nil)
                           ("3"
                            (inst 1 "element[Element]
                                               (epsilon[(Addr_Element)]({e: (Addr_Element) | TRUE}))")
                            (("1" (assert :quant-simp? t) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp*)
                          (("2" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("3" (hide 2)
                        (("3" (skosimp*)
                          (("3" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("4" (hide 2)
                        (("4" (skosimp*)
                          (("4" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("5" (hide 2)
                        (("5" (skosimp*)
                          (("5" (use "non_empty_Addr") nil nil)) nil))
                        nil)
                       ("6" (hide 2)
                        (("6" (skosimp*)
                          (("6" (use "non_empty_Addr") nil nil)) nil))
                        nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Addr") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Addr") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Addr") nil nil)) nil))
          nil)
         ("3"
          (inst 1
           "LAMBDA (x: [FA_Element, FA_Element]): x = (element(epsilon({e: (Data_Element) | TRUE})), element(epsilon({e: (Data_Element) | TRUE})))")
          (("1" (prop)
            (("1" (use "carrier_point_dense")
              (("1"
                (case "(LAMBDA (wp: [FA_Element, FA_Element]):
                                                                                         wp`1 =
                                                                                          element[Element]
                                                                                              (epsilon[(Data_Element)]
                                                                                                   ({e: (Data_Element) | TRUE}))
                                                                                          AND
                                                                                          wp`2 =
                                                                                           element[Element]
                                                                                               (epsilon[(Data_Element)]
                                                                                                    ({e: (Data_Element) | TRUE}))) = (LAMBDA (x: [FA_Element[Element], FA_Element[Element]]):
                                                                                         x =
                                                                                          (element[Element]
                                                                                               (epsilon[(Data_Element)]
                                                                                                    ({e: (Data_Element) | TRUE})),
                                                                                           element[Element]
                                                                                               (epsilon[(Data_Element)]
                                                                                                    ({e: (Data_Element) | TRUE}))))")
                (("1" (replace -1) (("1" (propax) nil nil)) nil)
                 ("2" (hide -1 2)
                  (("2" (apply-extensionality 1 :hide? t)
                    (("1" (skosimp*)
                      (("1" (use "non_empty_Data") nil nil)) nil)
                     ("2" (skosimp*)
                      (("2" (use "non_empty_Data") nil nil)) nil))
                    nil))
                  nil)
                 ("3" (hide -1 2)
                  (("3" (skosimp*)
                    (("3" (use "non_empty_Data") nil nil)) nil))
                  nil)
                 ("4" (hide -1 2)
                  (("4" (skosimp*)
                    (("4" (use "non_empty_Data") nil nil)) nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (use "non_empty_Data") nil nil))
                nil))
              nil)
             ("2" (expand "mTypePred")
              (("2" (smash :quant-simp? t)
                (("2" (purify-fa 1 t)
                  (("2" (prop)
                    (("1" (decompose-equality -1)
                      (("1" (inst?)
                        (("1" (use "non_empty_Data") nil nil)) nil)
                       ("2" (use "non_empty_Data") nil nil))
                      nil)
                     ("2" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("3" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t)
                            (("1" (ground) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("4" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert :quant-simp? t) nil nil)
                           ("2" (assert :quant-simp? t) nil nil)
                           ("3" (inst?)
                            (("3" (assert :quant-simp? t) nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil)
                       ("3" (skosimp*)
                        (("3" (use "non_empty_Data") nil nil)) nil)
                       ("4" (skosimp*)
                        (("4" (use "non_empty_Data") nil nil)) nil)
                       ("5" (skosimp*)
                        (("5" (use "non_empty_Data") nil nil)) nil)
                       ("6" (skosimp*)
                        (("6" (use "non_empty_Data") nil nil)) nil))
                      nil)
                     ("5" (apply-extensionality 1 :hide? t)
                      (("1" (iff)
                        (("1" (prop)
                          (("1" (assert) nil nil)
                           ("2" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (use "non_empty_Data") nil nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp*)
                        (("2" (use "non_empty_Data") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*) (("2" (use "non_empty_Data") nil nil)) nil))
          nil)
         ("4" (inst 1 "zero")
          (("4" (expand "mTypePred")
            (("4" (smash) (("4" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("5" (inst 1 "zero")
          (("5" (expand "mTypePred")
            (("5" (smash) (("5" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("6" (inst 1 "zero")
          (("6" (expand "mTypePred")
            (("6" (smash) (("6" (purify-fa 1 t) nil nil)) nil)) nil))
          nil)
         ("7"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("7" (expand "mTypePred")
            (("7" (smash)
              (("7" (purify-fa 1 t)
                (("7" (expand "extend")
                  (("7" (inst 1 "zero" "zero")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -5 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -5 t) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t) nil nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8"
          (inst 1
           "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
          (("8" (expand "mTypePred")
            (("8" (smash)
              (("8" (purify-fa 1 t)
                (("8" (expand "extend")
                  (("8"
                    (inst 1 "zero"
                     "sum(composition(fork(composition(Pi_1, one_prime_C_0), composition(Pi_2, composition(zero, inl))), Pi_2), composition(fork(composition(Pi_1, one_prime_C_1), composition(Pi_2, composition(zero, inr))), Pi_2))")
                    (("1" (apply-extensionality 1 :hide? t)
                      (("1" (prop)
                        (("1" (skosimp*)
                          (("1" (smash :quant-simp? t)
                            (("1" (purify-fa -5 t) nil nil)) nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (smash :quant-simp? t)
                            (("2" (purify-fa -5 t)
                              (("2"
                                (expand "extend")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (purify-fa 1 t)
                      (("2" (inst 1 "zero" "zero")
                        (("1" (prop)
                          (("1" (apply-extensionality 1 :hide? t)
                            (("1" (expand "extend")
                              (("1"
                                (prop)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (smash :quant-simp? t)
                                    (("1" (purify-fa -5 t) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp*)
                                  (("2"
                                    (smash :quant-simp? t)
                                    (("2" (purify-fa -5 t) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "extend")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (purify-fa 1 t) nil nil)
                         ("3" (purify-fa 1 t) nil nil))
                        nil))
                      nil)
                     ("3" (purify-fa 1 t) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (smash :quant-simp? t) nil nil))
      nil))
    nil)
   ((DirtyCacheSystem adt-constructor-decl "(DirtyCacheSystem?)"
     FA_semantic nil)
    (DirtyCacheSystem? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (DirtyCache adt-constructor-decl "(DirtyCache?)" FA_semantic nil)
    (DirtyCache? adt-recognizer-decl "[TypePred -> boolean]"
     FA_semantic nil)
    (Memory adt-constructor-decl "(Memory?)" FA_semantic nil)
    (Memory? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Cache adt-constructor-decl "(Cache?)" FA_semantic nil)
    (Cache? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Dirty adt-constructor-decl "(Dirty?)" FA_semantic nil)
    (Dirty? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (Data adt-constructor-decl "(Data?)" FA_semantic nil)
    (Data? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Addr adt-constructor-decl "(Addr?)" FA_semantic nil)
    (Addr? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic nil)
    (Carrier adt-constructor-decl "(Carrier?)" FA_semantic nil)
    (Carrier? adt-recognizer-decl "[TypePred -> boolean]" FA_semantic
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TypePred type-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "Carrier" FA_semantic nil)
    (inr const-decl "Carrier" FA_semantic nil)
    (one_prime_C_1 const-decl "Carrier" FA_semantic nil)
    (inl const-decl "Carrier" FA_semantic nil)
    (Pi_2 const-decl "Carrier" FA_semantic nil)
    (one_prime_C_0 const-decl "Carrier" FA_semantic nil)
    (Pi_1 const-decl "Carrier" FA_semantic nil)
    (fork const-decl "Carrier" FA_semantic nil)
    (extend const-decl "R" extend nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (pair? adt-recognizer-decl "[FA_Element -> boolean]" FA_Element_adt
     nil)
    (el0 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_0 const-decl "Element" FA_semantic nil)
    (el1 adt-accessor-decl "[(pair?) -> FA_Element]" FA_Element_adt
     nil)
    (c_1 const-decl "Element" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (C_0 const-decl "Carrier" FA_semantic nil)
    (C_1 const-decl "Carrier" FA_semantic nil)
    (Dirty const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "Carrier" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Data_Element const-decl "PRED[Element]" FA_semantic nil)
    (Data const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Data const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (non_empty_Data formula-decl nil FA_semantic nil)
    (TRUE const-decl "bool" booleans nil)
    (epsilon const-decl "T" epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (non_empty_Addr formula-decl nil FA_semantic nil)
    (carrier_point_dense formula-decl nil FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (t!1 skolem-const-decl "TypePred" SpecProperties nil)
    (Carrier const-decl "PRED[Carrier]" FA_semantic nil))
   nil
   (IMP_FODL_lemmas assuming
    "FODL_lemmas[FA_Language.Constant, FA_Language.Metavariable, FA_Language.Variable, FA_Language.Predicate, FA_Language.sigPredicate, FA_Language.Function_, FA_Language.sigFunction_, FA_semantic.TypePred, FA_semantic.TPMetavariable, FA_semantic.TPVariable, Carrier, FA_semantic.mTypePred, FA_semantic.mConstant, FA_semantic.mPredicate, FA_semantic.mFunction_]"
    "non_empty_types: ASSUMPTION FORALL (t: FODL_lemmas.TypePred): EXISTS (c: (FODL_lemmas.mTypePred(t))): booleans.TRUE")))
 (DirtyCacheWrite_preserves_NonDirtyCache 0
  (DirtyCacheWrite_preserves_NonDirtyCache-5 "" 3651371740
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (replace -2 1)
            (("1" (replace -3 1)
              (("1" (replace -4 1)
                (("1" (hide -2 -3 -4)
                  (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
                    (("1" (typepred "t!1")
                      (("1" (hide -1)
                        (("1" (expand "TPVariable")
                          (("1" (expand "mTypePred")
                            (("1" (expand "DirtyCacheSystem" -1)
                              (("1"
                                (skosimp*)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (typepred "dca!1")
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "DirtyCache" -1)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace
                                                     -6
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (replace
                                                       -5
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -5
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -3)
                                                              (("1"
                                                                (purify-fa
                                                                 -3)
                                                                (("1"
                                                                  (purify-fa
                                                                   1)
                                                                  (("1"
                                                                    (case
                                                                     "composition(composition(composition(t!2, one), t!3), one) = composition(t!2, one)")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (case
                                                                           "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "composition(product(complement(sum(d!1, t!2)), one_prime), composition(composition(t!2, one), t!3)) = zero")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "complement(sum(d!1, t!2)) = product(complement(d!1), complement(t!2))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_6")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "BA_4")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "complement(t!2)"
                                                                                                               "one_prime")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "BA_6")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (a, b, c, a1, b1: Carrier): sum(composition(a, b), c) = c AND sum(a, a1) = a AND sum(b, b1) = b IMPLIES sum(composition(a1, b1), c) = c")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "product(complement(d!1), one_prime)"
                                                                                                                             "ca!1"
                                                                                                                             "mem!1"
                                                                                                                             "product(product(complement(d!1), one_prime), complement(t!2))"
                                                                                                                             "product(ca!1, complement(composition(t!2, one)))")
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("1"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   -1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2
                                                                                                                                     -3)
                                                                                                                                    (("2"
                                                                                                                                      (purify-fa
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!1, x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!3")
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (bddsimp)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (purify-fa
                                                                                               :strong
                                                                                               t)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (purify-fa
                                                                                       1
                                                                                       :strong
                                                                                       t)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             1)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "TPVariable"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "mTypePred"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Addr"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (prop)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               -1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (purify-fa
                                                                                                                 -2
                                                                                                                 :strong
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         -1
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (purify-fa
                                                                                 :strong
                                                                                 t)
                                                                                (("2"
                                                                                  (apply-extensionality)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (bddsimp)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!3")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             2
                                                                                             "x!3")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("2"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("3"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (purify-fa
                                                                         1
                                                                         t)
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           1)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (bddsimp)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "t!3")
                                                                                  (("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "TPVariable")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "mTypePred")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Data")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Pair")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (typepred "t!1")
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "TPVariable")
                                          (("2"
                                            (expand "mTypePred")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyCacheWrite_preserves_NonDirtyCache-4 "" 3594757657
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (replace -2 1)
            (("1" (replace -3 1)
              (("1" (replace -4 1)
                (("1" (hide -2 -3 -4)
                  (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
                    (("1" (typepred "t!1")
                      (("1" (hide -2)
                        (("1" (expand "TPVariable")
                          (("1" (expand "mTypePred")
                            (("1" (expand "DirtyCacheSystem" -1)
                              (("1"
                                (skosimp*)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (typepred "dca!1")
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (expand "DirtyCache" -1)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace
                                                     -6
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (replace
                                                       -5
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -5
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -3)
                                                              (("1"
                                                                (purify-fa
                                                                 -3)
                                                                (("1"
                                                                  (purify-fa
                                                                   1)
                                                                  (("1"
                                                                    (case
                                                                     "composition(composition(composition(t!2, one), t!3), one) = composition(t!2, one)")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (case
                                                                           "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "composition(product(complement(sum(d!1, t!2)), one_prime), composition(composition(t!2, one), t!3)) = zero")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "complement(sum(d!1, t!2)) = product(complement(d!1), complement(t!2))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_6")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "BA_4")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "complement(t!2)"
                                                                                                               "one_prime")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "BA_6")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (a, b, c, a1, b1: Carrier): sum(composition(a, b), c) = c AND sum(a, a1) = a AND sum(b, b1) = b IMPLIES sum(composition(a1, b1), c) = c")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "product(complement(d!1), one_prime)"
                                                                                                                             "ca!1"
                                                                                                                             "mem!1"
                                                                                                                             "product(product(complement(d!1), one_prime), complement(t!2))"
                                                                                                                             "product(ca!1, complement(composition(t!2, one)))")
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("1"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   -1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2
                                                                                                                                     -3)
                                                                                                                                    (("2"
                                                                                                                                      (purify-fa
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!1, x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!3")
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (bddsimp)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (purify-fa
                                                                                               :strong
                                                                                               t)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (purify-fa
                                                                                       1
                                                                                       :strong
                                                                                       t)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             1)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "TPVariable"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "mTypePred"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Addr"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (prop)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               -1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (purify-fa
                                                                                                                 -2
                                                                                                                 :strong
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         -1
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (purify-fa
                                                                                 :strong
                                                                                 t)
                                                                                (("2"
                                                                                  (apply-extensionality)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (bddsimp)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!3")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             2
                                                                                             "x!3")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("2"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("3"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (purify-fa
                                                                         1
                                                                         t)
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           1)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (bddsimp)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "t!3")
                                                                                  (("2"
                                                                                    (hide
                                                                                     -2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "TPVariable")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "mTypePred")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Data")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Pair")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (typepred "t!1")
                                      (("2"
                                        (hide -2)
                                        (("2"
                                          (expand "TPVariable")
                                          (("2"
                                            (expand "mTypePred")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -2)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (BA_6 formula-decl nil FA_axioms nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (BA_4 formula-decl nil FA_axioms nil)
    (FALSE const-decl "bool" booleans nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (data adt-constructor-decl "(data?)" FA_Language nil)
    (data? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil) nil
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    nil (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]"
     SpecActions nil)
    (pre_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtyCacheWrite const-decl "[(v?) -> wf_Program_]" SpecActions
     nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyCacheWrite_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyCacheWrite_preserves_NonDirtyCache-3 "" 3355410227
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (replace -2 1)
            (("1" (replace -3 1)
              (("1" (replace -4 1)
                (("1" (hide -2 -3 -4)
                  (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
                    (("1" (typepred "t!1")
                      (("1" (hide -1)
                        (("1" (expand "TPVariable")
                          (("1" (expand "mTypePred")
                            (("1" (expand "DirtyCacheSystem" -1)
                              (("1"
                                (skosimp*)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (typepred "dca!1")
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "DirtyCache" -1)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace
                                                     -6
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (replace
                                                       -5
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -5
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -3)
                                                              (("1"
                                                                (purify-fa
                                                                 -3)
                                                                (("1"
                                                                  (purify-fa
                                                                   1)
                                                                  (("1"
                                                                    (case
                                                                     "composition(composition(composition(t!2, one), t!3), one) = composition(t!2, one)")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (case
                                                                           "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "composition(product(complement(sum(d!1, t!2)), one_prime), composition(composition(t!2, one), t!3)) = zero")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "complement(sum(d!1, t!2)) = product(complement(d!1), complement(t!2))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_6")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "BA_4")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "complement(t!2)"
                                                                                                               "one_prime")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "BA_6")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (a, b, c, a1, b1: Carrier): sum(composition(a, b), c) = c AND sum(a, a1) = a AND sum(b, b1) = b IMPLIES sum(composition(a1, b1), c) = c")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "product(complement(d!1), one_prime)"
                                                                                                                             "ca!1"
                                                                                                                             "mem!1"
                                                                                                                             "product(product(complement(d!1), one_prime), complement(t!2))"
                                                                                                                             "product(ca!1, complement(composition(t!2, one)))")
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("1"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   -1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2
                                                                                                                                     -3)
                                                                                                                                    (("2"
                                                                                                                                      (purify-fa
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!1, x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!3")
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (bddsimp)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (purify-fa
                                                                                               :strong
                                                                                               t)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (purify-fa
                                                                                       1
                                                                                       :strong
                                                                                       t)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             1)
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "TPVariable"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "mTypePred"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Addr"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (prop)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               -1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (purify-fa
                                                                                                                 -2
                                                                                                                 :strong
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         -1
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (purify-fa
                                                                                 :strong
                                                                                 t)
                                                                                (("2"
                                                                                  (apply-extensionality)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (bddsimp)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!3")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             2
                                                                                             "x!3")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("2"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("3"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (purify-fa
                                                                         1
                                                                         t)
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           1)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (bddsimp)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "t!3")
                                                                                  (("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "TPVariable")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "mTypePred")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Data")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Pair")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (typepred "t!1")
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "TPVariable")
                                          (("2"
                                            (expand "mTypePred")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (BA_6 formula-decl nil FA_axioms nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (BA_4 formula-decl nil FA_axioms nil)
    (FALSE const-decl "bool" booleans nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (data adt-constructor-decl "(data?)" FA_Language nil)
    (data? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]"
     SpecActions nil)
    (pre_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtyCacheWrite const-decl "[(v?) -> wf_Program_]" SpecActions
     nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyCacheWrite_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyCacheWrite_preserves_NonDirtyCache-2 "Misc fixes" 3295921776
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (replace -2 1)
            (("1" (replace -3 1)
              (("1" (replace -4 1)
                (("1" (hide -2 -3 -4)
                  (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
                    (("1" (typepred "t!1")
                      (("1" (expand "TPVariable")
                        (("1" (expand "mTypePred")
                          (("1" (hide -1)
                            (("1" (expand "DirtyCacheSystem" -1)
                              (("1"
                                (skosimp*)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (typepred "dca!1")
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "DirtyCache" -1)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (hide -3 -7)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace -5)
                                                          (("1"
                                                            (replace
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (replace
                                                               -2
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (replace
                                                                 -4
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (hide
                                                                   -1
                                                                   -2
                                                                   -4
                                                                   -5)
                                                                  (("1"
                                                                    (purify-fa
                                                                     -3)
                                                                    (("1"
                                                                      (purify-fa
                                                                       1)
                                                                      (("1"
                                                                        (case
                                                                         "composition(composition(composition(t!2, one), t!3), one) = composition(t!2, one)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(product(complement(sum(d!1, t!2)), one_prime), composition(composition(t!2, one), t!3)) = zero")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "complement(sum(d!1, t!2)) = product(complement(d!1), complement(t!2))")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "BA_6")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "BA_4")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "complement(t!2)"
                                                                                                                   "one_prime")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "BA_6")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "FORALL (a, b, c, a1, b1: Carrier): sum(composition(a, b), c) = c AND sum(a, a1) = a AND sum(b, b1) = b IMPLIES sum(composition(a1, b1), c) = c")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "product(complement(d!1), one_prime)"
                                                                                                                                 "ca!1"
                                                                                                                                 "mem!1"
                                                                                                                                 "product(product(complement(d!1), one_prime), complement(t!2))"
                                                                                                                                 "product(ca!1, complement(composition(t!2, one)))")
                                                                                                                                (("1"
                                                                                                                                  (prop)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("1"
                                                                                                                                      (purify-fa
                                                                                                                                       1
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("1"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (bddsimp)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (purify-fa
                                                                                                                                       1
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (bddsimp)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -2
                                                                                                                                     -1
                                                                                                                                     :dir
                                                                                                                                     rl)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -3
                                                                                                                                       -1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -2
                                                                                                                                         -3)
                                                                                                                                        (("2"
                                                                                                                                          (purify-fa
                                                                                                                                           :strong
                                                                                                                                           t)
                                                                                                                                          (("2"
                                                                                                                                            (apply-extensionality
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!1, x!2)")
                                                                                                                                                      (("2"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           1
                                                                                                                                                           "x!3")
                                                                                                                                                          (("2"
                                                                                                                                                            (prop)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           1
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               1)
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "TPVariable"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "mTypePred"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Addr"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (prop)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               -2
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "(x!3, x!5)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 1
                                                                                                 "x!3")
                                                                                                (("1"
                                                                                                  (prop)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 2
                                                                                                 "x!3")
                                                                                                (("2"
                                                                                                  (prop)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!3")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp*)
                                                                                            (("3"
                                                                                              (inst
                                                                                               1
                                                                                               "x!3")
                                                                                              (("3"
                                                                                                (prop)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (purify-fa
                                                                             1
                                                                             t)
                                                                            (("2"
                                                                              (apply-extensionality
                                                                               1)
                                                                              (("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "t!3")
                                                                                      (("2"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "TPVariable"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "mTypePred"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Data"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "Pair"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (purify-fa
                                                                                                       1
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (apply-extensionality
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (typepred "t!1")
                                      (("2"
                                        (expand "TPVariable")
                                        (("2"
                                          (expand "mTypePred")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPVariable")
                    (("1" (expand "TPMetavariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash :quant-simp? t) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyCacheWrite_preserves_NonDirtyCache-1 nil 3295306030
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (replace -2 1)
            (("1" (replace -3 1)
              (("1" (replace -4 1)
                (("1" (hide -2 -3 -4)
                  (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
                    (("1" (typepred "t!1")
                      (("1" (hide -1)
                        (("1" (expand "TPVariable")
                          (("1" (expand "mTypePred")
                            (("1" (expand "DirtyCacheSystem" -1)
                              (("1"
                                (skosimp*)
                                (("1"
                                  (inst?)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (typepred "dca!1")
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "DirtyCache" -1)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (replace
                                                     -6
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (replace
                                                       -5
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -5
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -1
                                                               -3)
                                                              (("1"
                                                                (purify-fa
                                                                 -3)
                                                                (("1"
                                                                  (purify-fa
                                                                   1)
                                                                  (("1"
                                                                    (case
                                                                     "composition(composition(composition(t!2, one), t!3), one) = composition(t!2, one)")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (case
                                                                           "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case
                                                                                   "composition(product(complement(sum(d!1, t!2)), one_prime), composition(composition(t!2, one), t!3)) = zero")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "complement(sum(d!1, t!2)) = product(complement(d!1), complement(t!2))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_6")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "BA_4")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "complement(t!2)"
                                                                                                               "one_prime")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "BA_6")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (a, b, c, a1, b1: Carrier): sum(composition(a, b), c) = c AND sum(a, a1) = a AND sum(b, b1) = b IMPLIES sum(composition(a1, b1), c) = c")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "product(complement(d!1), one_prime)"
                                                                                                                             "ca!1"
                                                                                                                             "mem!1"
                                                                                                                             "product(product(complement(d!1), one_prime), complement(t!2))"
                                                                                                                             "product(ca!1, complement(composition(t!2, one)))")
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("1"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (apply-extensionality
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -3
                                                                                                                                   -1
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -2
                                                                                                                                     -3)
                                                                                                                                    (("2"
                                                                                                                                      (purify-fa
                                                                                                                                       :strong
                                                                                                                                       t)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!1, x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!3")
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (bddsimp)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (purify-fa
                                                                                               :strong
                                                                                               t)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (purify-fa
                                                                                       1
                                                                                       :strong
                                                                                       t)
                                                                                      (("2"
                                                                                        (apply-extensionality
                                                                                         1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           1)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "t!2")
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "TPVariable"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "mTypePred"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "Addr"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (purify-fa
                                                                                                             -1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               -2
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("2"
                                                                                                                    (bddsimp)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -2
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (purify-fa
                                                                                 :strong
                                                                                 t)
                                                                                (("2"
                                                                                  (apply-extensionality)
                                                                                  (("2"
                                                                                    (hide
                                                                                     2)
                                                                                    (("2"
                                                                                      (bddsimp)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!3")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             2
                                                                                             "x!3")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("2"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (skosimp*)
                                                                                        (("3"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          (("3"
                                                                                            (prop)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (purify-fa
                                                                         1
                                                                         t)
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           1)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (bddsimp)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "t!3")
                                                                                  (("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "TPVariable")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "mTypePred")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "Data")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "Pair")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but 1)
                                    (("2"
                                      (typepred "t!1")
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "TPVariable")
                                          (("2"
                                            (expand "mTypePred")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtyCacheWrite_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtyCacheWrite const-decl "[(v?) -> wf_Program_]" SpecActions
     nil)
    (pre_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]"
     SpecActions nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (data? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (data adt-constructor-decl "(data?)" FA_Language nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (BA_4 formula-decl nil FA_axioms nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (BA_6 formula-decl nil FA_axioms nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (Data const-decl "PRED[Carrier]" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil))
   nil))
 (DirtyFlush_preserves_NonDirtyCache 0
  (DirtyFlush_preserves_NonDirtyCache-5 "" 3651373237
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
            (("1" (typepred "t!1")
              (("1" (hide -1)
                (("1" (expand "TPVariable")
                  (("1" (expand "mTypePred")
                    (("1" (expand "DirtyCacheSystem")
                      (("1" (skosimp*)
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "Cache_Dirty_DirtyCache")
                              (("1"
                                (typepred "dca!1")
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (expand "DirtyCache" -1)
                                    (("1"
                                      (skosimp*)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -5 :dir rl)
                                              (("1"
                                                (replace -4 :dir rl)
                                                (("1"
                                                  (replace -1 :dir rl)
                                                  (("1"
                                                    (replace
                                                     -2
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (hide
                                                       -1
                                                       -2
                                                       -4
                                                       -5)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (replace -5)
                                                          (("1"
                                                            (replace
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -4
                                                               -5
                                                               -6)
                                                              (("1"
                                                                (expand
                                                                 "Leq"
                                                                 -3)
                                                                (("1"
                                                                  (expand
                                                                   "Leq"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "Neg")
                                                                    (("1"
                                                                      (expand
                                                                       "FunctionUpdate")
                                                                      (("1"
                                                                        (expand
                                                                         "FunctionUndef")
                                                                        (("1"
                                                                          (case
                                                                           "composition(composition(t!2, one), one) = composition(t!2, one)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, ca!1)) = composition(t!2, ca!1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "complement(product(d!1, complement(t!2))) = sum(complement(d!1), t!2)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "composition(product(sum(complement(d!1), t!2), one_prime), product(ca!1, complement(composition(t!2, one)))) = composition(product(complement(d!1), one_prime), product(ca!1, complement(composition(t!2, one))))")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "composition(t!2, ca!1) = zero")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "product(mem!1, complement(composition(zero, one))) = mem!1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "FORALL (a, b, b1, c: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, b1)), c) = c")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (purify-fa
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (apply-extensionality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!2)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!3")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (purify-fa
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "composition(composition(t!2, ca!1), one) = composition(t!2, one)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, b) = b IMPLIES sum(a, sum(b, c)) = sum(b, c)")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (assert
                                                                                                                     :quant-simp?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (purify-fa
                                                                                                                             -4
                                                                                                                             :strong
                                                                                                                             t)
                                                                                                                            (("1"
                                                                                                                              (assert
                                                                                                                               :quant-simp?
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (purify-fa
                                                                                                                     :strong
                                                                                                                     t)
                                                                                                                    (("2"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (bddsimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "t!2")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   -1
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "(x!3, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "(x!1, x!6)")
                                                                                                                                        (("2"
                                                                                                                                          (bddsimp)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -1
                                                                                                                                                   t)
                                                                                                                                                  (("1"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!6, x!5)")
                                                                                                                                                      (("1"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -2
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!6, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!6")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!3, x!5)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!5")
                                                                                                                                                        (("2"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("3"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("3"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("3"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("3"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("3"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (purify-fa
                                                                                                                                             -3
                                                                                                                                             t)
                                                                                                                                            (("4"
                                                                                                                                              (decompose-equality
                                                                                                                                               -3)
                                                                                                                                              (("4"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("4"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("4"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("4"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("4"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("4"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (assert
                                                                                                   :quant-simp?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "t!2")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (purify-fa
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (decompose-equality
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "(x!1, x!4)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "(x!3, x!5)")
                                                                                                            (("1"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2
                                                                                                                     -5
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (decompose-equality
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     -3
                                                                                                                                     1
                                                                                                                                     3
                                                                                                                                     4)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "t!2")
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (purify-fa
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (purify-fa
                                                                                                                                               -1
                                                                                                                                               t)
                                                                                                                                              (("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (purify-fa
                                                                                                                                                       -1
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "(x!4, x!5)")
                                                                                                                                                          (("2"
                                                                                                                                                            (bddsimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -1
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!4")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!4")
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("3"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("3"
                                                                                                                      (bddsimp)
                                                                                                                      (("3"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("3"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (purify-fa
                                                                                                                 -3
                                                                                                                 t)
                                                                                                                (("4"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("4"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("4"
                                                                                                                      (bddsimp)
                                                                                                                      (("4"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("4"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("4"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("4"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (purify-fa
                                                                               :strong
                                                                               t)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (bddsimp)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "x!3")
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable" -1)
                                  (("2"
                                    (expand "mTypePred" -1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyFlush_preserves_NonDirtyCache-4 "" 3594767395
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
            (("1" (typepred "t!1")
              (("1" (hide -2)
                (("1" (expand "TPVariable")
                  (("1" (expand "mTypePred")
                    (("1" (expand "DirtyCacheSystem")
                      (("1" (skosimp*)
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "Cache_Dirty_DirtyCache")
                              (("1"
                                (typepred "dca!1")
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (expand "DirtyCache" -1)
                                    (("1"
                                      (skosimp*)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -5 :dir rl)
                                              (("1"
                                                (replace -4 :dir rl)
                                                (("1"
                                                  (replace -1 :dir rl)
                                                  (("1"
                                                    (replace
                                                     -2
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (hide
                                                       -1
                                                       -2
                                                       -4
                                                       -5)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (replace -5)
                                                          (("1"
                                                            (replace
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -4
                                                               -5
                                                               -6)
                                                              (("1"
                                                                (expand
                                                                 "Leq"
                                                                 -3)
                                                                (("1"
                                                                  (expand
                                                                   "Leq"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "Neg")
                                                                    (("1"
                                                                      (expand
                                                                       "FunctionUpdate")
                                                                      (("1"
                                                                        (expand
                                                                         "FunctionUndef")
                                                                        (("1"
                                                                          (case
                                                                           "composition(composition(t!2, one), one) = composition(t!2, one)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, ca!1)) = composition(t!2, ca!1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "complement(product(d!1, complement(t!2))) = sum(complement(d!1), t!2)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "composition(product(sum(complement(d!1), t!2), one_prime), product(ca!1, complement(composition(t!2, one)))) = composition(product(complement(d!1), one_prime), product(ca!1, complement(composition(t!2, one))))")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "composition(t!2, ca!1) = zero")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "product(mem!1, complement(composition(zero, one))) = mem!1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "FORALL (a, b, b1, c: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, b1)), c) = c")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (purify-fa
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (apply-extensionality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!2)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!3")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (purify-fa
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "composition(composition(t!2, ca!1), one) = composition(t!2, one)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, b) = b IMPLIES sum(a, sum(b, c)) = sum(b, c)")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (assert
                                                                                                                     :quant-simp?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (purify-fa
                                                                                                                             -4
                                                                                                                             :strong
                                                                                                                             t)
                                                                                                                            (("1"
                                                                                                                              (assert
                                                                                                                               :quant-simp?
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (purify-fa
                                                                                                                     :strong
                                                                                                                     t)
                                                                                                                    (("2"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (bddsimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "t!2")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   -1
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "(x!3, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "(x!1, x!6)")
                                                                                                                                        (("2"
                                                                                                                                          (bddsimp)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -1
                                                                                                                                                   t)
                                                                                                                                                  (("1"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!6, x!5)")
                                                                                                                                                      (("1"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -2
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!6, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!6")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!3, x!5)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!5")
                                                                                                                                                        (("2"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("3"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("3"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("3"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("3"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("3"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (purify-fa
                                                                                                                                             -3
                                                                                                                                             t)
                                                                                                                                            (("4"
                                                                                                                                              (decompose-equality
                                                                                                                                               -3)
                                                                                                                                              (("4"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("4"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("4"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("4"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("4"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("4"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (assert
                                                                                                   :quant-simp?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "t!2")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (purify-fa
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (decompose-equality
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "(x!1, x!4)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "(x!3, x!5)")
                                                                                                            (("1"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2
                                                                                                                     -5
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (decompose-equality
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     -3
                                                                                                                                     1
                                                                                                                                     3
                                                                                                                                     4)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "t!2")
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (purify-fa
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (purify-fa
                                                                                                                                               -1
                                                                                                                                               t)
                                                                                                                                              (("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (purify-fa
                                                                                                                                                       -1
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "(x!4, x!5)")
                                                                                                                                                          (("2"
                                                                                                                                                            (bddsimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -1
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!4")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!4")
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("3"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("3"
                                                                                                                      (bddsimp)
                                                                                                                      (("3"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("3"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (purify-fa
                                                                                                                 -3
                                                                                                                 t)
                                                                                                                (("4"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("4"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("4"
                                                                                                                      (bddsimp)
                                                                                                                      (("4"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("4"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("4"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("4"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (purify-fa
                                                                               :strong
                                                                               t)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (bddsimp)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "x!3")
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "TPVariable" -1)
                                  (("2"
                                    (expand "mTypePred" -1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -2)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (FALSE const-decl "bool" booleans nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil) nil
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    nil (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (DirtyFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyFlush_preserves_NonDirtyCache-3 "" 3355412453
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
            (("1" (typepred "t!1")
              (("1" (hide -1)
                (("1" (expand "TPVariable")
                  (("1" (expand "mTypePred")
                    (("1" (expand "DirtyCacheSystem")
                      (("1" (skosimp*)
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "Cache_Dirty_DirtyCache")
                              (("1"
                                (typepred "dca!1")
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (expand "DirtyCache" -1)
                                    (("1"
                                      (skosimp*)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -5 :dir rl)
                                              (("1"
                                                (replace -4 :dir rl)
                                                (("1"
                                                  (replace -1 :dir rl)
                                                  (("1"
                                                    (replace
                                                     -2
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (hide
                                                       -1
                                                       -2
                                                       -4
                                                       -5)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (replace -5)
                                                          (("1"
                                                            (replace
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -4
                                                               -5
                                                               -6)
                                                              (("1"
                                                                (expand
                                                                 "Leq"
                                                                 -3)
                                                                (("1"
                                                                  (expand
                                                                   "Leq"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "Neg")
                                                                    (("1"
                                                                      (expand
                                                                       "FunctionUpdate")
                                                                      (("1"
                                                                        (expand
                                                                         "FunctionUndef")
                                                                        (("1"
                                                                          (case
                                                                           "composition(composition(t!2, one), one) = composition(t!2, one)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, ca!1)) = composition(t!2, ca!1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "complement(product(d!1, complement(t!2))) = sum(complement(d!1), t!2)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "composition(product(sum(complement(d!1), t!2), one_prime), product(ca!1, complement(composition(t!2, one)))) = composition(product(complement(d!1), one_prime), product(ca!1, complement(composition(t!2, one))))")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "composition(t!2, ca!1) = zero")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "product(mem!1, complement(composition(zero, one))) = mem!1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "FORALL (a, b, b1, c: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, b1)), c) = c")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (purify-fa
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (apply-extensionality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!2)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!3")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (purify-fa
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "composition(composition(t!2, ca!1), one) = composition(t!2, one)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, b) = b IMPLIES sum(a, sum(b, c)) = sum(b, c)")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (assert
                                                                                                                     :quant-simp?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (purify-fa
                                                                                                                             -4
                                                                                                                             :strong
                                                                                                                             t)
                                                                                                                            (("1"
                                                                                                                              (assert
                                                                                                                               :quant-simp?
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (purify-fa
                                                                                                                     :strong
                                                                                                                     t)
                                                                                                                    (("2"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (bddsimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "t!2")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   -1
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "(x!3, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "(x!1, x!6)")
                                                                                                                                        (("2"
                                                                                                                                          (bddsimp)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -1
                                                                                                                                                   t)
                                                                                                                                                  (("1"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!6, x!5)")
                                                                                                                                                      (("1"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -2
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!6, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!6")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!3, x!5)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!5")
                                                                                                                                                        (("2"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("3"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("3"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("3"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("3"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("3"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (purify-fa
                                                                                                                                             -3
                                                                                                                                             t)
                                                                                                                                            (("4"
                                                                                                                                              (decompose-equality
                                                                                                                                               -3)
                                                                                                                                              (("4"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("4"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("4"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("4"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("4"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("4"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (assert
                                                                                                   :quant-simp?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "t!2")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (purify-fa
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (decompose-equality
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "(x!1, x!4)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "(x!3, x!5)")
                                                                                                            (("1"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2
                                                                                                                     -5
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (decompose-equality
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     -3
                                                                                                                                     1
                                                                                                                                     3
                                                                                                                                     4)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "t!2")
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (purify-fa
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (purify-fa
                                                                                                                                               -1
                                                                                                                                               t)
                                                                                                                                              (("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (purify-fa
                                                                                                                                                       -1
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "(x!4, x!5)")
                                                                                                                                                          (("2"
                                                                                                                                                            (bddsimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -1
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!4")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!4")
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("3"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("3"
                                                                                                                      (bddsimp)
                                                                                                                      (("3"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("3"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (purify-fa
                                                                                                                 -3
                                                                                                                 t)
                                                                                                                (("4"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("4"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("4"
                                                                                                                      (bddsimp)
                                                                                                                      (("4"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("4"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("4"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("4"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (purify-fa
                                                                               :strong
                                                                               t)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (bddsimp)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "x!3")
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable" -1)
                                  (("2"
                                    (expand "mTypePred" -1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (FALSE const-decl "bool" booleans nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (DirtyFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyFlush_preserves_NonDirtyCache-2 "Misc changes" 3295922677
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
            (("1" (typepred "t!1")
              (("1" (hide -1)
                (("1" (expand "TPVariable" -1)
                  (("1" (expand "mTypePred" -1)
                    (("1" (expand "DirtyCacheSystem" -1)
                      (("1" (skosimp*)
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "Cache_Dirty_DirtyCache")
                              (("1"
                                (typepred "dca!1")
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (expand "DirtyCache" -1)
                                    (("1"
                                      (skosimp*)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), one) = composition(t!2, one)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(composition(t!2, one), composition(t!2, ca!1)) = composition(t!2, ca!1)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "complement(product(d!1, complement(t!2))) = sum(complement(d!1), t!2)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "composition(product(sum(complement(d!1), t!2), one_prime), product(ca!1, complement(composition(t!2, one)))) = composition(product(complement(d!1), one_prime), product(ca!1, complement(composition(t!2, one))))")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "composition(t!2, ca!1) = zero")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "product(mem!1, complement(composition(zero, one))) = mem!1")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "FORALL (a, b, b1, c: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, b1)), c) = c")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (purify-fa
                                                                                                                                 :strong
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (apply-extensionality
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "(x!1, x!2)")
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "x!3")
                                                                                                                                                (("2"
                                                                                                                                                  (prop)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "composition(composition(t!2, ca!1), one) = composition(t!2, one)")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "FORALL (a, b, c: Carrier): sum(a, b) = b IMPLIES sum(a, sum(b, c)) = sum(b, c)")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       3)
                                                                                                                      (("1"
                                                                                                                        (purify-fa
                                                                                                                         1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("1"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (purify-fa
                                                                                                                                 -4
                                                                                                                                 :strong
                                                                                                                                 t)
                                                                                                                                (("1"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("1"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           2
                                                                                                                                           "x!5")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           3
                                                                                                                                           "x!4")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           3
                                                                                                                                           "x!4")
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "sum")
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -5)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!2)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "composition")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "x!3")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "product")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "complement")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "one_prime")
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -1
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (purify-fa
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (apply-extensionality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (purify-fa
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (apply-extensionality
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (apply-extensionality
                                                                                                                   3)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     2
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (bddsimp)
                                                                                                                        (("1"
                                                                                                                          (skosimp*)
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (skosimp*)
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "t!2")
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (purify-fa
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("2"
                                                                                                                                        (purify-fa
                                                                                                                                         -1
                                                                                                                                         t)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (inst-cp
                                                                                                                                             -1
                                                                                                                                             "(x!3, x!5)")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "(x!1, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -1
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (purify-fa
                                                                                                                                                         -1
                                                                                                                                                         t)
                                                                                                                                                        (("1"
                                                                                                                                                          (decompose-equality
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "(x!6, x!5)")
                                                                                                                                                            (("1"
                                                                                                                                                              (bddsimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (purify-fa
                                                                                                                                                                 -1
                                                                                                                                                                 t)
                                                                                                                                                                (("2"
                                                                                                                                                                  (decompose-equality
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "(x!6, x!5)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (bddsimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         1
                                                                                                                                                                         "x!5")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (prop)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             1
                                                                                                                                                                             "x!6")
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -4
                                                                                                                                                   t)
                                                                                                                                                  (("2"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -4)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!3, x!5)")
                                                                                                                                                      (("2"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "x!5")
                                                                                                                                                              (("2"
                                                                                                                                                                (prop)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -4
                                                                                                                                                   t)
                                                                                                                                                  (("3"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -4)
                                                                                                                                                    (("3"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!1, x!6)")
                                                                                                                                                      (("3"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("3"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("3"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("3"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "x!6")
                                                                                                                                                              (("3"
                                                                                                                                                                (prop)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("4"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -3
                                                                                                                                                   t)
                                                                                                                                                  (("4"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -3)
                                                                                                                                                    (("4"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!1, x!6)")
                                                                                                                                                      (("4"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("4"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("4"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("4"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "x!6")
                                                                                                                                                              (("4"
                                                                                                                                                                (prop)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (purify-fa
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (apply-extensionality
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!3")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (skosimp*)
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!3")
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "x!3")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (bddsimp)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "t!2")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             -1
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 -1
                                                                                                                 "(x!1, x!4)")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "(x!3, x!5)")
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1
                                                                                                                           -2
                                                                                                                           -5
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (purify-fa
                                                                                                                             :strong
                                                                                                                             t)
                                                                                                                            (("1"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -2
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!5")
                                                                                                                                        (("1"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("1"
                                                                                                                                            (prop)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           -3
                                                                                                                                           1
                                                                                                                                           3
                                                                                                                                           4)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "t!2")
                                                                                                                                            (("2"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (purify-fa
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (prop)
                                                                                                                                                  (("2"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -1
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (decompose-equality
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "(x!4, x!5)")
                                                                                                                                                        (("2"
                                                                                                                                                          (bddsimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (purify-fa
                                                                                                                                                             -1
                                                                                                                                                             t)
                                                                                                                                                            (("2"
                                                                                                                                                              (decompose-equality
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "(x!4, x!5)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (bddsimp)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (purify-fa
                                                                                                                                                                     -1
                                                                                                                                                                     t)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (decompose-equality
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "(x!4, x!5)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (bddsimp)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             1
                                                                                                                                                                             "x!5")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (prop)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 1
                                                                                                                                                                                 "x!4")
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (purify-fa
                                                                                                                       -4
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -4)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!4)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -2
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!4")
                                                                                                                                  (("2"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (purify-fa
                                                                                                                       -4
                                                                                                                       t)
                                                                                                                      (("3"
                                                                                                                        (decompose-equality
                                                                                                                         -4)
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!3, x!5)")
                                                                                                                          (("3"
                                                                                                                            (bddsimp)
                                                                                                                            (("3"
                                                                                                                              (purify-fa
                                                                                                                               -2
                                                                                                                               t)
                                                                                                                              (("3"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("3"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("4"
                                                                                                                      (purify-fa
                                                                                                                       -3
                                                                                                                       t)
                                                                                                                      (("4"
                                                                                                                        (decompose-equality
                                                                                                                         -3)
                                                                                                                        (("4"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!3, x!5)")
                                                                                                                          (("4"
                                                                                                                            (bddsimp)
                                                                                                                            (("4"
                                                                                                                              (purify-fa
                                                                                                                               -2
                                                                                                                               t)
                                                                                                                              (("4"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("4"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("4"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!3")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 1
                                                                                                 "x!3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable" -1)
                                  (("2"
                                    (expand "mTypePred" -1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPVariable")
                    (("1" (expand "TPMetavariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyFlush_preserves_NonDirtyCache-1 nil 3295306030
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (lemma "Memory_DirtyCache_DirtyCacheSystem")
            (("1" (typepred "t!1")
              (("1" (hide -1)
                (("1" (expand "TPVariable")
                  (("1" (expand "mTypePred")
                    (("1" (expand "DirtyCacheSystem")
                      (("1" (skosimp*)
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "Cache_Dirty_DirtyCache")
                              (("1"
                                (typepred "dca!1")
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (expand "DirtyCache" -1)
                                    (("1"
                                      (skosimp*)
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -5 :dir rl)
                                              (("1"
                                                (replace -4 :dir rl)
                                                (("1"
                                                  (replace -1 :dir rl)
                                                  (("1"
                                                    (replace
                                                     -2
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (hide
                                                       -1
                                                       -2
                                                       -4
                                                       -5)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (replace -5)
                                                          (("1"
                                                            (replace
                                                             -6)
                                                            (("1"
                                                              (hide
                                                               -4
                                                               -5
                                                               -6)
                                                              (("1"
                                                                (expand
                                                                 "Leq"
                                                                 -3)
                                                                (("1"
                                                                  (expand
                                                                   "Leq"
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "Neg")
                                                                    (("1"
                                                                      (expand
                                                                       "FunctionUpdate")
                                                                      (("1"
                                                                        (expand
                                                                         "FunctionUndef")
                                                                        (("1"
                                                                          (case
                                                                           "composition(composition(t!2, one), one) = composition(t!2, one)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, ca!1)) = composition(t!2, ca!1)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "complement(product(d!1, complement(t!2))) = sum(complement(d!1), t!2)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "composition(product(sum(complement(d!1), t!2), one_prime), product(ca!1, complement(composition(t!2, one)))) = composition(product(complement(d!1), one_prime), product(ca!1, complement(composition(t!2, one))))")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "composition(t!2, ca!1) = zero")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "FORALL (a: Carrier): sum(a, zero) = a")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "product(mem!1, complement(composition(zero, one))) = mem!1")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "FORALL (a, b, b1, c: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, b1)), c) = c")
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (purify-fa
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (apply-extensionality
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!2)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!3")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (purify-fa
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (case
                                                                                                     "composition(composition(t!2, ca!1), one) = composition(t!2, one)")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, b) = b IMPLIES sum(a, sum(b, c)) = sum(b, c)")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (bddsimp)
                                                                                                                        (("1"
                                                                                                                          (purify-fa
                                                                                                                           -4
                                                                                                                           :strong
                                                                                                                           t)
                                                                                                                          (("1"
                                                                                                                            (decompose-equality
                                                                                                                             -4)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "(x!1, x!2)")
                                                                                                                              (("1"
                                                                                                                                (bddsimp)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (purify-fa
                                                                                                                     :strong
                                                                                                                     t)
                                                                                                                    (("2"
                                                                                                                      (apply-extensionality
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (bddsimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       -2
                                                                                                       -3
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               2
                                                                                                               3)
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "t!2")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (prop)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   -1
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "(x!3, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "(x!1, x!6)")
                                                                                                                                        (("2"
                                                                                                                                          (bddsimp)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (purify-fa
                                                                                                                                                   -1
                                                                                                                                                   t)
                                                                                                                                                  (("1"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "(x!6, x!5)")
                                                                                                                                                      (("1"
                                                                                                                                                        (bddsimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (purify-fa
                                                                                                                                                           -2
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -2
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!6, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!6")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!3, x!5)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!5")
                                                                                                                                                        (("2"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (purify-fa
                                                                                                                                             -4
                                                                                                                                             t)
                                                                                                                                            (("3"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("3"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("3"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("3"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("3"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("3"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (purify-fa
                                                                                                                                             -3
                                                                                                                                             t)
                                                                                                                                            (("4"
                                                                                                                                              (decompose-equality
                                                                                                                                               -3)
                                                                                                                                              (("4"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!6)")
                                                                                                                                                (("4"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("4"
                                                                                                                                                    (purify-fa
                                                                                                                                                     -2
                                                                                                                                                     t)
                                                                                                                                                    (("4"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("4"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "x!6")
                                                                                                                                                        (("4"
                                                                                                                                                          (prop)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (bddsimp)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (purify-fa
                                                                                           :strong
                                                                                           t)
                                                                                          (("2"
                                                                                            (apply-extensionality
                                                                                             1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "t!2")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (purify-fa
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (decompose-equality
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -1
                                                                                                           "(x!1, x!4)")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "(x!3, x!5)")
                                                                                                            (("1"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2
                                                                                                                     -5
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (decompose-equality
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "x!5")
                                                                                                                                  (("1"
                                                                                                                                    (prop)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("2"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("1"
                                                                                                                                      (prop)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     -3
                                                                                                                                     1
                                                                                                                                     3
                                                                                                                                     4)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "t!2")
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (purify-fa
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (purify-fa
                                                                                                                                               -1
                                                                                                                                               t)
                                                                                                                                              (("2"
                                                                                                                                                (decompose-equality
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (purify-fa
                                                                                                                                                       -1
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "(x!4, x!5)")
                                                                                                                                                          (("2"
                                                                                                                                                            (bddsimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (purify-fa
                                                                                                                                                               -1
                                                                                                                                                               t)
                                                                                                                                                              (("2"
                                                                                                                                                                (decompose-equality
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "(x!4, x!5)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (bddsimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "x!5")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (prop)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           1
                                                                                                                                                                           "x!4")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!1, x!4)")
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!4")
                                                                                                                            (("2"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (purify-fa
                                                                                                                 -4
                                                                                                                 t)
                                                                                                                (("3"
                                                                                                                  (decompose-equality
                                                                                                                   -4)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("3"
                                                                                                                      (bddsimp)
                                                                                                                      (("3"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("3"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (purify-fa
                                                                                                                 -3
                                                                                                                 t)
                                                                                                                (("4"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("4"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("4"
                                                                                                                      (bddsimp)
                                                                                                                      (("4"
                                                                                                                        (purify-fa
                                                                                                                         -2
                                                                                                                         t)
                                                                                                                        (("4"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("4"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "x!5")
                                                                                                                            (("4"
                                                                                                                              (prop)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (purify-fa
                                                                               :strong
                                                                               t)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (bddsimp)
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (inst
                                                                                         1
                                                                                         "x!3")
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           "x!3")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable" -1)
                                  (("2"
                                    (expand "mTypePred" -1)
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPVariable")
                      (("1" (expand "TPMetavariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtyFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtyFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (pre_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (post_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil))
   nil))
 (DirtyLoad_preserves_NonDirtyCache 0
  (DirtyLoad_preserves_NonDirtyCache-6 "" 3651373792
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert
                                                                                                                         :quant-simp?
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "t!2")
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (purify-fa
                                                                                                                                     -1
                                                                                                                                     :strong
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -3)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!3)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (expand "TPMetavariable")
                  (("1" (expand "TPVariable") (("1" (propax) nil nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyLoad_preserves_NonDirtyCache-5 "" 3594767903
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -2)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -2)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert
                                                                                                                         :quant-simp?
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "t!2")
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (purify-fa
                                                                                                                                     -1
                                                                                                                                     :strong
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -3)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!3)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil) nil
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    nil (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (pre_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyLoad_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyLoad_preserves_NonDirtyCache-4 "" 3355413551
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert
                                                                                                                         :quant-simp?
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "t!2")
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (purify-fa
                                                                                                                                     -1
                                                                                                                                     :strong
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (prop)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -3)
                                                                                                                                            (("2"
                                                                                                                                              (decompose-equality
                                                                                                                                               -4)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "(x!1, x!3)")
                                                                                                                                                (("2"
                                                                                                                                                  (bddsimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (pre_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyLoad_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtyLoad_preserves_NonDirtyCache-3 "Misc changes" 3295923066
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (bddsimp)
                                                                                                                        (("2"
                                                                                                                          (skosimp*)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "t!2")
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (purify-fa
                                                                                                                                 -1
                                                                                                                                 :strong
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (prop)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -3)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -4)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "(x!3, x!4)")
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtyLoad_preserves_NonDirtyCache-2 nil 3295923023
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (bddsimp)
                                                                                                                        (("2"
                                                                                                                          (skosimp*)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "t!2")
                                                                                                                            (("2"
                                                                                                                              (hide
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (purify-fa
                                                                                                                                 -1
                                                                                                                                 :strong
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (prop)
                                                                                                                                  (("2"
                                                                                                                                    (decompose-equality
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -3)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -4)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "(x!1, x!3)")
                                                                                                                                            (("2"
                                                                                                                                              (bddsimp)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtyLoad_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (pre_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (post_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (one const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (FALSE const-decl "bool" booleans nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil))
   nil)
  (DirtyLoad_preserves_NonDirtyCache-1 nil 3295306030
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "composition(composition(t!2, one), composition(t!2, mem!1)) = composition(t!2, mem!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (case
                                                                                           "composition(t!2, mem!1) = zero")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "sum(product(ca!1, complement(composition(zero, one))), zero) = ca!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (purify-fa
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "composition(composition(t!2, mem!1), one) = composition(t!2, one)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "FORALL (a, b, c: Carrier): composition(a, sum(b, c)) = sum(composition(a, b), composition(a, c))")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "FORALL (a, b, c: Carrier): sum(a, c) = c AND sum(b, c) = c IMPLIES sum(sum(a, b), c) = c")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "FORALL (a, b, c, d: Carrier): sum(composition(a, b), c) = c IMPLIES sum(composition(a, product(b, d)), c) = c")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (bddsimp)
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         1
                                                                                                                                         "x!3")
                                                                                                                                        (("2"
                                                                                                                                          (prop)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (purify-fa
                                                                                                                   1
                                                                                                                   :strong
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (bddsimp)
                                                                                                                        (("2"
                                                                                                                          (skosimp*)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "t!2")
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (purify-fa
                                                                                                                                   -1
                                                                                                                                   :strong
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (prop)
                                                                                                                                    (("2"
                                                                                                                                      (decompose-equality
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (decompose-equality
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           -3)
                                                                                                                                          (("2"
                                                                                                                                            (decompose-equality
                                                                                                                                             -4)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -1
                                                                                                                                               "(x!1, x!3)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -2)
                                                                                                                                                  (("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (apply-extensionality
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (purify-fa
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("2"
                                                                                                          (apply-extensionality
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     2
                                                                                                                     "x!3")
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skosimp*)
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (prop)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               3)
                                                                                              (("2"
                                                                                                (purify-fa
                                                                                                 :strong
                                                                                                 t)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (apply-extensionality
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "t!2")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (purify-fa
                                                                                                                         -1
                                                                                                                         :strong
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (prop)
                                                                                                                          (("2"
                                                                                                                            (decompose-equality
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (decompose-equality
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "(x!3, x!5)")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "(x!1, x!6)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -8
                                                                                                                                               "(x!5, x!6)")
                                                                                                                                              (("2"
                                                                                                                                                (bddsimp)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -8)
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -7
                                                                                                                                                   "(x!5, x!6)")
                                                                                                                                                  (("2"
                                                                                                                                                    (bddsimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "x!6")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (purify-fa
                                                                                         :strong
                                                                                         t)
                                                                                        (("2"
                                                                                          (apply-extensionality
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "t!2")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           -1
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (prop)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -1
                                                                                                                       "(x!1, x!4)")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "(x!3, x!5)")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -8
                                                                                                                                 "(x!4, x!5)")
                                                                                                                                (("1"
                                                                                                                                  (bddsimp)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -8)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst
                                                                                                                                     1
                                                                                                                                     "x!5")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "(x!4, x!5)")
                                                                                                                                      (("2"
                                                                                                                                        (bddsimp)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!5")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "x!4")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "t!2")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (purify-fa
                                                                                                       -1
                                                                                                       :strong
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (decompose-equality
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (decompose-equality
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -1
                                                                                                                   "(x!1, x!4)")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "(x!3, x!5)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -8
                                                                                                                             "(x!4, x!5)")
                                                                                                                            (("1"
                                                                                                                              (bddsimp)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "x!5")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -7
                                                                                                                                   "(x!4, x!5)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "x!5")
                                                                                                                                      (("2"
                                                                                                                                        (prop)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "x!4")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (prop)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPMetavariable")
                      (("1" (expand "TPVariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (OneToOne const-decl "bool" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Functional const-decl "bool" FA_semantic nil)
    (Pair const-decl "bool" FA_semantic nil)
    (Addr const-decl "PRED[Carrier]" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (addr adt-constructor-decl "(addr?)" FA_Language nil)
    (addr? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (pre_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtyLoad_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   nil))
 (DirtySetFlush_preserves_NonDirtyCache 0
  (DirtySetFlush_preserves_NonDirtyCache-8 "" 3651374162
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (assert
                                                                                                           :quant-simp?
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (purify-fa
                                                                                                               1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("1"
                                                                                                                (apply-extensionality
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "(x!1, x!2)")
                                                                                                                      (("1"
                                                                                                                        (bddsimp)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "(x!1, x!2)")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (assert
                                                                                                                                 :quant-simp?
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -3)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtySetFlush_preserves_NonDirtyCache-7 "" 3594768086
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -2)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -2)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (assert
                                                                                                           :quant-simp?
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (purify-fa
                                                                                                               1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("1"
                                                                                                                (apply-extensionality
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "(x!1, x!2)")
                                                                                                                      (("1"
                                                                                                                        (bddsimp)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "(x!1, x!2)")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (assert
                                                                                                                                 :quant-simp?
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -3)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (one const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (BA_3 formula-decl nil FA_axioms nil)
    (BA_5 formula-decl nil FA_axioms nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil) nil
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    nil (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtySetFlush_preserves_NonDirtyCache-6 "" 3355415821
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (assert
                                                                                                           :quant-simp?
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (decompose-equality
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (purify-fa
                                                                                                               1
                                                                                                               :strong
                                                                                                               t)
                                                                                                              (("1"
                                                                                                                (apply-extensionality
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (bddsimp)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "(x!1, x!2)")
                                                                                                                      (("1"
                                                                                                                        (bddsimp)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "(x!1, x!2)")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (assert
                                                                                                                                 :quant-simp?
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (decompose-equality
                                                                                                                                   -3)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1, x!2)")
                                                                                                                                    (("2"
                                                                                                                                      (bddsimp)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert
                                                                                         :quant-simp?
                                                                                         t)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (one const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (BA_3 formula-decl nil FA_axioms nil)
    (BA_5 formula-decl nil FA_axioms nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtySetFlush_preserves_NonDirtyCache-5 "Fixed proof" 3296018488
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "(x!1, x!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -3
                                                                                                                         "(x!1, x!2)")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (BA_5 formula-decl nil FA_axioms nil)
    (BA_3 formula-decl nil FA_axioms nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (FALSE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil))
   shostak)
  (DirtySetFlush_preserves_NonDirtyCache-4 "Misc changes" 3295923248
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "(x!1, x!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "(x!1, x!2)")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (prop)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (smash)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst?)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtySetFlush_preserves_NonDirtyCache-3 nil 3295923169
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "(x!1, x!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "(x!1, x!2)")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (prop)
                                                                                                                                nil)))))))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil)))))))
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil)))))))))))))))))))))))
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil)))
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (smash)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))
                                                                                         ("2"
                                                                                          (inst?)
                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2"
                                      (propax)
                                      nil)))))))))))))))))))))))))))))
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil)))))))
                 ("2" (smash) nil))))))))))))))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (BA_5 formula-decl nil FA_axioms nil)
    (BA_3 formula-decl nil FA_axioms nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (FALSE const-decl "bool" booleans nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil))
   nil)
  (DirtySetFlush_preserves_NonDirtyCache-2 nil 3295923157
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "(x!1, x!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "(x!1, x!2)")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (prop)
                                                                                                                                nil)))))))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil)))))))
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil)))))))))))))))))))))))
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil)))
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      (("2"
                                                                                        (smash)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))
                                                                                         ("2"
                                                                                          (inst?)
                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2"
                                      (propax)
                                      nil)))))))))))))))))))))))))))))
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil)))))))
                 ("2" (smash) nil))))))))))))))
    nil)
   nil nil)
  (DirtySetFlush_preserves_NonDirtyCache-1 nil 3295306030
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (prop)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -5)
                                                                (("1"
                                                                  (replace
                                                                   -6)
                                                                  (("1"
                                                                    (hide
                                                                     -4
                                                                     -5
                                                                     -6)
                                                                    (("1"
                                                                      (expand
                                                                       "Leq"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "Leq"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "Neg")
                                                                          (("1"
                                                                            (expand
                                                                             "FunctionUpdate")
                                                                            (("1"
                                                                              (expand
                                                                               "FunctionUndef")
                                                                              (("1"
                                                                                (case
                                                                                 "composition(product(complement(zero), one_prime), ca!1) = ca!1")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (case
                                                                                       "composition(d!1, ca!1) = zero")
                                                                                      (("1"
                                                                                        (case
                                                                                         "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "sum(product(mem!1, complement(composition(zero, one))), zero) = mem!1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (purify-fa
                                                                                                     -1
                                                                                                     :strong
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (decompose-equality
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (purify-fa
                                                                                                         -4
                                                                                                         :strong
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (decompose-equality
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (purify-fa
                                                                                                             1
                                                                                                             :strong
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (apply-extensionality
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "(x!1, x!2)")
                                                                                                                    (("1"
                                                                                                                      (bddsimp)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -3
                                                                                                                         "(x!1, x!2)")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (prop)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (purify-fa
                                                                                                   1
                                                                                                   :strong
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     1)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             1
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (case
                                                                                         "composition(composition(d!1, ca!1), one) = composition(d!1, one)")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "BA_3")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ca!1"
                                                                                                 "sum(product(mem!1, complement(composition(d!1, one))), composition(d!1, ca!1))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "BA_5")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (purify-fa
                                                                                                           2
                                                                                                           :strong
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               3)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!1")
                                                                                                                    (("1"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (typepred
                                                                                                                         "d!1")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "Dirty")
                                                                                                                            (("1"
                                                                                                                              (purify-fa
                                                                                                                               -1
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!3)")
                                                                                                                                  (("1"
                                                                                                                                    (bddsimp)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (prop)
                                                                                                                    (("2"
                                                                                                                      (purify-fa
                                                                                                                       -2
                                                                                                                       :strong
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "(x!1, x!1)")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (purify-fa
                                                                                                                               -3
                                                                                                                               :strong
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (decompose-equality
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1, x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (bddsimp)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -2
                                                                                           -3
                                                                                           3)
                                                                                          (("2"
                                                                                            (purify-fa
                                                                                             :strong
                                                                                             t)
                                                                                            (("2"
                                                                                              (decompose-equality
                                                                                               -1)
                                                                                              (("2"
                                                                                                (apply-extensionality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (apply-extensionality
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "(x!1, x!6)")
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "x!7")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "x!6")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (purify-fa
                                                                                     :strong
                                                                                     t)
                                                                                    (("2"
                                                                                      (apply-extensionality
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPMetavariable")
                      (("1" (expand "TPVariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (FALSE const-decl "bool" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (one const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (BA_3 formula-decl nil FA_axioms nil)
    (BA_5 formula-decl nil FA_axioms nil)
    (converse const-decl "Carrier" FA_semantic nil)
    (Dom const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (zero const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   nil))
 (AllStar_preserves_NonDirtyCache 0
  (AllStar_preserves_NonDirtyCache-1 nil 3295306030
   ("" (expand "AllStar_preserves_NonDirtyCache" 1)
    (("" (expand-meaning)
      (("" (expand-meaning 1)
        (("" (expand-meaning 1)
          (("" (skosimp*)
            (("" (purify-fodl -1)
              (("" (lemma "PDL_6_box_form")
                ((""
                  (inst -1 "NonDirtyCache(v(cs))"
                   "DirtyCacheWrite(v(cs)) + DirtyFlush(v(cs)) + DirtyLoad(v(cs)) + DirtySetFlush(v(cs))"
                   "w!1 WITH [(cs) := t!1]")
                  (("" (expand-meaning -1)
                    (("" (inst?)
                      (("" (expand-meaning -1)
                        (("" (prop)
                          (("" (hide 2)
                            (("" (expand-meaning 1)
                              ((""
                                (prop)
                                (("1" (purify-fodl 1) nil nil)
                                 ("2"
                                  (expand-meaning 1)
                                  (("2"
                                    (skosimp*)
                                    (("2"
                                      (expand-meaning 1)
                                      (("2"
                                        (prop)
                                        (("2"
                                          (purify-fodl -2)
                                          (("2"
                                            (expand-meaning 1)
                                            (("2"
                                              (skosimp*)
                                              (("2"
                                                (purify-fodl 1)
                                                (("2"
                                                  (hide -1 -4)
                                                  (("2"
                                                    (purify-fodl -2)
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (lemma
                                                         "DirtyCacheWrite_preserves_NonDirtyCache")
                                                        (("1"
                                                          (purify-fodl
                                                           -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "wPrime!2")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "mMetavariable!1")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "wPrime!1(cs)")
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "wPrime!2")
                                                                    (("1"
                                                                      (prop)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "DirtyFlush_preserves_NonDirtyCache")
                                                        (("2"
                                                          (purify-fodl
                                                           -1)
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "wPrime!2")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "mMetavariable!1")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "wPrime!1(cs)")
                                                                (("2"
                                                                  (prop)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "wPrime!2")
                                                                    (("2"
                                                                      (prop)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "DirtyLoad_preserves_NonDirtyCache")
                                                        (("3"
                                                          (purify-fodl
                                                           -1)
                                                          (("3"
                                                            (inst
                                                             -1
                                                             "wPrime!2")
                                                            (("3"
                                                              (inst
                                                               -1
                                                               "mMetavariable!1")
                                                              (("3"
                                                                (inst
                                                                 -1
                                                                 "wPrime!1(cs)")
                                                                (("3"
                                                                  (prop)
                                                                  (("3"
                                                                    (inst
                                                                     -1
                                                                     "wPrime!2")
                                                                    (("3"
                                                                      (prop)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (lemma
                                                         "DirtySetFlush_preserves_NonDirtyCache")
                                                        (("4"
                                                          (purify-fodl
                                                           -1)
                                                          (("4"
                                                            (inst
                                                             -1
                                                             "wPrime!2")
                                                            (("4"
                                                              (inst
                                                               -1
                                                               "mMetavariable!1")
                                                              (("4"
                                                                (inst
                                                                 -1
                                                                 "wPrime!1(cs)")
                                                                (("4"
                                                                  (prop)
                                                                  (("4"
                                                                    (inst
                                                                     -1
                                                                     "wPrime!2")
                                                                    (("4"
                                                                      (prop)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (nth def-decl "T" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil) nil
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (mTerm def-decl "Carrier" FODL_semantic nil) nil
    (wf_Formula_TRUE name-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_FALSE name-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Program_SKIP name-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Term_Variable application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (list_wf_Term_cons application-judgement "list[wf_Term_
         [Constant, Metavariable, Variable, Predicate, sigPredicate,
          Function_, sigFunction_]]" SpecProperties nil)
    (wf_Program_CHOICE application-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (FODL_Language type-decl nil FODL_Language_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (FALSE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (NOT? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (IMPLIES? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (OR? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (AND? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (IFF? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (P? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (EQ? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (EXISTS? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (FORALL? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (DIAMOND? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (BOX? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Formula_ type-eq-decl nil FODL_Language_adt nil)
    (wf def-decl "boolean" wf_FODL_Language nil)
    (wf_Formula_ type-eq-decl nil wf_FODL_Language nil)
    (c? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (m? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (v? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (F? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Term_ type-eq-decl nil FODL_Language_adt nil)
    (wf_Term_ type-eq-decl nil wf_FODL_Language nil)
    (v adt-constructor-decl "[Variable -> (v?)]" FODL_Language_adt nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (T?? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (A? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (SKIP? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (ASSIGNMENT? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (COMPOSITION? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (CHOICE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (ITERATION? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Program_ type-eq-decl nil FODL_Language_adt nil)
    (wf_Program_ type-eq-decl nil wf_FODL_Language nil)
    (+ adt-constructor-decl "[[Program_, Program_] -> (CHOICE?)]"
       FODL_Language_adt nil)
    (DirtyCacheWrite const-decl "[(v?) -> wf_Program_]" SpecActions
     nil)
    (DirtyFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (World_ type-eq-decl nil FODL_semantic nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (DirtyCacheWrite_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (DirtyCacheWrite_preserves_NonDirtyCache formula-decl nil
     SpecProperties nil)
    (DirtyFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (DirtyFlush_preserves_NonDirtyCache formula-decl nil SpecProperties
     nil)
    (DirtyLoad_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (DirtyLoad_preserves_NonDirtyCache formula-decl nil SpecProperties
     nil)
    (DirtySetFlush_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (DirtySetFlush_preserves_NonDirtyCache formula-decl nil
     SpecProperties nil)
    (wf_Term_Constant application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_AND application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_EXISTS_ application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Term_Metavariable application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_EQ application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Program_A application-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (pre_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtyCacheWrite const-decl "[(v?) -> wf_Formula_]"
     SpecActions nil)
    (pre_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (post_DirtyFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (post_DirtyLoad const-decl "[(v?) -> wf_Formula_]" SpecActions nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (PDL_6_box_form formula-decl nil FODL_lemmas nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (AllStar_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil))
   nil))
 (DirtySetFlush_leaves_DirtyCacheConsistent 0
  (DirtySetFlush_leaves_DirtyCacheConsistent-6 "" 3651374305
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         2
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (DirtySetFlush_leaves_DirtyCacheConsistent-5 "" 3594768142
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -2)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -2)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         2
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil) nil
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    nil (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (DirtyCacheConsistent const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtySetFlush_leaves_DirtyCacheConsistent-4 "Misc changes"
   3295923401
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         2
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (smash) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (DirtyCacheConsistent const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   shostak)
  (DirtySetFlush_leaves_DirtyCacheConsistent-3 nil 3295923340
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil)))))))))))))))))))
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         2
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2"
                                      (propax)
                                      nil)))))))))))))))))))))))))))))
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil)))))))
                 ("2" (smash) nil))))))))))))))
    nil)
   ((mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent const-decl "wf_Formula_"
     SpecProperties nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtyCacheConsistent const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (nth def-decl "T" list_props nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil))
   nil)
  (DirtySetFlush_leaves_DirtyCacheConsistent-2 nil 3295923328
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil)))))))))))))))))))
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         2
                                                                                         "x!1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2"
                                      (propax)
                                      nil)))))))))))))))))))))))))))))
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (case "m!1 = cs0")
                (("1" (replace -1)
                  (("1" (expand "TPMetavariable")
                    (("1" (expand "TPVariable")
                      (("1" (propax) nil)))))))
                 ("2" (smash) nil))))))))))))))
    nil)
   nil nil)
  (DirtySetFlush_leaves_DirtyCacheConsistent-1 nil 3295306030
   ("" (purify-fodl)
    (("" (skosimp*)
      (("" (inst -2 "LAMBDA (m: Metavariable): t!1")
        (("1" (skosimp*)
          (("1" (typepred "t!1")
            (("1" (hide -1)
              (("1" (expand "TPVariable")
                (("1" (expand "mTypePred")
                  (("1" (expand "DirtyCacheSystem")
                    (("1" (skosimp*)
                      (("1"
                        (lemma "Memory_DirtyCache_DirtyCacheSystem")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (typepred "dca!1")
                              (("1"
                                (hide -1)
                                (("1"
                                  (expand "DirtyCache" -1)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (lemma "Cache_Dirty_DirtyCache")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide -3 -7)
                                            (("1"
                                              (replace -1 :dir rl)
                                              (("1"
                                                (replace -2 :dir rl)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (replace
                                                         -2
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -4
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (hide
                                                             -1
                                                             -2
                                                             -4)
                                                            (("1"
                                                              (replace
                                                               -4)
                                                              (("1"
                                                                (replace
                                                                 -6)
                                                                (("1"
                                                                  (hide
                                                                   -4
                                                                   -5
                                                                   -6)
                                                                  (("1"
                                                                    (purify-fa
                                                                     1
                                                                     t)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       1)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (typepred
                                                                               "d!1")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (purify-fa
                                                                                   -1
                                                                                   t)
                                                                                  (("1"
                                                                                    (decompose-equality
                                                                                     -1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1, x!4)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "x!4")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (purify-fa
                                                                             -4
                                                                             t)
                                                                            (("2"
                                                                              (decompose-equality
                                                                               -4)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "(x!1, x!2)")
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (inst
                                                                                     2
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (prop)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (typepred "t!1")
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "TPVariable")
                                  (("2"
                                    (expand "mTypePred")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (skosimp*)
            (("2" (typepred "t!1")
              (("2" (hide -1)
                (("2" (case "m!1 = cs0")
                  (("1" (replace -1)
                    (("1" (expand "TPMetavariable")
                      (("1" (expand "TPVariable")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (smash) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cs0? adt-recognizer-decl "[Metavariable -> boolean]" FA_Language
     nil)
    (cs0 adt-constructor-decl "(cs0?)" FA_Language nil)
    (DirtyCache const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory const-decl "PRED[Carrier]" FA_semantic nil)
    (Cache_Dirty_DirtyCache formula-decl nil FA_semantic nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Addr const-decl "PRED[FA_Element]" FA_semantic nil)
    (one_prime const-decl "Carrier" FA_semantic nil)
    (one_prime_Addr const-decl "Carrier" FA_semantic nil)
    (Addr_Element const-decl "PRED[Element]" FA_semantic nil)
    (element? adt-recognizer-decl "[FA_Element -> boolean]"
     FA_Element_adt nil)
    (element adt-constructor-decl "[T -> (element?)]" FA_Element_adt
     nil)
    (Neg const-decl "Carrier" FA_semantic nil)
    (Leq const-decl "bool" FA_semantic nil)
    (FunctionUpdate const-decl "Carrier" FA_semantic nil)
    (composition const-decl "Carrier" FA_semantic nil)
    (sum const-decl "Carrier" FA_semantic nil)
    (FunctionUndef const-decl "Carrier" FA_semantic nil)
    (product const-decl "Carrier" FA_semantic nil)
    (complement const-decl "Carrier" FA_semantic nil)
    (one const-decl "Carrier" FA_semantic nil)
    (Cache const-decl "PRED[Carrier]" FA_semantic nil)
    (Dirty const-decl "PRED[Carrier]" FA_semantic nil)
    (Memory_DirtyCache_DirtyCacheSystem formula-decl nil FA_semantic
     nil)
    (DirtyCacheSystem const-decl "PRED[Carrier]" FA_semantic nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (mTerm def-decl "Carrier" FODL_semantic nil)
    (nth def-decl "T" list_props nil)
    (DirtyCacheConsistent const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent const-decl "wf_Formula_"
     SpecProperties nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (Constant type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Predicate type-decl nil FA_Language nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (TypePred type-decl nil FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (list type-decl nil list_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil))
   nil))
 (Consistency_criteria 0
  (Consistency_criteria-1 nil 3295306030
   ("" (expand "Consistency_criteria" 1)
    (("" (expand-meaning 1)
      (("" (expand-meaning 1)
        (("" (expand-meaning 1)
          (("" (skosimp*)
            (("" (purify-fodl -1)
              (("" (lemma "PDL_4_box_form")
                ((""
                  (inst -1 "DirtyCacheConsistent(v(cs))"
                   "*(DirtyCacheWrite(v(cs)) + DirtyFlush(v(cs)) + DirtyLoad(v(cs)) + DirtySetFlush(v(cs)))"
                   "DirtySetFlush(v(cs))" "w!1 WITH [(cs) := t!1]")
                  (("" (expand-meaning -1)
                    (("" (inst -1 "mMetavariable!1")
                      (("" (expand-meaning -1)
                        (("" (prop)
                          (("" (hide 2 3)
                            (("" (expand-meaning 1)
                              ((""
                                (skosimp*)
                                ((""
                                  (lemma
                                   "AllStar_preserves_NonDirtyCache")
                                  ((""
                                    (expand
                                     "AllStar_preserves_NonDirtyCache"
                                     -1)
                                    ((""
                                      (expand-meaning -1)
                                      ((""
                                        (expand-meaning -1)
                                        ((""
                                          (inst
                                           -1
                                           "w!1 WITH [(cs) := t!1]")
                                          ((""
                                            (inst -1 "mMetavariable!1")
                                            ((""
                                              (inst
                                               -1
                                               "(w!1 WITH [(cs) := t!1])(cs)")
                                              ((""
                                                (expand-meaning -1)
                                                ((""
                                                  (prop)
                                                  (("1"
                                                    (expand-meaning -1)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "wPrime!1")
                                                      (("1"
                                                        (prop)
                                                        (("1"
                                                          (purify-fodl
                                                           -1)
                                                          (("1"
                                                            (lemma
                                                             "DirtySetFlush_leaves_DirtyCacheConsistent")
                                                            (("1"
                                                              (expand
                                                               "DirtySetFlush_leaves_DirtyCacheConsistent"
                                                               -1)
                                                              (("1"
                                                                (expand-meaning
                                                                 -1)
                                                                (("1"
                                                                  (expand-meaning
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "wPrime!1")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "mMetavariable!1")
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "wPrime!1(cs)")
                                                                        (("1"
                                                                          (expand-meaning
                                                                           -1)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (hide
                                                                               -2
                                                                               -3
                                                                               -4)
                                                                              (("1"
                                                                                (purify-fodl)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               -2
                                                                               -3
                                                                               2)
                                                                              (("2"
                                                                                (purify-fodl)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (purify-fodl)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((meaningF const-decl "PRED[World_]" FODL_semantic nil)
    (NonDirtyCache const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (sigFunction_ const-decl "[Function_ -> nat]" FA_Language nil)
    (Function_ type-decl nil FA_Language nil)
    (sigPredicate const-decl "[Predicate -> nat]" FA_Language nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Predicate type-decl nil FA_Language nil)
    (Variable type-decl nil FA_Language nil)
    (Metavariable type-decl nil FA_Language nil)
    (Constant type-decl nil FA_Language nil)
    (wf_F const-decl "[[f: Function_,
  {lPrime: list[wf_Term_] | length(lPrime) = sigFunction_(f)}] ->
   wf_Term_]" wf_FODL_Language nil)
    (wf_P const-decl
     "[[p: Predicate, {l: list[wf_Term_] | length(l) = sigPredicate(p)}] ->
   wf_Formula_]" wf_FODL_Language nil)
    (nth def-decl "T" list_props nil)
    (mPredicate const-decl
     "[P: Predicate -> [{l: list[Carrier] | sigPredicate(P) = length(l)} -> bool]]"
     FA_semantic nil)
    (mFunction_ const-decl "[F: Function_ ->
   [{l: list[Carrier] | sigFunction_(F) = length(l)} -> Carrier]]"
     FA_semantic nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil) nil
    (list type-decl nil list_adt nil)
    (mConstant const-decl "[Constant -> Carrier]" FA_semantic nil)
    (mTypePred const-decl "[TypePred -> [Carrier -> bool]]" FA_semantic
     nil)
    (Carrier type-from-decl nil FA_semantic nil)
    (Carrier_pred const-decl
     "[[[FA_Element, FA_Element] -> boolean] -> boolean]" FA_semantic
     nil)
    (PRED type-eq-decl nil defined_types nil)
    (FA_Element type-decl nil FA_Element_adt nil)
    (Element nonempty-type-decl nil FA_semantic nil)
    (TPVariable const-decl "[Variable -> TypePred]" FA_semantic nil)
    (TPMetavariable const-decl "[Metavariable -> TypePred]" FA_semantic
     nil)
    (TypePred type-decl nil FA_semantic nil)
    (mTerm def-decl "Carrier" FODL_semantic nil) nil
    (wf_Formula_TRUE name-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_FALSE name-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Program_SKIP name-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Term_Variable application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (list_wf_Term_cons application-judgement "list[wf_Term_
         [Constant, Metavariable, Variable, Predicate, sigPredicate,
          Function_, sigFunction_]]" SpecProperties nil)
    (wf_Program_ITERATION application-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Program_CHOICE application-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (FODL_Language type-decl nil FODL_Language_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (TRUE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (FALSE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (NOT? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (IMPLIES? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (OR? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (AND? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (IFF? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (P? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (EQ? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (EXISTS? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (FORALL? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (DIAMOND? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (BOX? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Formula_ type-eq-decl nil FODL_Language_adt nil)
    (wf def-decl "boolean" wf_FODL_Language nil)
    (wf_Formula_ type-eq-decl nil wf_FODL_Language nil)
    (c? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (m? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (v? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (F? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Term_ type-eq-decl nil FODL_Language_adt nil)
    (wf_Term_ type-eq-decl nil wf_FODL_Language nil)
    (DirtyCacheConsistent const-decl "[wf_Term_ -> wf_Formula_]"
     SpecPredicates nil)
    (v adt-constructor-decl "[Variable -> (v?)]" FODL_Language_adt nil)
    (cs? adt-recognizer-decl "[Variable -> boolean]" FA_Language nil)
    (cs adt-constructor-decl "(cs?)" FA_Language nil)
    (T?? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (A? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (SKIP? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (ASSIGNMENT? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (COMPOSITION? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (CHOICE? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (ITERATION? adt-recognizer-decl "[FODL_Language -> boolean]"
     FODL_Language_adt nil)
    (Program_ type-eq-decl nil FODL_Language_adt nil)
    (wf_Program_ type-eq-decl nil wf_FODL_Language nil)
    (* adt-constructor-decl "[Program_ -> (ITERATION?)]"
       FODL_Language_adt nil)
    (+ adt-constructor-decl "[[Program_, Program_] -> (CHOICE?)]"
       FODL_Language_adt nil)
    (DirtyCacheWrite const-decl "[(v?) -> wf_Program_]" SpecActions
     nil)
    (DirtyFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (DirtyLoad const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (DirtySetFlush const-decl "[(v?) -> wf_Program_]" SpecActions nil)
    (World_ type-eq-decl nil FODL_semantic nil)
    (AssMetavariable type-eq-decl nil FODL_semantic nil)
    (AllStar_preserves_NonDirtyCache formula-decl nil SpecProperties
     nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent const-decl "wf_Formula_"
     SpecProperties nil)
    (wf_Formula_BOX application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Program_A application-judgement "wf_Program_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_EQ application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Term_Metavariable application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Formula_AND application-judgement "wf_Formula_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (wf_Term_Constant application-judgement "wf_Term_
    [Constant, Metavariable, Variable, Predicate, sigPredicate, Function_,
     sigFunction_]" SpecProperties nil)
    (post_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (pre_DirtySetFlush const-decl "[(v?) -> wf_Formula_]" SpecActions
     nil)
    (DirtySetFlush_leaves_DirtyCacheConsistent formula-decl nil
     SpecProperties nil)
    (AllStar_preserves_NonDirtyCache const-decl "wf_Formula_"
     SpecProperties nil)
    (PDL_4_box_form formula-decl nil FODL_lemmas nil)
    (m def-decl "{u: union[PRED[World_], PRED[[World_, World_]]] |
   CASES l OF inl(f): inl?(u), inr(P): inr?(u) ENDCASES}" FODL_semantic
     nil)
    (Consistency_criteria const-decl "wf_Formula_" SpecProperties nil))
   nil)))

