(finite_sets_below
 (finite_below 0
  (finite_below-1 nil 3338228413 3338228454
   ("" (skolem!)
    (("" (expand "is_finite")
      (("" (inst + "N" "LAMBDA (i: (BS!1)): i")
        (("" (expand "injective?") (("" (skosimp) nil nil)) nil)) nil))
      nil))
    nil)
   proved
   ((is_finite const-decl "bool" finite_sets nil)
    (injective? const-decl "bool" functions nil)
    (below type-eq-decl nil nat_types nil)
    (set type-eq-decl nil sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   40539 410 t shostak))
 (card_below_fullset_TCC1 0
  (card_below_fullset_TCC1-1 nil 3338228399 3338228486
   ("" (rewrite "finite_below") nil nil) proved
   ((fullset const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_below formula-decl nil finite_sets_below nil))
   8058 80 t nil))
 (card_below_fullset 0
  (card_below_fullset-1 nil 3338228457 3338228586
   ("" (expand "fullset")
    (("" (lemma "card_bij[below(N)]")
      (("" (inst - "N" "{x: below(N) | TRUE}")
        (("1" (replace -1)
          (("1" (hide -1)
            (("1" (inst + "(LAMBDA (x: {x: below(N) | TRUE}): x)")
              (("1" (expand "bijective?")
                (("1" (split)
                  (("1" (expand "injective?") (("1" (skosimp) nil nil))
                    nil)
                   ("2" (expand "surjective?")
                    (("2" (skosimp) (("2" (inst?) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "finite_below") nil nil))
        nil))
      nil))
    nil)
   proved
   ((below type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_bij formula-decl nil finite_sets nil)
    (finite_below formula-decl nil finite_sets_below nil)
    (below type-eq-decl nil nat_types nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (TRUE const-decl "bool" booleans nil)
    (fullset const-decl "set" sets nil))
   94286 1190 t shostak))
 (card_below_TCC1 0
  (card_below_TCC1-1 nil 3338228399 3338228618
   ("" (skolem!) (("" (rewrite "finite_below") nil nil)) nil) proved
   ((finite_below formula-decl nil finite_sets_below nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (below type-eq-decl nil naturalnumbers nil)
    (set type-eq-decl nil sets nil))
   9539 150 t nil))
 (card_below 0
  (card_below-1 nil 3338228590 3338228760
   ("" (skolem!)
    (("" (lemma "card_subset[below(N)]")
      (("" (inst - "BS!1" "fullset[below(N)]")
        (("1" (lemma "card_below_fullset")
          (("1" (assert)
            (("1" (expand* "subset?" "fullset" "member") nil nil))
            nil))
          nil)
         ("2" (rewrite "finite_below") nil nil))
        nil))
      nil))
    nil)
   proved
   ((below type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_subset formula-decl nil finite_sets nil)
    (finite_below formula-decl nil finite_sets_below nil)
    (card_below_fullset formula-decl nil finite_sets_below nil)
    (subset? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (fullset const-decl "set" sets nil))
   41622 610 t shostak))
 (finite_upto 0
  (finite_upto-1 nil 3338228787 3338228836
   ("" (skolem!)
    (("" (expand "is_finite")
      (("" (inst + "N + 1" "LAMBDA (i: (US!1)): i")
        (("" (expand "injective?") (("" (skosimp) nil nil)) nil)) nil))
      nil))
    nil)
   proved
   ((is_finite const-decl "bool" finite_sets nil)
    (injective? const-decl "bool" functions nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil) (set type-eq-decl nil sets nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   48907 580 t shostak))
 (card_upto_fullset_TCC1 0
  (card_upto_fullset_TCC1-1 nil 3338228399 3338228877
   ("" (rewrite "finite_upto") nil nil) proved
   ((fullset const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_upto formula-decl nil finite_sets_below nil))
   6978 90 t nil))
 (card_upto_fullset 0
  (card_upto_fullset-1 nil 3338228852 3338228969
   ("" (expand "fullset")
    (("" (lemma "card_bij[upto(N)]")
      (("" (inst - "N + 1" "{x: upto(N) | TRUE}")
        (("1" (replace -1)
          (("1" (hide -1)
            (("1" (inst + "LAMBDA (x: {x: upto(N) | TRUE}): x")
              (("1" (expand "bijective?")
                (("1" (split)
                  (("1" (expand "injective?") (("1" (skosimp) nil nil))
                    nil)
                   ("2" (expand "surjective?")
                    (("2" (skolem!) (("2" (inst?) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "finite_upto") nil nil))
        nil))
      nil))
    nil)
   proved
   ((upto nonempty-type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_bij formula-decl nil finite_sets nil)
    (finite_upto formula-decl nil finite_sets_below nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (TRUE const-decl "bool" booleans nil)
    (fullset const-decl "set" sets nil))
   87014 1480 t shostak))
 (card_upto_TCC1 0
  (card_upto_TCC1-1 nil 3338228399 3338228990
   ("" (skolem!) (("" (rewrite "finite_upto") nil nil)) nil) proved
   ((finite_upto formula-decl nil finite_sets_below nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (set type-eq-decl nil sets nil))
   13011 150 t nil))
 (card_upto 0
  (card_upto-1 nil 3338228994 3338229065
   ("" (skolem!)
    (("" (lemma "card_subset[upto(N)]")
      (("" (inst - "US!1" "fullset[upto(N)]")
        (("1" (lemma "card_upto_fullset")
          (("1" (assert)
            (("1" (expand* "subset?" "fullset" "member") nil nil))
            nil))
          nil)
         ("2" (rewrite "finite_upto") nil nil))
        nil))
      nil))
    nil)
   proved
   ((upto nonempty-type-eq-decl nil naturalnumbers nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (<= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_subset formula-decl nil finite_sets nil)
    (finite_upto formula-decl nil finite_sets_below nil)
    (card_upto_fullset formula-decl nil finite_sets_below nil)
    (subset? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (fullset const-decl "set" sets nil))
   51654 760 t shostak))
 (pidgeon_hole_TCC1 0
  (pidgeon_hole_TCC1-1 nil 3338228399 3338229102
   ("" (skosimp) (("" (rewrite "finite_intersection") nil nil)) nil)
   proved
   ((finite_intersection formula-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (below type-eq-decl nil naturalnumbers nil))
   16940 180 t nil))
 (pidgeon_hole 0
  (pidgeon_hole-1 nil 3338229106 3338229144
   ("" (skosimp)
    (("" (use "card_union[below(N)]")
      (("" (use "card_below") (("" (assert) nil nil)) nil)) nil))
    nil)
   proved
   ((card_union formula-decl nil finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (N formal-const-decl "nat" finite_sets_below nil)
    (below type-eq-decl nil naturalnumbers nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil) (union const-decl "set" sets nil)
    (card_below formula-decl nil finite_sets_below nil))
   37878 1510 t shostak)))

