(|finite_sets_sum|
 (|plus_zero_right| "" (SKOSIMP*)
  (("" (LEMMA "zero_identity")
    (("" (EXPAND "identity?")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL))
  NIL)
 (|plus_zero_left| "" (SKOSIMP*)
  (("" (LEMMA "zero_identity")
    (("" (EXPAND "identity?")
      (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL))
  NIL)
 (|plus_assoc| "" (LEMMA "plus_ac")
  (("" (FLATTEN)
    (("" (EXPAND "associative?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
  NIL)
 (|plus_comm| "" (LEMMA "plus_ac")
  (("" (FLATTEN)
    (("" (EXPAND "commutative?") (("" (PROPAX) NIL NIL)) NIL)) NIL))
  NIL)
 (|sum_TCC1| "" (GRIND) NIL NIL)
 (|sum_TCC2| "" (SKOSIMP*)
  (("" (REWRITE "card_rest") (("" (ASSERT) NIL NIL)) NIL)) NIL)
 (|sum_emptyset| "" (GRIND) NIL NIL)
 (|sum_singleton| "" (SKOLEM!)
  (("" (EXPAND "sum")
    ((""
      (AUTO-REWRITE "choose_singleton[T]" "rest_singleton[T]"
                    "sum_emptyset")
      (("" (SMASH) NIL NIL)) NIL))
    NIL))
  NIL)
 (|sum_x| "" (INDUCT "S" :NAME "finite_set_induction_gen")
  (("" (AUTO-REWRITE "card_rest" "card_remove" "nonempty?[T]")
    (("" (SKOSIMP*)
      (("" (EXPAND "sum" 1 1)
        (("" (SMASH)
          (("1" (DELETE -1) (("1" (GRIND :EXCLUDE "sum") NIL NIL)) NIL)
           ("2" (INST-CP - "rest(S!1)")
            (("2" (INST - "remove(x!1, S!1)")
              (("2" (ASSERT)
                (("2" (INST - "f!1" "choose(S!1)")
                  (("1" (INST - "f!1" "x!1")
                    (("1"
                      (CASE-REPLACE
                       "remove(choose(S!1), remove(x!1, S!1)) = remove(x!1, rest(S!1))")
                      (("1" (REPLACE*)
                        (("1" (REWRITE "plus_assoc" :DIR RL)
                          (("1" (REWRITE "plus_assoc" :DIR RL)
                            (("1"
                              (LEMMA "plus_comm"
                               ("r1"
                                "f!1(x!1)"
                                "r2"
                                "f!1(choose(S!1))"))
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (DELETE -1 -2 2 3)
                        (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                          (("2" (GRIND :EXCLUDE ("choose")) NIL NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (DELETE -1 2)
                      (("2" (GRIND :EXCLUDE ("sum" "choose")) NIL NIL))
                      NIL))
                    NIL)
                   ("2" (DELETE -1 2)
                    (("2" (GRIND :EXCLUDE ("sum" "choose")) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_x1_x2| "" (SKOLEM!)
  (("" (REWRITE "sum_x" :DIR RL)
    (("" (REWRITE "sum_x" :DIR RL) NIL NIL)) NIL))
  NIL)
 (|sum_add| "" (SKOLEM!)
  (("" (SMASH)
    (("1" (REWRITE "member_add")
      (("1" (REWRITE "plus_zero_right") NIL NIL)) NIL)
     ("2" (USE "sum_x" ("S" "add(x!1, S!1)"))
      (("1" (REWRITE "remove_add_member")
        (("1" (REWRITE "plus_comm") NIL NIL)) NIL)
       ("2" (EXPAND "add") (("2" (PROPAX) NIL NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|sum_remove| "" (SKOLEM!)
  (("" (SMASH)
    (("1" (USE "sum_x")
      (("1" (REWRITE "plus_comm") (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (EXPAND "member") (("2" (PROPAX) NIL NIL)) NIL))
      NIL)
     ("2" (REWRITE "member_remove")
      (("2" (REWRITE "plus_zero_right") NIL NIL)) NIL))
    NIL))
  NIL)
 (|sum_rest_TCC1| "" (SUBTYPE-TCC) NIL NIL)
 (|sum_rest| "" (SKOSIMP)
  (("" (ASSERT) (("" (EXPAND "sum" 2 2) (("" (PROPAX) NIL NIL)) NIL))
    NIL))
  NIL)
 (|sum_disj_union| "" (SKOLEM + ("A!1" _ "f!1"))
  ((""
    (AUTO-REWRITE "union_empty[T]" "sum_emptyset" "sum_add"
                  "plus_zero_left" "plus_zero_right" "plus_assoc"
                  "member")
    (("" (INDUCT "B" :NAME "finite_set_ind_modified")
      (("1" (ASSERT) NIL NIL)
       ("2" (SKOSIMP)
        (("2" (GROUND)
          (("1"
            (CASE-REPLACE
             "union(A!1, add(e!1, S!1)) = add(e!1, union(A!1, S!1))")
            (("1" (ASSERT)
              (("1" (SMASH)
                (("1" (DELETE -1 -2 2) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (REPLACE -2) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (DELETE -1 -2 2 3)
              (("2" (APPLY-EXTENSIONALITY :HIDE? T)
                (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (DELETE 2 3)
            (("2" (GRIND :IF-MATCH NIL)
              (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_diff_subset| "" (SKOSIMP)
  (("" (FORWARD-CHAIN "union_diff_subset")
    (("" (USE "sum_disj_union" ("A" "A!1"))
      (("" (REWRITE "difference_disjoint")
        (("" (GROUND)
          (("" (REPLACE*)
            (("" (REWRITE "plus_comm") (("" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_union| ""
  (AUTO-REWRITE "union_subset1[T]" "intersection_subset1[T]"
                "plus_assoc")
  (("" (SKOLEM!)
    (("" (LEMMA "sum_diff_subset" ("f" "f!1"))
      (("" (INST-CP - "A!1" "union(A!1, B!1)")
        (("" (INST - "intersection(A!1, B!1)" "B!1")
          (("" (GROUND)
            (("1" (USE "diff_union_inter")
              (("1" (REWRITE "plus_comm" -2)
                (("1" (REPLACE -2 + RL)
                  (("1" (REPLACE -3 + RL) (("1" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (REWRITE "intersection_commutative")
              (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_diff_intersection| "" (SKOLEM!)
  ((""
    (AUTO-REWRITE "sum_emptyset" "plus_zero_right" "plus_zero_left"
                  "plus_assoc")
    (("" (REWRITE "sum_union" :DIR RL)
      ((""
        (CASE-REPLACE
         "union(difference(A!1, B!1), intersection(A!1, B!1)) = A!1")
        (("1"
          (CASE-REPLACE
           "intersection(difference(A!1, B!1), intersection(A!1, B!1)) = emptyset")
          (("1" (ASSERT) NIL NIL)
           ("2" (DELETE -1 2)
            (("2" (APPLY-EXTENSIONALITY :HIDE? T)
              (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (DELETE 2)
          (("2" (APPLY-EXTENSIONALITY :HIDE? T) (("2" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_f_g| "" (AUTO-REWRITE "sum_emptyset" "sum_add" "member")
  (("" (SKOLEM + (_ "f!1" "g!1"))
    (("" (INDUCT "S" :NAME "finite_set_ind_modified")
      (("1" (ASSERT) NIL NIL)
       ("2" (SKOSIMP)
        (("2" (GROUND)
          (("1" (INST?)
            (("1" (ASSERT) NIL NIL)
             ("2" (EXPAND "add") (("2" (PROPAX) NIL NIL)) NIL))
            NIL)
           ("2" (DELETE 2 3) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|sum_particular| "" (AUTO-REWRITE "plus_zero_right" "plus_zero_left")
  (("" (SKOLEM!)
    (("" (SMASH)
      (("1" (USE "sum_x")
        (("1" (USE "sum_x" ("f" "f!1 WITH [x!1 := zero]"))
          (("1" (ASSERT)
            (("1" (REWRITE "plus_comm" -2)
              (("1" (USE "sum_f_g" ("S" "remove(x!1, S!1)" "f" "f!1"))
                (("1" (ASSERT)
                  (("1" (DELETE -1 -2 -3 2) (("1" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (REWRITE "sum_f_g") NIL NIL))
      NIL))
    NIL))
  NIL)
 (|sum_distributive| ""
  (AUTO-REWRITE "sum_emptyset" "sum_add" "plus_zero_right"
                "plus_zero_left" "plus_assoc" "member")
  (("" (SKOLEM + (_ "f!1" "g!1"))
    (("" (INDUCT "A" :NAME "finite_set_ind_modified")
      (("1" (ASSERT) NIL NIL)
       ("2" (SKOSIMP)
        (("2" (ASSERT)
          (("2" (REPLACE -1 + RL)
            (("2"
              (LEMMA "plus_comm"
               ("r1" "f!1(e!1)" "r2" "sum(S!1, g!1) + g!1(e!1)"))
              (("2"
                (LEMMA "plus_comm" ("r1" "f!1(e!1)" "r2" "g!1(e!1)"))
                (("2" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL))

