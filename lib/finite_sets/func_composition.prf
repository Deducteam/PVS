(|func_composition|
 (|composition_injective| "" (GRIND :IF-MATCH NIL)
  (("" (INST -2 "f1!1(x1!1)" "f1!1(x2!1)") (("" (INST -1 "x1!1" "x2!1") (("" (GROUND) NIL)))))))
 (|composition_surjective| "" (GRIND) NIL)
 (|composition_bijective| "" (EXPAND "bijective?")
  (("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (REWRITE "composition_injective") NIL)
       ("2" (REWRITE "composition_surjective") NIL)))))))
 (|composition_def| "" (EXPAND "o") (("" (PROPAX) NIL)))
 (|composition_left_cancel1| "" (SKOSIMP)
  (("" (PROP)
    (("1" (APPLY-EXTENSIONALITY :HIDE? T)
      (("1" (EXPAND "injective?")
        (("1" (INST? -2)
          (("1" (ASSERT)
            (("1" (REWRITE "composition_def")
              (("1" (REWRITE "composition_def") (("1" (ASSERT) NIL)))))))))))))
     ("2" (ASSERT) NIL)))))
 (|composition_left_cancel2| "" (EXPAND "bijective?")
  (("" (SKOSIMP) (("" (REWRITE "composition_left_cancel1") NIL)))))
 (|composition_right_cancel1| "" (SKOSIMP)
  (("" (PROP)
    (("1" (APPLY-EXTENSIONALITY :HIDE? T)
      (("1" (EXPAND "surjective?")
        (("1" (INST?)
          (("1" (SKOLEM!)
            (("1" (REPLACE -2 + RL)
              (("1" (REWRITE "composition_def")
                (("1" (REWRITE "composition_def") (("1" (ASSERT) NIL)))))))))))))))
     ("2" (ASSERT) NIL)))))
 (|composition_right_cancel2| "" (EXPAND "bijective?")
  (("" (SKOSIMP) (("" (REWRITE "composition_right_cancel1") NIL))))))
