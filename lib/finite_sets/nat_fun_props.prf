(|nat_fun_props|
 (|injection_n_to_m| "" (INDUCT "n")
  (("1" (ASSERT) NIL)
   ("2" (SKOSIMP*)
    (("2" (TYPEPRED "f!1(0)")
      (("2" (ASSERT)
        (("2" (HIDE -1)
          (("2" (INST -1 "m!1 - 1")
            (("2" (ASSERT)
              (("2" (DELETE 2)
                (("2"
                  (INST 1
                   "LAMBDA (x : below[j!1]) : IF f!1(x) = m!1 - 1 THEN f!1(j!1) ELSE f!1(x) ENDIF")
                  (("1" (EXPAND "injective?")
                    (("1" (SKOSIMP)
                      (("1" (LIFT-IF)
                        (("1" (LIFT-IF)
                          (("1" (INST-CP -2 "x1!1" "j!1")
                            (("1" (INST-CP -2 "x2!1" "j!1")
                              (("1" (INST -2 "x1!1" "x2!1")
                                (("1" (ASSERT) (("1" (ASSERT) NIL)))))))))))))))))
                   ("2" (SKOSIMP) (("2" (ASSERT) NIL)))
                   ("3" (SKOSIMP)
                    (("3" (EXPAND "injective?")
                      (("3" (INST -2 "x!1" "j!1") (("3" (ASSERT) NIL)))))))))))))))))))))))))
 (|surjection_n_to_m| "" (SKOSIMP*)
  (("" (REWRITE "injection_n_to_m")
    (("" (EXPAND "surjective?")
      (("" (INST -1 "0")
        (("" (SKOSIMP)
          (("" (ASSERT)
            (("" (INST 1 "inverse(f!1)")
              (("1" (REWRITE "inj_inv") (("1" (INST 1 "x!1") NIL)))
               ("2" (INST 1 "x!1") NIL)))))))))))))))
 (|bijection_n_to_m| "" (SKOLEM!)
  (("" (PROP)
    (("1" (EXPAND "bijective?")
      (("1" (SKOSIMP)
        (("1" (LEMMA "injection_n_to_m" ("n" "n!1" "m" "m!1"))
          (("1" (LEMMA "surjection_n_to_m" ("n" "n!1" "m" "m!1"))
            (("1" (SPLIT) (("1" (ASSERT) (("1" (INST?) NIL))) ("2" (INST?) NIL)))))))))))
     ("2" (INST 1 "LAMBDA (x : below[n!1]) : x")
      (("1" (GRIND) NIL) ("2" (SKOLEM!) (("2" (ASSERT) NIL))))))))))