(|bv_arith_caret| (|bv_shift_TCC1| "" (AUTO-REWRITE-THEORY "integers") (("" (ASSERT) NIL))) (|bv_shift_TCC2| "" (TCC :DEFS !) NIL) (|bv_shift_TCC3| "" (TCC :DEFS !) NIL) (|bv_shift| "" (SKOSIMP*) (("" (CASE "ss!1 = 0") (("1" (REPLACE -1) (("1" (EXPAND "exp2") (("1" (REWRITE "div_by_one") (("1" (REWRITE "bv_caret_all[N!1]") (("1" (SAME-NAME "bv2nat[N!1-ss!1]" "bv2nat[N!1]") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))))) ("2" (EXPAND "^") (("2" (REWRITE "bv2nat_as_sum[N!1]") (("2" (LEMMA "sigma_split") (("2" (INST?) (("2" (INST -1 "ss!1-1") (("1" (ASSERT) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "sigma(ss!1, N!1 - 1,
                    extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))) = 
              exp2(ss!1)*sigma(0, N!1 - 1 - ss!1,
                    extend((LAMBDA (ii: below(N!1-ss!1)): exp2(ii)* b2n(bv!1(ii+ss!1)))))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "div_sum_nat") (("1" (INST -1 "sigma(0, N!1 - 1 - ss!1,
                        extend((LAMBDA (ii: below(N!1-ss!1)):
                                  exp2(ii) * b2n(bv!1(ii + ss!1)))))" "exp2(ss!1)" "sigma(0, ss!1 - 1,
                  extend((LAMBDA (ii: below(N!1)):
                            exp2(ii) * b2n(bv!1(ii)))))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (CASE "        div(sigma(0, ss!1 - 1,
                  extend((LAMBDA
                          (ii: below(N!1)):
                            exp2(ii) * b2n(bv!1(ii))))),
            exp2(ss!1)) = 0") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "bv2nat_as_sum[N!1-ss!1]") (("1" (ASSERT) NIL))))))) ("2" (HIDE 3) (("2" (LEMMA "div_lt_nat") (("2" (INST?) (("2" (ASSERT) (("2" (HIDE 2) (("2" (LEMMA "bv2nat_as_sum[ss!1]") (("2" (INST -1 "(LAMBDA (ii: below(ss!1)): bv!1(ii))") (("2" (CASE "sigma(0, ss!1 - 1, extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))) = bv2nat((LAMBDA (ii: below(ss!1)): bv!1(ii)))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (ASSERT) NIL))))) ("2" (HIDE 2 3) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "extend") (("2" (ASSERT) (("2" (REWRITE "sigma_restrict_eq") (("1" (HIDE 2) (("1" (EXPAND "restrict") (("1" (PROPAX) NIL))))) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL))))))))))))))))))))))))))))))))))))))))))))))) ("2" (ASSERT) (("2" (AUTO-REWRITE-THEORY "integers") (("2" (HIDE 3) (("2" (LEMMA "sigma_shift") (("2" (INST -1 "extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))" "N!1-1-ss!1" "0" "ss!1") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "sigma_mult") (("2" (INST?) (("2" (ASSERT) (("2" (REPLACE -1 1 RL) (("2" (HIDE -1) (("2" (REWRITE "sigma_restrict_eq") (("2" (HIDE 2) (("2" (EXPAND "restrict") (("2" (APPLY-EXTENSIONALITY 1) (("2" (HIDE 2) (("2" (EXPAND "extend") (("2" (LIFT-IF) (("2" (LEMMA "exp2_sum") (("2" (INST?) (("2" (EXPAND "b2n") (("2" (LIFT-IF) (("2" (GROUND) NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))))) ("2" (HIDE 3) (("2" (ASSERT) NIL))))))))))))))))) (|bv_bottom_TCC1| "" (TCC :DEFS !) NIL) (|bv_bottom| "" (SKOSIMP*) (("" (CASE "ss!1 = N!1-1") (("1" (REPLACE -1) (("1" (REWRITE "mod_lt_nat") (("1" (REWRITE "bv_caret_all[N!1]") (("1" (SAME-NAME "bv2nat[ss!1 + 1]" "bv2nat[N!1]") (("1" (ASSERT) NIL) ("2" (ASSERT) NIL))))))))) ("2" (REWRITE "bv2nat_as_sum[N!1]") (("2" (LEMMA "sigma_split") (("2" (INST -1 "extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))" "N!1-1" "0" "ss!1") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "sigma_shift") (("2" (INST -1 "extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))" "N!1-ss!1-2" "0" "ss!1+1") (("2" (ASSERT) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (EXPAND "extend" 2 2) (("2" (CASE "sigma(0, N!1 - 2 - ss!1,
                    (LAMBDA (n: nat):
                       IF 1 + n + ss!1 < N!1 THEN exp2(1 + n + ss!1)
                           * b2n(bv!1(1 + n + ss!1))
                       ELSE 0
                       ENDIF)) =
              exp2(ss!1+1)*
              sigma(0, N!1 - ss!1 - 2,
                    (LAMBDA
                     (n: nat):
                       IF n + ss!1 + 1 < N!1 THEN exp2(n)
                           * b2n(bv!1(n + ss!1 + 1))
                       ELSE 0
                       ENDIF))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (LEMMA "mod_sum") (("1" (INST -1 "sigma(0, ss!1, extend((LAMBDA (ii: below(N!1)
):
                            exp2(ii) * b2n(bv!1(ii)))))" "exp2(ss!1 + 1)" "sigma(0, N!1 - ss!1 - 2,
                        (LAMBDA (n: nat):
                           IF n + ss!1 + 1 < N!1 THEN exp2(n)
                               * b2n(bv!1(n + ss!1 + 1))
                           ELSE 0
                           ENDIF))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "mod_lt_nat") (("1" (REWRITE "bv2nat_as_sum[ss!1+1]") (("1" (REWRITE "sigma_restrict_eq") (("1" (HIDE 2 3) (("1" (EXPAND "restrict") (("1" (APPLY-EXTENSIONALITY 1) (("1" (HIDE 2) (("1" (EXPAND "extend") (("1" (LIFT-IF) (("1" (EXPAND "^") (("1" (PROPAX) NIL))))))))))))))))))) ("2" (HIDE 2 3) (("2" (LEMMA "bv2nat_as_sum[ss!1+1]") (("2" (INST -1 "(LAMBDA (ii: below(ss!1+1)): bv!1(ii))") (("2" (ASSERT) (("2" (CASE "  sigma(0, ss!1,
            extend((LAMBDA (ii: below(N!1)): exp2(ii) * b2n(bv!1(ii))))) =sigma(0, ss!1,
              extend((LAMBDA (ii: below(ss!1 + 1)):
                        exp2(ii) * b2n(bv!1(ii)))))") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REPLACE -1 + RL) (("1" (HIDE -1) (("1" (ASSERT) NIL))))))))) ("2" (HIDE -1 2) (("2" (REWRITE "sigma_restrict_eq") (("2" (HIDE 2) (("2" (EXPAND "restrict") (("2" (EXPAND "extend") (("2" (PROPAX) NIL))))))))))))))))))))))))))))))))))) ("2" (HIDE 2 3) (("2" (LEMMA "sigma_mult") (("2" (INST?) (("2" (REPLACE -1 + RL) (("2" (HIDE -1) (("2" (ASSERT) (("2" (REWRITE "sigma_restrict_eq") (("2" (HIDE 2) (("2" (EXPAND "restrict") (("2" (APPLY-EXTENSIONALITY 1) (("1" (HIDE 2) (("1" (LEMMA "exp2_sum") (("1" (INST -1 "x!1" "ss!1+1") (("1" (LIFT-IF) (("1" (GROUND) NIL))))))))) ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL))))))))))))))))))))))))))))))))))))))))))))))))))))))) (|bv_top_TCC1| "" (SKOSIMP*) (("" (TYPEPRED "bv2nat[N!1](bv!1)") (("" (EXPAND "div") (("" (LEMMA "both_sides_div_pos_lt1") (("" (INST?) (("" (INST -1 "exp2(N!1)") (("" (ASSERT) (("" (REWRITE "exp2_minus" :DIR RL) (("" (ASSERT) NIL))))))))))))))))) (|bv_top| "" (SKOSIMP*) (("" (LEMMA "bv_shift") (("" (INST?) (("" (REPLACE -1 1 RL) (("" (HIDE -1) (("" (REWRITE "nat2bv_inv[N!1-ss!1]") NIL))))))))))) (|bv_bot_TCC1| "" (SAME-NAME-TCC) NIL) (|bv_bot| "" (SKOSIMP*) (("" (LEMMA "bv_bottom") (("" (INST?) (("" (REPLACE -1 1 RL) (("" (HIDE -1) (("" (REWRITE "nat2bv_inv[nn!1+1]") NIL))))))))))) (|bv_add_subrange| "" (SKOSIMP*) (("" (REWRITE "bv2nat_inj") (("" (HIDE 2) (("" (REWRITE "bv_add_mod[nn!1+1]") (("" (REWRITE "bv_bottom") (("" (REWRITE "bv_add_mod[N!1]") (("" (REWRITE "bv_bottom") (("" (REWRITE "bv_bottom") (("" (REWRITE "mod_of_mod") (("" (LEMMA "mod_of_mod") (("" (INST -1 "bv2nat(bv2!1)" "bv2nat(bv1!1)" "exp2(nn!1+1)") (("" (REPLACE -1) (("" (HIDE -1) (("" (CASE "bv2nat(bv1!1) + bv2nat(bv2!1) < exp2(N!1)") (("1" (REWRITE "mod_lt_nat") (("1" (ASSERT) NIL))) ("2" (REWRITE "mod_gt") (("2" (LEMMA "exp2_sum") (("2" (INST -1 "N!1-nn!1-1" "1+nn!1") (("2" (SIMPLIFY -1) (("2" (REPLACE -1) (("2" (HIDE -1) (("2" (LEMMA "mod_sum_pos") (("2" (INST -1 "bv2nat(bv1!1) + bv2nat(bv2!1)" "-exp2(N!1 - 1 - nn!1)" "exp2(1+nn!1)") (("2" (ASSERT) NIL))))))))))))))))))))))))))))))))))))))))))))) (|bv_plus_caret| "" (SKOSIMP*) (("" (REWRITE "bv2nat_inj") (("" (HIDE 2) (("" (REWRITE "bv_bottom") (("" (REWRITE "bv_plus") (("" (REWRITE "bv_plus[nn!1+1]") (("" (REWRITE "bv_bottom") (("" (LEMMA "mod_of_mod") (("" (INST -1 "i!1" "bv2nat(bv1!1)" "exp2(1+nn!1)") (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "exp2_sum") (("" (INST -1 "N!1-nn!1-1" "nn!1+1") (("" (SIMPLIFY -1) (("" (REPLACE -1) (("" (HIDE -1) (("" (LEMMA "mod_mult") (("" (INST -1 "bv2nat(bv1!1)+i!1" "exp2(1+nn!1)" "exp2(N!1 - 1 - nn!1)") (("" (ASSERT) NIL))))))))))))))))))))))))))))))))))))) (|bv_middle_TCC1| "" (SUBTYPE-TCC) NIL) (|bv_middle_TCC2| "" (SUBTYPE-TCC) NIL) (|bv_middle_TCC3| "" (SUBTYPE-TCC) NIL) (|bv_middle| "" (SKOSIMP*) (("" (CASE "bv!1^(i!1,j!1) =  bv!1^(n!1-1,j!1)^(i!1-j!1,0)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REWRITE "bv_bottom") (("1" (REWRITE "bv_shift") (("1" (ASSERT) NIL NIL)) NIL)) NIL)) NIL)) NIL) ("2" (HIDE 2) (("2" (APPLY-EXTENSIONALITY 1 :HIDE? T) (("2" (GRIND) NIL NIL)) NIL)) NIL) ("3" (ASSERT) NIL NIL) ("4" (ASSERT) NIL NIL) ("5" (ASSERT) NIL NIL) ("6" (ASSERT) NIL NIL)) NIL)) NIL) (|bv2nat_caret_00_TCC1| "" (SUBTYPE-TCC) NIL) (|bv2nat_caret_00_TCC2| "" (SUBTYPE-TCC) NIL) (|bv2nat_caret_00| "" (SKOSIMP*) (("" (GRIND) NIL))) (|bv2nat_lem_TCC1| "" (SUBTYPE-TCC) NIL) (|bv2nat_lem_TCC2| "" (SUBTYPE-TCC) NIL) (|bv2nat_lem_TCC3| "" (SUBTYPE-TCC) NIL) (|bv2nat_lem_TCC4| "" (SUBTYPE-TCC) NIL) (|bv2nat_lem| "" (SKOSIMP*) (("" (REWRITE "bv_shift") (("" (EXPAND "exp2") (("" (EXPAND "exp2") (("" (LEMMA "bv_bottom") (("" (INST?) (("" (INST -1 "0") (("" (CASE "bv2nat(bv!1 ^ (0, 0)) = b2n(bv!1^0)") (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (REPLACE -1) (("1" (HIDE -1) (("1" (EXPAND "exp2") (("1" (EXPAND "exp2") (("1" (EXPAND "div") (("1" (EXPAND "mod") (("1" (PROPAX) NIL))))))))))))))))) ("2" (HIDE -1 2) (("2" (REWRITE "bv2nat_caret_00") NIL))))))))))))))))))))
