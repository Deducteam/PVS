(bv_arith_nat_caret_rules (bv_shift_rule_TCC1 0 (bv_shift_rule_TCC1-1 nil 3249241293 3249243283 ("" (subtype-tcc) nil nil) proved nil 41 40 nil nil)) (bv_shift_rule_TCC2 0 (bv_shift_rule_TCC2-1 nil 3249241293 3249243283 ("" (subtype-tcc) nil nil) proved nil 39 40 nil nil)) (bv_shift_rule_TCC3 0 (bv_shift_rule_TCC3-1 nil 3249241293 3249243284 ("" (subtype-tcc) nil nil) proved nil 214 60 nil nil)) (bv_shift_rule 0 (bv_shift_rule-1 nil 3249241293 3249243284 ("" (skosimp*) (("" (rewrite "bv_shift") nil)) nil) proved ((bv_shift formula-decl nil bv_arith_caret nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (posnat nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (below type-eq-decl nil naturalnumbers nil) (bit type-eq-decl nil bit nil) (bvec type-eq-decl nil bv nil)) 310 150 nil nil)) (bv_bottom_rule_TCC1 0 (bv_bottom_rule_TCC1-1 nil 3249241293 3249243284 ("" (subtype-tcc) nil nil) proved nil 188 30 nil nil)) (bv_bottom_rule 0 (bv_bottom_rule-1 nil 3249241293 3249243285 ("" (skosimp*) (("" (rewrite "bv_bottom") nil)) nil) proved ((bv_bottom formula-decl nil bv_arith_caret nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (posnat nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (below type-eq-decl nil naturalnumbers nil) (bit type-eq-decl nil bit nil) (bvec type-eq-decl nil bv nil)) 300 150 nil nil)) (bv_middle_rule_TCC1 0 (bv_middle_rule_TCC1-1 nil 3249241293 3249243285 ("" (subtype-tcc) nil nil) proved ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (> const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (posnat nonempty-type-eq-decl nil integers nil) (< const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (below type-eq-decl nil naturalnumbers nil)) 313 120 nil nil)) (bv_middle_rule_TCC2 0 (bv_middle_rule_TCC2-1 nil 3249241293 3249243286 ("" (subtype-tcc) nil nil) proved ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (> const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (posnat nonempty-type-eq-decl nil integers nil) (< const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (below type-eq-decl nil naturalnumbers nil)) 551 240 nil nil)) (bv_middle_rule_TCC3 0 (bv_middle_rule_TCC3-1 nil 3249241293 3249243286 ("" (subtype-tcc) nil nil) proved ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (> const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (posnat nonempty-type-eq-decl nil integers nil) (< const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (below type-eq-decl nil naturalnumbers nil)) 402 250 nil nil)) (bv_middle_rule 0 (bv_middle_rule-1 nil 3249241293 3249243287 ("" (skosimp*) (("" (rewrite "bv_middle") nil)) nil) proved ((bv_middle formula-decl nil bv_arith_caret nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (posnat nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (below type-eq-decl nil naturalnumbers nil) (bit type-eq-decl nil bit nil) (bvec type-eq-decl nil bv nil)) 569 210 nil nil)) (bv_caret_00_rule_TCC1 0 (bv_caret_00_rule_TCC1-1 nil 3249241293 3249243287 ("" (subtype-tcc) nil nil) proved nil 30 30 nil nil)) (bv_caret_00_rule 0 (bv_caret_00_rule-1 nil 3249241293 3249243287 ("" (skosimp*) (("" (rewrite "bv2nat_caret_00") nil)) nil) proved ((bv2nat_caret_00 formula-decl nil bv_arith_caret nil) (number nonempty-type-decl nil numbers nil) (boolean nonempty-type-decl nil booleans nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (bool nonempty-type-eq-decl nil booleans nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (posnat nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (below type-eq-decl nil naturalnumbers nil) (bit type-eq-decl nil bit nil) (bvec type-eq-decl nil bv nil)) 263 110 nil nil)) (bv2nat_lem_rule_TCC1 0 (bv2nat_lem_rule_TCC1-1 nil 3249241293 3249243287 ("" (subtype-tcc) nil nil) proved nil 34 30 nil nil)) (bv2nat_lem_rule_TCC2 0 (bv2nat_lem_rule_TCC2-1 nil 3249241293 3249243287 ("" (skosimp*) (("" (auto-rewrite-theory "integers") (("" (auto-rewrite-theory "rationals") (("" (assert) nil)))))) nil) proved nil 229 80 nil nil)) (bv2nat_lem_rule_TCC3 0 (bv2nat_lem_rule_TCC3-1 nil 3249241293 3249243287 ("" (subtype-tcc) nil nil) proved nil 33 30 nil nil)) (bv2nat_lem_rule_TCC4 0 (bv2nat_lem_rule_TCC4-1 nil 3249241293 3249243288 ("" (subtype-tcc) nil nil) proved nil 30 30 nil nil)) (bv2nat_lem_rule 0 (bv2nat_lem_rule-1 nil 3249241293 3249243288 ("" (skosimp*) (("" (lemma "bv2nat_lem") (("" (inst -1 "n!1" "bv!1") (("" (assert) nil)))))) nil) proved ((bv2nat_lem formula-decl nil bv_arith_caret nil) (bvec type-eq-decl nil bv nil) (bit type-eq-decl nil bit nil) (below type-eq-decl nil naturalnumbers nil) (< const-decl "bool" reals nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (>= const-decl "bool" reals nil) (above nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (bool nonempty-type-eq-decl nil booleans nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (boolean nonempty-type-decl nil booleans nil) (number nonempty-type-decl nil numbers nil)) 804 340 nil nil)))
