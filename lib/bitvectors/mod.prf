(mod (ml3 0
      (ml3-1 nil 3341424447 3341424562
       ("" (skolem!)
        (("" (expand "abs")
          (("" (lemma "both_sides_times_pos_lt1")
            (("" (lift-if)
              (("" (ground)
                (("1" (inst - "m!1" "floor(i!1 / m!1)" "i!1 / m!1")
                  (("1" (assert) nil nil)) nil)
                 ("2" (inst - "m!1" "i!1 / m!1" "1 + floor(i!1 / m!1)")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_real nonempty-type-eq-decl nil real_types nil)
        (> const-decl "bool" reals nil)
        (posreal nonempty-type-eq-decl nil real_types nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (integer nonempty-type-from-decl nil integers nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (<= const-decl "bool" reals nil)
        (< const-decl "bool" reals nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (both_sides_times_pos_lt1 formula-decl nil real_props nil))
       26924 1680 t shostak))
     (ml4 0
      (ml4-1 nil 3341424588 3341424658
       ("" (skolem!)
        (("" (expand "abs")
          (("" (lemma "both_sides_times_pos_lt1")
            (("" (lift-if)
              (("" (ground)
                (("1"
                  (inst - "m!1" "-i!1 / m!1" "1 + floor(-i!1 / m!1)")
                  (("1" (assert) nil nil)) nil)
                 ("2" (inst - "m!1" "floor(-i!1 / m!1)" "-i!1 / m!1")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_real nonempty-type-eq-decl nil real_types nil)
        (> const-decl "bool" reals nil)
        (posreal nonempty-type-eq-decl nil real_types nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (integer nonempty-type-from-decl nil integers nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (<= const-decl "bool" reals nil)
        (< const-decl "bool" reals nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (both_sides_times_pos_lt1 formula-decl nil real_props nil))
       56626 1720 t shostak))
     (mod_TCC1 0
      (mod_TCC1-1 nil 3341424436 3341424819
       ("" (skolem!)
        (("" (case "j!1 >= 0")
          (("1" (assert)
            (("1" (use "ml3")
              (("1" (expand "abs") (("1" (propax) nil nil)) nil)) nil))
            nil)
           ("2" (assert)
            (("2" (lemma "ml4")
              (("2" (inst - "i!1" "-j!1")
                (("2" (expand "abs")
                  (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((nonzero_integer nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (>= const-decl "bool" reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (ml3 formula-decl nil mod nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (ml4 formula-decl nil mod nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (numfield nonempty-type-eq-decl nil number_fields nil))
       43089 3450 t nil))
     (mod_pos 0
      (mod_pos-1 nil 3341424826 3341424958
       ("" (skolem!)
        (("" (typepred "mod(i!1, m!1)")
          (("" (tcc)
            (("" (lemma "both_sides_times_pos_le1")
              (("" (inst - "m!1" "floor(i!1 / m!1)" "i!1 / m!1")
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((posreal nonempty-type-eq-decl nil real_types nil)
        (integer nonempty-type-from-decl nil integers nil)
        (<= const-decl "bool" reals nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (both_sides_times_pos_le1 formula-decl nil real_props nil)
        (boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (< const-decl "bool" reals nil)
        (>= const-decl "bool" reals nil)
        (nonneg_real nonempty-type-eq-decl nil real_types nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil))
       1214 1120 t shostak))
     (mod_TCC2 0
      (mod_TCC2-1 nil 3341424436 3341424982
       ("" (skolem!) (("" (rewrite "mod_pos") nil nil)) nil) proved
       ((mod_pos formula-decl nil mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil))
       20476 190 t nil))
     (mod_even 0
      (mod_even-1 nil 3341424996 3341425023
       ("" (skosimp)
        (("" (expand "mod")
          (("" (rewrite "floor_int") (("" (assert) nil nil)) nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (integer nonempty-type-from-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (floor_int formula-decl nil floor_ceil nil))
       26956 800 t shostak))
     (mod_neg 0
      (mod_neg-1 nil 3341425033 3341425197
       ("" (auto-rewrite-theory "integers")
        (("" (skolem!)
          (("" (lift-if)
            (("" (expand "mod")
              (("" (case "-i!1 / j!1 = -(i!1 / j!1)")
                (("1" (replace -1)
                  (("1" (ground)
                    (("1" (rewrite "floor_int")
                      (("1" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (rewrite "floor_neg")
                  (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (floor_neg formula-decl nil floor_ceil nil)
        (integer? const-decl "bool" integers nil)
        (closed_neg formula-decl nil integers nil)
        (floor_int formula-decl nil floor_ceil nil)
        (integer nonempty-type-from-decl nil integers nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (= const-decl "[T, T -> boolean]" equalities nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil))
       55387 3060 t shostak))
     (mod_neg_d 0
      (mod_neg_d-1 nil 3341425208 3341425471
       ("" (auto-rewrite-theory "integers")
        (("" (skolem!)
          (("" (lift-if)
            (("" (expand "mod")
              (("" (case "i!1 / -j!1 = -(i!1 / j!1)")
                (("1" (replace -1)
                  (("1" (rewrite "floor_neg")
                    (("1" (lift-if)
                      (("1" (ground)
                        (("1" (rewrite "floor_int")
                          (("1" (assert) nil nil)) nil)
                         ("2" (case "integer_pred(--(i!1 / j!1))")
                          (("1" (assert) nil nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((nonzero_integer nonempty-type-eq-decl nil integers nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (= const-decl "[T, T -> boolean]" equalities nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (floor_neg formula-decl nil floor_ceil nil)
        (integer? const-decl "bool" integers nil)
        (closed_neg formula-decl nil integers nil)
        (floor_int formula-decl nil floor_ceil nil)
        (integer nonempty-type-from-decl nil integers nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil))
       1574 1430 t shostak))
     (mod_eq_arg 0
      (mod_eq_arg-1 nil 3341425474 3341425483 ("" (tcc) nil nil) proved
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (/= const-decl "boolean" notequal nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil))
       9179 710 t shostak))
     (mod_lt 0
      (mod_lt-1 nil 3341425485 3341425635
       ("" (grind :rewrites ("floor_small" "pos_div_ge")) nil nil)
       proved
       ((sgn const-decl "int" floor_div_props nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (floor_small formula-decl nil floor_div_props nil)
        (pos_div_ge formula-decl nil real_props nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number nonempty-type-decl nil numbers nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (boolean nonempty-type-decl nil booleans nil))
       16023 1530 t shostak))
     (mod_lt_nat 0
      (mod_lt_nat-1 nil 3341425653 3341425706
       ("" (skosimp)
        (("" (rewrite "mod_lt")
          (("1" (expand "sgn") (("1" (propax) nil nil)) nil)
           ("2" (expand "abs") (("2" (propax) nil nil)) nil))
          nil))
        nil)
       proved
       ((mod_lt formula-decl nil mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (sgn const-decl "int" floor_div_props nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil))
       52961 810 t shostak))
     (mod_lt_int 0
      (mod_lt_int-1 nil 3341425710 3341425748
       ("" (skosimp)
        (("" (rewrite "mod_lt")
          (("1" (expand "sgn")
            (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil)
           ("2" (expand "abs")
            (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
          nil))
        nil)
       proved
       ((mod_lt formula-decl nil mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (sgn const-decl "int" floor_div_props nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil))
       38121 1550 t shostak))
     (mod_sum_pos 0
      (mod_sum_pos-1 nil 3341425771 3341425808
       ("" (skolem!)
        (("" (expand "mod")
          (("" (lemma "floor_plus_int")
            (("" (inst - "k!1 * m!1 / m!1" "i!1 / m!1")
              (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (integer nonempty-type-from-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (* const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (int nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (floor_plus_int formula-decl nil floor_ceil nil))
       36952 1520 t shostak))
     (mod_gt 0
      (mod_gt-1 nil 3341425822 3341425863
       ("" (skosimp)
        (("" (lemma "mod_sum_pos")
          (("" (inst - "i!1" -1 "m!1")
            (("" (replace -1 * rl)
              (("" (rewrite "mod_lt_int")
                (("" (lift-if) (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod_sum_pos formula-decl nil mod nil)
        (* const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (mod_lt_int formula-decl nil mod nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (>= const-decl "bool" reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil))
       40889 1200 t shostak))
     (mod_sum 0
      (mod_sum-1 nil 3341425866 3341425898
       ("" (skolem!)
        (("" (expand "mod")
          (("" (lemma "floor_plus_int")
            (("" (inst - "k!1 * j!1 / j!1" "i!1 / j!1")
              (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (integer nonempty-type-from-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (* const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (floor_plus_int formula-decl nil floor_ceil nil))
       31282 1460 t shostak))
     (mod_sum_nat 0
      (mod_sum_nat-1 nil 3341425900 3341425956
       ("" (skolem!)
        (("" (lift-if)
          (("" (ground)
            (("1" (rewrite "mod_lt_nat") nil nil)
             ("2" (lemma "mod_sum")
              (("2" (inst - "n1!1 + n2!1" "m!1" -1)
                (("2" (rewrite "mod_lt_nat") (("2" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod_sum formula-decl nil mod nil)
        (* const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (mod_lt_nat formula-decl nil mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (< const-decl "bool" reals nil)
        (below type-eq-decl nil naturalnumbers nil))
       56245 1880 t shostak))
     (mod_it_is 0
      (mod_it_is-1 nil 3341425969 3341426068
       ("" (skosimp)
        (("" (replace -1)
          (("" (hide -1)
            (("" (lemma "mod_sum")
              (("" (inst - "b!1" "m!1" "c!1")
                (("" (replace -1)
                  (("" (hide -1)
                    (("" (rewrite "mod_lt")
                      (("1" (expand "sgn") (("1" (propax) nil nil))
                        nil)
                       ("2" (expand "abs") (("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod_sum formula-decl nil mod nil)
        (mod_lt formula-decl nil mod nil)
        (sgn const-decl "int" floor_div_props nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (>= const-decl "bool" reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil))
       99476 3050 t shostak))
     (mod_zero 0
      (mod_zero-1 nil 3341426079 3341426088 ("" (tcc) nil nil) proved
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (/= const-decl "boolean" notequal nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil))
       9123 850 t shostak))
     (mod_one 0
      (mod_one-1 nil 3341426091 3341426123
       ("" (grind :rewrites ("floor_small" "pos_div_ge")) nil nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (floor_small formula-decl nil floor_div_props nil)
        (pos_div_ge formula-decl nil real_props nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (/= const-decl "boolean" notequal nil)
        (number nonempty-type-decl nil numbers nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (boolean nonempty-type-decl nil booleans nil))
       31811 2240 t shostak))
     (mod_of_mod 0
      (mod_of_mod-1 nil 3341426141 3341426186
       ("" (skolem!)
        (("" (rewrite "mod")
          (("" (lemma "mod_sum")
            (("" (inst - "i!1 + k!1" "m!1" "-floor(k!1 / m!1)")
              (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (integer nonempty-type-from-decl nil integers nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (<= const-decl "bool" reals nil)
        (< const-decl "bool" reals nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (mod_sum formula-decl nil mod nil))
       45473 1380 t shostak))
     (mod_of_mod_neg 0
      (mod_of_mod_neg-1 nil 3341426188 3341426227
       ("" (skolem!)
        (("" (rewrite "mod")
          (("" (lemma "mod_sum")
            (("" (inst - "i!1 - k!1" "m!1" "floor(k!1 / m!1)")
              (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (- const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (integer nonempty-type-from-decl nil integers nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (<= const-decl "bool" reals nil)
        (< const-decl "bool" reals nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (mod_sum formula-decl nil mod nil))
       39053 1380 t shostak))
     (mod_inj_plus 0
      (mod_inj_plus-1 nil 3341426229 3341426948
       ("" (skosimp)
        (("" (rewrite "mod_lt_nat")
          (("1" (rewrite "mod_lt_nat")
            (("1" (assert) nil nil)
             ("2" (rewrite "mod_gt") (("2" (assert) nil nil)) nil))
            nil)
           ("2" (rewrite "mod_gt")
            (("2" (rewrite "mod_lt_nat")
              (("1" (assert) nil nil)
               ("2" (rewrite "mod_gt") (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod_gt formula-decl nil mod nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (>= const-decl "bool" reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (mod_lt_nat formula-decl nil mod nil))
       1095 860 t shostak))
     (mod_inj_minus 0
      (mod_inj_minus-1 nil 3341426501 3341426597
       ("" (skosimp)
        (("" (expand "mod")
          (("" (rewrite "floor_small")
            (("1" (rewrite "floor_small")
              (("1" (grind) nil nil)
               ("2" (expand "abs")
                (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil)
       proved
       ((floor_small formula-decl nil floor_div_props nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (- const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (mod const-decl "{k | abs(k) < abs(j)}" mod nil))
       2954 2640 t shostak))
     (mod_wrap_around 0
      (mod_wrap_around-1 nil 3341426603 3341427152
       ("" (skosimp)
        (("" (expand "mod")
          (("" (use "floor_val" ("k" 1)) (("" (ground) nil nil)) nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (>= const-decl "bool" reals nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (/= const-decl "boolean" notequal nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (floor_val formula-decl nil floor_div_props nil))
       55013 3080 t shostak))
     (mod_wrap_inj 0
      (mod_wrap_inj-1 nil 3341426657 3341427197
       ("" (skosimp)
        (("" (lemma "mod_lt")
          (("" (inst-cp - "n!1 - b!1" "m!1")
            (("" (inst - "n!1 + a!1" "m!1")
              (("" (use "mod_wrap_around")
                (("" (expand* "sgn" "abs")
                  (("" (lift-if) (("" (ground) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       proved
       ((mod_lt formula-decl nil mod nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}"
             real_defs nil)
        (sgn const-decl "int" floor_div_props nil)
        (mod_wrap_around formula-decl nil mod nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (nonzero_integer nonempty-type-eq-decl nil integers nil)
        (/= const-decl "boolean" notequal nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (>= const-decl "bool" reals nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (- const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (int nonempty-type-eq-decl nil integers nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (real nonempty-type-from-decl nil reals nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number nonempty-type-decl nil numbers nil))
       32023 2140 t shostak))
     (mod_mult 0
      (mod_mult-1 nil 3341426873 3341426927
       ("" (skolem!)
        (("" (expand "mod")
          (("" (lemma "floor_plus_int")
            ((""
              (inst - "-floor(i!1 / (mj!1 * m!1)) * mj!1" "i!1 / m!1")
              (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       proved
       ((mod const-decl "{k | abs(k) < abs(j)}" mod nil)
        (number nonempty-type-decl nil numbers nil)
        (boolean nonempty-type-decl nil booleans nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (integer nonempty-type-from-decl nil integers nil)
        (numfield nonempty-type-eq-decl nil number_fields nil)
        (* const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (- const-decl "[numfield -> numfield]" number_fields nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (AND const-decl "[bool, bool -> bool]" booleans nil)
        (<= const-decl "bool" reals nil)
        (< const-decl "bool" reals nil)
        (+ const-decl "[numfield, numfield -> numfield]" number_fields
           nil)
        (floor const-decl "{i | i <= x & x < i + 1}" floor_ceil nil)
        (/= const-decl "boolean" notequal nil)
        (nznum nonempty-type-eq-decl nil number_fields nil)
        (/ const-decl "[numfield, nznum -> numfield]" number_fields
           nil)
        (int nonempty-type-eq-decl nil integers nil)
        (>= const-decl "bool" reals nil)
        (nonneg_int nonempty-type-eq-decl nil integers nil)
        (> const-decl "bool" reals nil)
        (posnat nonempty-type-eq-decl nil integers nil)
        (floor_plus_int formula-decl nil floor_ceil nil))
       53913 1900 t shostak)))

