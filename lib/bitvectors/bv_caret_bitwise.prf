(bv_caret_bitwise (bv_OR_caret_TCC1 0 (bv_OR_caret_TCC1-1 nil 3249241285 3249243087 ("" (subtype-tcc) nil nil) proved nil 287 130 nil nil)) (bv_OR_caret 0 (bv_OR_caret-1 nil 3249241285 3249243089 ("" (skosimp*) (("" (expand "^") (("" (expand "OR") (("" (propax) nil)))))) nil) proved ((^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil) (OR const-decl "bvec[N]" bv_bitwise nil)) 1267 600 nil nil)) (bv_AND_caret 0 (bv_AND_caret-1 nil 3249241285 3249243090 ("" (skosimp*) (("" (expand "AND") (("" (expand "^") (("" (propax) nil)))))) nil) proved ((AND const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil)) 954 490 nil nil)) (bv_IFF_caret 0 (bv_IFF_caret-1 nil 3249241285 3249243092 ("" (skosimp*) (("" (expand "IFF") (("" (expand "^") (("" (propax) nil)))))) nil) proved ((IFF const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil)) 1003 490 nil nil)) (bv_XOR_caret 0 (bv_XOR_caret-1 nil 3249241285 3249243093 ("" (skosimp*) (("" (expand "XOR") (("" (expand "^") (("" (propax) nil)))))) nil) proved ((XOR const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil)) 954 500 nil nil)) (bv_NOT_caret 0 (bv_NOT_caret-1 nil 3249241285 3249243095 ("" (skosimp*) (("" (expand "NOT") (("" (expand "^") (("" (propax) nil)))))) nil) proved ((NOT const-decl "bvec[N]" bv_bitwise nil) (^ const-decl "bvec[PROJ_1(sp) - PROJ_2(sp) + 1]" bv_caret nil)) 951 440 nil nil)))
