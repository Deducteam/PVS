(|bv_arith_concat| (|bv_concat_null_r| "" (SKOSIMP*) (("" (APPLY-EXTENSIONALITY 1) (("" (HIDE 2) (("" (EXPAND "o ") (("" (PROPAX) NIL)))))))))
 (|bv_concat_null_l| "" (SKOSIMP*) (("" (APPLY-EXTENSIONALITY 1) (("" (HIDE 2) (("" (EXPAND "o ") (("" (PROPAX) NIL)))))))))
 (|bv_concat_assoc| "" (SKOSIMP*) (("" (APPLY-EXTENSIONALITY 1) (("" (HIDE 2) (("" (EXPAND "o ") (("" (LIFT-IF) (("" (GROUND) NIL)))))))))))
 (|bv_concat_top_bit_TCC1| "" (SUBTYPE-TCC) NIL) (|bv_concat_top_bit_TCC2| "" (SUBTYPE-TCC) NIL) (|bv_concat_top_bit| "" (GRIND) NIL)
 (|not_over_concat| "" (SKOSIMP*) (("" (EXPAND "NOT") (("" (APPLY-EXTENSIONALITY) (("" (HIDE 2) (("" (GRIND) NIL)))))))))
 (|bv2nat_concat_TCC1| "" (SAME-NAME-TCC) NIL)
 (|bv2nat_concat| "" (SKOSIMP*)
  (("" (CASE "m!1 = 0")
    (("1" (REPLACE -1)
      (("1" (EXPAND "bv2nat" 1 3)
        (("1" (EXPAND "bv2nat_rec")
          (("1" (REWRITE "bvconcat_bot0")
            (("1" (EXPAND "exp2")
              (("1" (REPLACE -1) (("1" (ASSERT) (("1" (SAME-NAME "bv2nat[n!1 + m!1]" "bv2nat[n!1]") (("1" (ASSERT) NIL)))))))))))))))))
     ("2" (CASE "n!1 = 0")
      (("1" (EXPAND "bv2nat" + 2)
        (("1" (SAME-NAME "bv2nat[n!1 + m!1]" "bv2nat[m!1]")
          (("1" (REPLACE -1) (("1" (EXPAND "bv2nat_rec") (("1" (ASSERT) (("1" (REWRITE "bvconcat_top0") NIL))))))) ("2" (PROPAX) NIL)))))
       ("2" (REWRITE "bv2nat_as_sum[n!1+m!1]")
        (("2" (LEMMA "sigma_split")
          (("2"
            (INST -1 "extend((LAMBDA (ii: below(n!1 + m!1)):
                      exp2(ii) * (bvn!1 o bvm!1)(ii)))" "n!1+m!1-1" "0" "m!1-1")
            (("1" (ASSERT)
              (("1" (REPLACE -1)
                (("1" (HIDE -1)
                  (("1"
                    (CASE "sigma(0, m!1 - 1,
            extend((LAMBDA (ii: below(n!1 + m!1)):
                      exp2(ii) * (bvn!1 o bvm!1)(ii)))) = bv2nat[m!1](bvm!1)")
                    (("1" (REPLACE -1)
                      (("1" (HIDE -1)
                        (("1" (ASSERT)
                          (("1" (LEMMA "sigma_shift")
                            (("1" (EXPAND "extend")
                              (("1" (EXPAND "o ")
                                (("1"
                                  (INST -1 " (LAMBDA (nn: nat):
			  IF nn < n!1 + m!1 THEN exp2(nn)
			      * IF nn < m!1 THEN bvm!1(nn)
				ELSE bvn!1(nn - m!1)
				ENDIF
			  ELSE 0
			  ENDIF)" "n!1-1" "0" "m!1")
                                  (("1" (ASSERT)
                                    (("1" (REPLACE -1)
                                      (("1" (HIDE -1)
                                        (("1" (REWRITE "bv2nat_as_sum[n!1]")
                                          (("1" (LEMMA "sigma_mult")
                                            (("1" (INST -1 "extend((LAMBDA (ii: below(n!1)): exp2(ii) * bvn!1(ii)))" "n!1-1" "0" "exp2(m!1)")
                                              (("1" (REPLACE -1 + RL)
                                                (("1" (HIDE -1)
                                                  (("1" (EXPAND "extend")
                                                    (("1" (REWRITE "sigma_restrict_eq")
                                                      (("1" (HIDE 2 3 4)
                                                        (("1" (EXPAND "restrict")
                                                          (("1" (APPLY-EXTENSIONALITY 1)
                                                            (("1" (HIDE 2)
                                                              (("1" (LIFT-IF) (("1" (LEMMA "exp2_sum") (("1" (INST?) (("1" (GROUND) NIL)))))))))
                                                             ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL)))))))))))
                                                       ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL)))))))))))))))))))))))))
                                   ("2" (SKOSIMP*) (("2" (ASSERT) NIL)))))))))))))))))
                     ("2" (ASSERT)
                      (("2" (HIDE 4)
                        (("2" (REWRITE "bv2nat_as_sum[m!1]")
                          (("2" (REWRITE "sigma_restrict_eq")
                            (("2" (HIDE 2)
                              (("2" (EXPAND "extend")
                                (("2" (EXPAND "restrict")
                                  (("2" (APPLY-EXTENSIONALITY 1)
                                    (("1" (HIDE 2) (("1" (LIFT-IF) (("1" (GROUND) (("1" (EXPAND "o ") (("1" (PROPAX) NIL)))))))))
                                     ("2" (HIDE 2) (("2" (SKOSIMP*) (("2" (ASSERT) NIL)))))
                                     ("3" (HIDE 2) (("3" (SKOSIMP*) (("3" (ASSERT) NIL)))))))))))))))))))))))))))))
             ("2" (ASSERT) NIL) ("3" (ASSERT) NIL))))))))))))))
