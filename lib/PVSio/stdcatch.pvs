%% stdcatch.pvs
%% Definition of catch and throw 
%% Release PVSio-2.d (11/09/05)

stdcatch[T1,T2:TYPE+] : THEORY
BEGIN

  IMPORTING stdlang,stdexc

  catch_lift(tag:ExceptionTag[T2],
             t1:[Dummy->T1],
             t2:[Exception[T2]->T1]) : T1

  catch(tag:ExceptionTag[T2],
        t1:T1,
        t2:[Exception[T2]->T1]) : MACRO T1 =
    catch_lift(tag,LAMBDA(d:Dummy):t1,t2)

  catch_list_lift(l:list[ExceptionTag[T2]],
                  f1:[Dummy->T1],
                  f2:[Exception[T2]->T1]) : RECURSIVE T1 =
    CASES l OF
      null : f1(dummy),
      cons(e,r) : catch_lift(e,
                             LAMBDA(d:Dummy):catch_list_lift(r,f1,f2),
                             f2)
    ENDCASES
    MEASURE l BY <<  

  catch(l:list[ExceptionTag[T2]],t1:T1,t2:[Exception[T2]->T1]) : MACRO T1 =
    catch_list_lift(l,LAMBDA(d:Dummy):t1,t2)

  throw(tag:ExceptionTag[T2],e:Exception[T2]):T1

  throw(tag:ExceptionTag[T2],val:T2) : MACRO T1 =
    throw(tag,make_exc(tag,val))

END stdcatch
