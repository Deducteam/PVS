#!/bin/sh

# Creates the pvs distribution tar files from the current pvs directory
# Will create
#  pvs-source.tgz  - all the sources needed to build PVS

#  pvs-system.tgz  - the system files common to all distributions
#  pvs-libraries.tgz - the finite_sets and bitvectors libraries
#  pvs-<ARCH>-<OS>.tgz - the runtime version of pvs, for the given
#                        architecture and OS
#  pvs-devel-<ARCH>-<OS>.tgz - the development version of the above

# --------------------------------------------------------------------
# PVS
# Copyright (C) 2006, SRI International.  All Rights Reserved.

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# --------------------------------------------------------------------

# pvsname="pvs4.0"

# ### Make sure the subdirectory is available.
# tempparent="make-dist.tmp.$$"
# if [ -d ${tempparent} ]; then
#   echo "${progname}: staging directory \`${tempparent}' already exists.
# Perhaps a previous invocation of \`${progname}' failed to clean up after
# itself.  Check that directories whose names are of the form
# \`make-dist.tmp.NNNNN' don't contain any important information, remove
# them, and try again." >&2
#   exit 1
# fi
# echo "Creating staging directory: \`${tempparent}'"
# mkdir ${tempparent}
# tempdir="${tempparent}/${pvsname}"

# trap "echo 'Interrupted...cleaning up the staging directory'; rm -rf ${temppar
# ent}; exit 1" 1 2 15

TARFLAGS='-cohz --mode=u+rw --atime-preserve --exclude=CVS'

version="4.1"

# pvs-source.tgz
echo Creating pvs-${version}-source.tgz
tar ${TARFLAGS} -f pvs-${version}-source.tgz --exclude pvsbin \
  pvs.system *.lisp Makefile.in README INSTALL LICENSE NOTICES \
  README.CVS README.configure \
  configure configure.in config.guess config.sub install-sh bin/make-dist \
  pvs.in pvsio.in pvs.sty pvs-tex.sub \
  bin/pvs-platform bin/relocate bin/tarmail bin/untarmail \
  lib/prelude.* lib/*.help lib/pvs-style.css lib/pvs.bnf lib/pvs.grammar \
  lib/pvs.rnc \
  lib/PVSio \
  lib/finite_sets \
  lib/bitvectors \
  src/utils/utils-ld-table src/utils/*.c wish \
  ess/*.lisp \
  ess/sys/ergolisp/rel/*.lisp \
  ess/sys/tools/rel/*.lisp \
  ess/sys/ergolisp/rel/*.lisp \
  ess/term/language/rel/*.lisp \
  ess/term/terms/rel/*.lisp \
  ess/term/trep/rel/*.lisp \
  ess/lang/sb-term/rel/*.lisp \
  ess/term/attr/rel/*.lisp \
  ess/lang/ab-term/rel/*.lisp \
  ess/sys/constr/rel/*.lisp \
  ess/README ess/term/terms/rel/*.txt \
  src/README \
  src/*.lisp \
  src/pvs-gr.txt \
  src/ground-prover/*.lisp \
  src/utils/*.lisp \
  src/interface/*.lisp \
  src/prover/*.lisp \
  src/PVSio/*.lisp \
  src/WS1S/lisp/*.lisp \
  src/abstraction/*.lisp \
  src/groundeval/*.lisp \
  src/utils/*.lisp \
  src/utils/ix86-Linux/Makefile src/utils/ix86-MacOSX/Makefile \
  src/utils/powerpc-MacOSX/Makefile \
  src/utils/sun4-SunOS5/Makefile \
  BDD/bdd-ld-table BDD/mu-ld-table \
  BDD/*.c \
  BDD/*.lisp \
  BDD/ix86-Linux/Makefile BDD/sun4-SunOS5/Makefile \
  BDD/ix86-MacOSX/Makefile BDD/powerpc-MacOSX/Makefile \
  BDD/bdd BDD/mu \
  src/WS1S/README src/WS1S/ws1s-ld-table \
  src/WS1S/*.c src/WS1S/mona-1.4 \
  src/WS1S/ix86-Linux/Makefile src/WS1S/sun4-SunOS5/Makefile \
  src/WS1S/ix86-MacOSX/Makefile src/WS1S/powerpc-MacOSX/Makefile \
  doc/pvs.bib doc/makebnf.sty doc/pvstex.tex doc/release-notes \
  doc/PVSio-2.d.pdf \
  doc/language/Makefile.in doc/language/*.tex doc/language/*.pvs \
  doc/language/pvs-doc.el.in \
  doc/prover/Makefile.in doc/prover/*.tex \
  doc/user-guide/Makefile.in doc/user-guide/*.tex \
  doc/user-guide/pvs-screen1.* doc/user-guide/pvs-tex.sub \
  doc/user-guide/sum.el doc/user-guide/sum.pvs \
  doc/release-notes/Makefile doc/release-notes/*.texi \
  emacs/README \
  emacs/go-pvs.el \
  emacs/emacs-src \
  Examples/README Examples/*.pvs \
  emacs/emacs19/Makefile
ls -l pvs-${version}-source.tgz

# pvs-system.tgz
# Check whether we have enough to build the system tar,
# If we have the most up-to-date (x)emacs, that is enough
if [ -d emacs/emacs20 -a -d emacs/xemacs21 -a -d emacs/emacs22 ]
then
pvssystemfiles="\
  README INSTALL LICENSE NOTICES pvs pvsio pvs-tex.sub pvs.sty bin/relocate \
  bin/pvs-platform bin/tar-b64-mail Examples \
  lib/prelude.pvs lib/prelude.prf lib/list_adt.pvs \
  lib/ordstruct_adt.pvs lib/character_adt.pvs \
  lib/union_adt.pvs lib/lift_adt.pvs \
  lib/pvs-language.help lib/pvs-prover.help lib/pvs.help \
  lib/pvs.grammar lib/pvs.bnf wish/pvs-support.tcl \
  lib/pvs-style.css \
  doc/release-notes/pvs-release-notes.info \
  doc/release-notes/pvs-release-notes \
  doc/release-notes/pvs-release-notes.ps \
  doc/release-notes/pvs-release-notes.pdf \
  wish/gray.xbm wish/sequent.xbm \
  emacs lib/PVSio lib/finite_sets lib/bitvectors"
tar ${TARFLAGS} -f pvs-${version}-system.tgz --exclude pvsbin $pvssystemfiles
else
echo "pvs-${version}-system.tgz not created - need emacs/emacs20 and emacs/xemacs21 and "
fi


#  pvs-libraries.tgz
# if [ -d lib/finite_sets/pvsbin -a -d lib/bitvectors/pvsbin ]
# then
# tar ${TARFLAGS} -f pvs-${version}-libraries.tgz \
#   lib/finite_sets lib/bitvectors
# else
# echo "pvs-libraries.tgz not created - need to typecheck finite_sets and bitvectors"
# fi

for platform in ix86-Linux ix86-MacOSX powerpc-MacOSX \
                sun4-SunOS5
  do
  for subdir in runtime devel
   do
   if [ "$subdir" = "runtime" ]
    then
     kind=
    else
     kind="-devel"
   fi
   if [ -e bin/${platform}/${subdir}/pvs-allegro ]
    then
     echo Creating pvs-${version}-${platform}-allegro${kind}.tgz
     tar ${TARFLAGS} -f pvs-${version}-${platform}-allegro${kind}.tgz \
          ${pvssystemfiles} \
          bin/${platform}/b64 bin/relocate \
	  bin/pvs-platform bin/tar-b64-mail \
	  bin/${platform}/${subdir}/file_utils.* \
	  bin/${platform}/${subdir}/libacl*.* \
	  bin/${platform}/${subdir}/mu.* \
	  bin/${platform}/${subdir}/ws1s.* \
	  bin/${platform}/${subdir}/pvs-allegro*
     ls -l pvs-${version}-${platform}-allegro${kind}.tgz
    else
     echo "Allegro ${subdir} not available for ${platform}"
   fi
   if [ -e bin/${platform}/${subdir}/pvs-cmulisp -a "$subdir" = "runtime" ]
    then
     echo Creating pvs-${version}-${platform}-cmulisp${kind}.tgz
     tar ${TARFLAGS} -f pvs-${version}-${platform}-cmulisp${kind}.tgz \
          ${pvssystemfiles} \
          bin/${platform}/b64 bin/relocate \
	  bin/pvs-platform bin/tar-b64-mail \
	  bin/${platform}/${subdir}/mu.* \
	  bin/${platform}/${subdir}/file_utils.* \
	  bin/${platform}/${subdir}/ws1s.* \
	  bin/${platform}/${subdir}/*-cmu.* \
	  bin/${platform}/${subdir}/lisp \
	  bin/${platform}/${subdir}/pvs-cmulisp*
     ls -l pvs-${version}-${platform}-cmulisp${kind}.tgz
    else
     echo "CMU Lisp ${subdir} not available for ${platform}"
   fi
   done
  done
