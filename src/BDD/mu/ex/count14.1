/* 14-bit counter */

domain = {
Y[13], @Y[13], W[13],
Y[12], @Y[12], W[12],
Y[11], @Y[11], W[11],
Y[10], @Y[10], W[10],
Y[9], @Y[9], W[9],
Y[8], @Y[8], W[8],
Y[7], @Y[7], W[7],
Y[6], @Y[6], W[6],
Y[5], @Y[5], W[5],
Y[4], @Y[4], W[4],
Y[3], @Y[3], W[3],
Y[2], @Y[2], W[2],
Y[1], @Y[1], W[1],
Y[0], @Y[0], W[0]
};

/* Init: */
Let S0 = L
Y[13], Y[12], Y[11], Y[10], Y[9], Y[8],
Y[7], Y[6], Y[5], Y[4], Y[3], Y[2], Y[1], Y[0]
.
none_of (
Y[13], Y[12], Y[11], Y[10], Y[9], Y[8],
Y[7], Y[6], Y[5], Y[4], Y[3], Y[2], Y[1], Y[0]
);

let N = L

Y[13], Y[12], Y[11], Y[10], Y[9], Y[8],
Y[7], Y[6], Y[5], Y[4], Y[3], Y[2], Y[1], Y[0],
@Y[13], @Y[12], @Y[11], @Y[10], @Y[9], @Y[8],
@Y[7], @Y[6], @Y[5], @Y[4], @Y[3], @Y[2], @Y[1], @Y[0]
.
E
X_0[2], X_0[1], X_0[0]
.
(X_0[0] == Y[3]  & Y[2]  & Y[1]  & Y[0] )
&
(X_0[1] == Y[6]  & Y[5]  & Y[4]  & X_0[0] )
&
(X_0[2] == Y[9]  & Y[8]  & Y[7]  & X_0[1] )
&
(@Y[13] == Y[13]  xor Y[12]  & Y[11]  & Y[10]  & X_0[2] )
&
(@Y[12] == Y[12]  xor Y[11]  & Y[10]  & X_0[2] )
&
(@Y[11] == Y[11]  xor Y[10]  & X_0[2] )
&
(@Y[10] == Y[10]  xor X_0[2] )
&
(@Y[9] == Y[9]  xor Y[8]  & Y[7]  & X_0[1] )
&
(@Y[8] == Y[8]  xor Y[7]  & X_0[1] )
&
(@Y[7] == Y[7]  xor X_0[1] )
&
(@Y[6] == Y[6]  xor Y[5]  & Y[4]  & X_0[0] )
&
(@Y[5] == Y[5]  xor Y[4]  & X_0[0] )
&
(@Y[4] == Y[4]  xor X_0[0] )
&
(@Y[3] == Y[3]  xor Y[2]  & Y[1]  & Y[0] )
&
(@Y[2] == Y[2]  xor Y[1]  & Y[0] )
&
(@Y[1] == Y[1]  xor Y[0] )
&
(@Y[0] == Y[0]')
;

[ Reachable (N,S0) ] (
Y[13], Y[12], Y[11], Y[10], Y[9], Y[8],
Y[7], Y[6], Y[5], Y[4], Y[3], Y[2], Y[1], Y[0]
);
