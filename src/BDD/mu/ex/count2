/* 2-bit counter */

/* Init: */
Let S0 = L
C[1], C[0] .
C[1]' & C[0]';

let N = L

Y[1], Y[0],
@Y[1], @Y[0] .

E in .

(@Y[1] == in & (Y[1] * Y[0]) + !in & Y[1])
&
(@Y[0] == (in * Y[0]))
;

let Nplus =

mu Z . N +

[ L
Y[1], Y[0]
,
@Y[1], @Y[0]
.
E
W[1], W[0]
.
Z (
Y[1], Y[0]
,
W[1], W[0]
)
&
Z (
W[1], W[0]
,
@Y[1], @Y[0]
)
];

write ("1: States reachable from initial state are:\n");

S0
(
Y[1], Y[0]
)
+
(
E
@Y[1], @Y[0]
.
S0
(
@Y[1], @Y[0]
)
&
Nplus
(
@Y[1], @Y[0],
Y[1], Y[0]
));

let Reach =
mu Z .
S0 +
[ L
Y[1], Y[0]
.
E
W[1], W[0]
.
Z (
W[1], W[0]
)
&
N (
W[1], W[0]
,
Y[1], Y[0]
)
]
;

write ("2: States reachable from initial state are:\n");
Reach (
Y[1], Y[0]
);

write ("3: States reachable from initial state are:\n");
Reachable(N,S0) (
Y[1], Y[0]
);
