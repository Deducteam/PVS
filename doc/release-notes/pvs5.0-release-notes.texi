@node PVS 5.0 Release Notes
@unnumbered PVS 5.0 Release Notes

PVS 5.0 is a significant new release of PVS.  The highlights include the
incorporation of the PVSio, Manip, Field, and ProofLite packages from
NASA, a new theory interpretation implementation, 

@ifnottex
@menu
* 5.0 Installation Notes::
* 5.0 Changes::
* 5.0 Incompatibilities::
@end menu
@end ifnottex

@node    5.0 Installation Notes
@section Installation Notes

The system is installed as usual; see the download pages at
@example
@url{http://pvs.csl.sri.com/download.shtml}
@end example
We strongly suggest getting a pre-built Allegro version, unless you have
concerns with the Allegro runtime click-though license, in which case get
one of the pre-built CMU or SBCL Lisp images.

Note that we are no longer providing PVS for Solaris or PowerPC on the
download page, as we have limited funds and the vast majority of our users
have Intel Macs or Linux machines.  If you do need either of these, let us
know at @email{pvs-sri@csl.sri.com}.  We will be keeping earlier versions
available for the foreseeable future.

@node    5.0 Changes
@section Changes

@itemize @minus

@item
There are now 64-bit versions available for Intel Mac and Linux for
Allegro and SBCL Common Lisp.

@item
The @code{pvs} shell script has been modified to support SBCL Common Lisp.
In addition, the load and eval capabilities have been simplified, where
@code{-l} and @code{-e} are for Emacs files and expressions, and @code{-L}
and @code{-E} are for Common Lisp files.  There was an earlier @code{-L}
flag, but it loaded the file @emph{before} PVS initialization, which is
more difficult to use.

@item
The prelude has been modified, mostly reflecting the theories that are
part of PVSio, Manip, Field, and ProofLite.  Here is the complete list of
changes:
@itemize @bullet
@item
@end itemize

@item
C@'esar Mu@~noz has provided further improvements for PVSio, which is now
more fully integrated into PVS.  In particular, no external files are needed.

@item
A new Judgement type is available

@item
Recursive judgements were recently introduced (see the 4.1 release notes),
and several bugs have been fixed.  In addition, now when recursive
judgement has a name, the corresponding formula is generated as an axiom.

@item
Auto-rewrites now find the proper instances; prior to this, the
auto-rewrites were kept in generic form, and never properly instantiated.

@item
Theory interpretations have had a number of bugs fixed.

@item
TCC subsumption tests have been improved, leading to fewer TCCs.

@item
Batch mode now saves the context; before this, Emacs was exiting without
giving lisp a chance to save.

@item
Libraries are more robust; in particular, relative library paths now work
properly when used recursively.
@end itemize

@node    5.0 Incompatibilities
@section Incompatibilities

The changes lead to some incompatibilities.  The improved judgements and
TCC subsumption lead to fewer TCCs, hence may cause TCC renumbering and
proofs may have to be shifted (@code{M-x show-orphaned-proofs} may be
useful here).

In addition to these, the improved auto-rewrites also affect proofs, as
some branches of a proof may no longer be generated, or may have a
different form.  It is usually easy to repair, though it often helps to
run an older version of PVS in parallel to figure out where the proof
deviates.  Finally, any proof that relies on the expansion of @code{the}
will need to use @code{the_lem} instead.
